{0}

{1}Effect::{1}Effect(Qt3DCore::QNode *parent)
    : GLTF2MaterialEffect(parent)
{{
    m_gl3Technique = new {1}Technique({1}Technique::GL3, this);
    m_es3Technique = new {1}Technique({1}Technique::ES3, this);
    m_es2Technique = new {1}Technique({1}Technique::ES2, this);

    addTechnique(m_gl3Technique);
    addTechnique(m_es3Technique);
    addTechnique(m_es2Technique);

#if QT_VERSION >= QT_VERSION_CHECK(6, 0, 0)
    m_rhiTechnique = new {1}Technique({1}Technique::RHI, this);
    addTechnique(m_rhiTechnique);
#endif
}}

{1}Effect::~{1}Effect() = default;


void {1}Effect::updateDoubleSided(bool doubleSided)
{{
    const auto cullingMode = doubleSided ? QCullFace::NoCulling : QCullFace::Back;
    m_gl3Technique->setCullingMode(cullingMode);
    m_es3Technique->setCullingMode(cullingMode);
    m_es2Technique->setCullingMode(cullingMode);
#if QT_VERSION >= QT_VERSION_CHECK(6, 0, 0)
    m_rhiTechnique->setCullingMode(cullingMode);
#endif
}}

void {1}Effect::updateUsingSkinning(bool useSkinning)
{{
    // Set Layers on zFill and opaque/Transparent shader builders
    auto layers = m_gl3Technique->enabledLayers();
    if (useSkinning) {{
        layers.removeAll(QStringLiteral("no-skinning"));
        layers.append(QStringLiteral("skinning"));
    }} else {{
        layers.removeAll(QStringLiteral("skinning"));
        layers.append(QStringLiteral("no-skinning"));
    }}

    updateLayersOnTechniques(layers);

    m_gl3Technique->setAllowCulling(!useSkinning);
    m_es3Technique->setAllowCulling(!useSkinning);
    m_es2Technique->setAllowCulling(!useSkinning);

#if QT_VERSION >= QT_VERSION_CHECK(6, 0, 0)
    m_rhiTechnique->setAllowCulling(!useSkinning);
#endif
}}

void {1}Effect::updateOpaque(bool opaque)
{{
    m_gl3Technique->setOpaque(opaque);
    m_es3Technique->setOpaque(opaque);
    m_es2Technique->setOpaque(opaque);

#if QT_VERSION >= QT_VERSION_CHECK(6, 0, 0)
    m_rhiTechnique->setOpaque(opaque);
#endif
}}

void {1}Effect::updateAlphaCutoffEnabled(bool enabled)
{{
    auto layers = m_gl3Technique->enabledLayers();
    if (enabled) {{
        layers.removeAll(QStringLiteral("noHasAlphaCutoff"));
        layers.append(QStringLiteral("hasAlphaCutoff"));
    }} else {{
        layers.removeAll(QStringLiteral("hasAlphaCutoff"));
        layers.append(QStringLiteral("noHasAlphaCutoff"));
    }}
    updateLayersOnTechniques(layers);
}}

void {1}Effect::updateUsingColorAttribute(bool usingColorAttribute)
{{
    auto layers = m_gl3Technique->enabledLayers();
    layers.removeAll(QStringLiteral("noHasColorAttr"));
    layers.removeAll(QStringLiteral("hasColorAttr"));
    layers.removeAll(QStringLiteral("hasVertexColor"));
    if (usingColorAttribute) {{
        layers.append(QStringLiteral("hasColorAttr"));
        layers.append(QStringLiteral("hasVertexColor"));
    }} else {{
        layers.append(QStringLiteral("noHasColorAttr"));
    }}
    updateLayersOnTechniques(layers);
}}

void {1}Effect::updateUsingNormalAttribute(bool usingNormalAttribute)
{{
    auto layers = m_gl3Technique->enabledLayers();
    layers.removeAll(QStringLiteral("hasVertexNormal"));
    if (usingNormalAttribute)
        layers.append(QStringLiteral("hasVertexNormal"));

    updateLayersOnTechniques(layers);
}}

void {1}Effect::updateUsingTangentAttribute(bool usingTangentAttribute)
{{
    auto layers = m_gl3Technique->enabledLayers();
    layers.removeAll(QStringLiteral("hasVertexTangent"));
    if (usingTangentAttribute)
        layers.append(QStringLiteral("hasVertexTangent"));

    updateLayersOnTechniques(layers);
}}

void {1}Effect::updateUsingTexCoordAttribute(bool usingTexCoordAttribute)
{{
    auto layers = m_gl3Technique->enabledLayers();
    layers.removeAll(QStringLiteral("hasTexCoord"));
    if (usingTexCoordAttribute)
        layers.append(QStringLiteral("hasTexCoord"));

    updateLayersOnTechniques(layers);
}}

void {1}Effect::updateUsingTexCoord1Attribute(bool usingTexCoord1Attribute)
{{
    auto layers = m_gl3Technique->enabledLayers();
    layers.removeAll(QStringLiteral("hasTexCoord1"));
    if (usingTexCoord1Attribute)
        layers.append(QStringLiteral("hasTexCoord1"));

    updateLayersOnTechniques(layers);
}}

void {1}Effect::updateUsingMorphTargets(bool usingMorphTargets)
{{
    auto layers = m_gl3Technique->enabledLayers();
    layers.removeAll(QStringLiteral("morphtargets"));
    if (usingMorphTargets)
        layers.append(QStringLiteral("morphtargets"));

    updateLayersOnTechniques(layers);
}}

void {1}Effect::updateInstanced(bool instanced)
{{
    auto layers = m_gl3Technique->enabledLayers();
    layers.removeAll(QStringLiteral("instanced"));
    if (instanced)
        layers.append(QStringLiteral("instanced"));

    updateLayersOnTechniques(layers);
}}

void {1}Effect::updateLayersOnTechniques(const QStringList &layers)
{{
    m_gl3Technique->setEnabledLayers(layers);
    m_es3Technique->setEnabledLayers(layers);
    m_es2Technique->setEnabledLayers(layers);
#if (QT_VERSION >= QT_VERSION_CHECK(6, 0, 0))
    m_rhiTechnique->setEnabledLayers(layers);
#endif
}}
