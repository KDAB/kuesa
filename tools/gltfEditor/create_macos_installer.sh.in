#!/usr/bin/env bash

BUILDROOT=${PWD}
APP_APP=$$APE_BUNDLE
APP_DMG=${APP_APP/app/dmg}

NOTARIZE_PASS=@keychain:AC_PASSWORD     # xcrun altool --store-password-in-keychain-item "AC_PASSWORD" --username "..." --password "..."
NOTARIZE_PROVIDER=KDABUKLtd             # xcrun altool --list-providers -u ... -p ...

for arg in "${@}"; do
    if [[ ${arg} = -notarize-ac=* ]]; then
        NOTARIZE_ACC="${arg#*=}"
    fi
    if [[ ${arg} = -notarize-pass=* ]]; then
        NOTARIZE_PASS="${arg#*=}"
    fi
done


waiting_fixed() {
    local message="${1}"
    local waitTime=${2}

    for i in $(seq ${waitTime}); do
        sleep 1
        printf -v dots \'%*s\' ${i}
        printf -v spaces \'%*s\' $((${waitTime} - $i))
        printf \"\r%s [%s%s]\" \"${message}\" \"${dots// /.}\" \"${spaces}\"
    done
    printf \"\n\"
}

notarize_build() {
    local NOT_SRC_DIR=${1}
    local NOT_SRC_FILE=${2}

    # zip it
    ditto -c -k --sequesterRsrc --keepParent \"${NOT_SRC_FILE}\" \"${BUILDROOT}/tmp_notarize/${NOT_SRC_FILE}.zip\"

    # trigger notarizing
    local uuid=\"$(xcrun altool --notarize-app --primary-bundle-id \"com.kdab.kuesa.gltfeditor\" --username \"${NOTARIZE_ACC}\" --password \"${NOTARIZE_PASS}\" -itc_provider \"${NOTARIZE_PROVIDER}\" --file \"${BUILDROOT}/tmp_notarize/${NOT_SRC_FILE}.zip\" 2>&1 | grep 'RequestUUID' | awk \'{ print $3 }\')\"
    echo \"RequestUUID = ${uuid}\" # Display identifier string

    waiting_fixed \"Waiting to retrieve notarize status\" 15

    # wait until done
    while true ; do
        notarize_status=\"$(xcrun altool --notarization-info \"${uuid}\" --username \"${NOTARIZE_ACC}\" --password \"${NOTARIZE_PASS}\" 2>&1 | grep \'Status\:\' | awk \'{ print $2 }\')\"
        if [[ \"${notarize_status}\" = \"success\" ]]; then
            xcrun stapler staple \"${NOT_SRC_FILE}\"   #staple the ticket
            xcrun stapler validate -v \"${NOT_SRC_FILE}\"
            echo \"Notarization success!\"
            break
        elif [[ \"${notarize_status}\" = \"in\" ]]; then
            waiting_fixed \"Notarization still in progress, sleeping for 15 seconds and trying again\" 15
        else
            echo \"Notarization failed!\"
            exit 1
        fi
    done
}

createDMG () {
    cd ${BUILDROOT}
    DMG_size=700
    DMG_title=\"Kuesa gltfEditor\"
    DMG_dir=tmp_dmg

    test ! -e ${DMG_dir} || /bin/rm -rf ${DMG_dir}
    mkdir ${DMG_dir}
    tar cBf - ./${APP_APP} | (cd ${DMG_dir}; tar xf -)

    ## Build dmg from folder

    # create dmg on local system
    # usage of -fsargs minimze gaps at front of filesystem (reduce size)
    hdiutil create -srcfolder \"${DMG_dir}\" -volname \"${DMG_title}\" -fs HFS+ \
        -fsargs \"-c c=64,a=16,e=16\" -format UDRW -size ${DMG_size}m kuesa.temp.dmg

    # Next line is only useful if we have a dmg as a template!
    # previous hdiutil must be uncommented
    device=$(hdiutil attach -readwrite -noverify -noautoopen \"kuesa.temp.dmg\" | egrep \'^/dev/\' | sed 1q | awk \'{ print $1 }\')

    # Set style for dmg
    ln -s \"/Applications\" \"/Volumes/${DMG_title}/Applications\"

    chmod -Rf go-w \"/Volumes/${DMG_title}\"

    # ensure all writing operations to dmg are over
    sync

    hdiutil detach $device
    hdiutil convert \"kuesa.temp.dmg\" -format UDZO -imagekey -zlib-level=9 -o kuesa-out.dmg

    mv kuesa-out.dmg kuesa-gltfEditor.dmg
    rm kuesa.temp.dmg
}

test ! -e ${APP_DMG} || /bin/rm -rf ${APP_DMG}
echo "deploying qt"
$$QT_DEPLOY $$APE_BUNDLE -qmldir=$$APE_SOURCE -codesign=\"Developer ID Application: KDAB (UK) Ltd. (72QK35344H)\"
if [[ -n "${NOTARIZE_ACC}" ]]; then
    echo "notarizing app"
    notarize_build $APP_DMG $APP_APP
fi
echo "creating dmg"
createDMG
echo "codesigning dmg"
codesign --options runtime --timestamp -f -s \"Developer ID Application: KDAB (UK) Ltd. (72QK35344H)\" \"kuesa-gltfEditor.dmg\"
if [[ -n "${NOTARIZE_ACC}" ]]; then
    echo "notarizing dmg"
    notarize_build ${BUILDROOT} \"kuesa-gltfEditor.dmg\"
fi

