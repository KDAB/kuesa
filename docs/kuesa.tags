<?xml version="1.0" encoding="UTF-8"?>
<tagfile>
    <compound kind="class">
        <name>AnimationPlayer</name>
        <filename>qml-animationplayer.html</filename>
    </compound>
    <compound kind="namespace">
        <name>Kuesa</name>
        <filename>kuesa.html</filename>
        <class>Kuesa::AnimationPlayer</class>
        <class>Kuesa::AbstractAssetCollection</class>
        <class>Kuesa::AnimationClipCollection</class>
        <class>Kuesa::ArmatureCollection</class>
        <class>Kuesa::EffectCollection</class>
        <class>Kuesa::LayerCollection</class>
        <class>Kuesa::LightCollection</class>
        <class>Kuesa::GLTF2MaterialProperties</class>
        <class>Kuesa::MaterialCollection</class>
        <namespace>Kuesa::GLTF2Import</namespace>
        <class>Kuesa::SceneEntity</class>
        <class>Kuesa::AnimationMappingCollection</class>
        <class>Kuesa::CameraCollection</class>
        <class>Kuesa::EntityCollection</class>
        <class>Kuesa::MeshCollection</class>
        <class>Kuesa::SkeletonCollection</class>
        <class>Kuesa::TextureCollection</class>
        <class>Kuesa::TextureImageCollection</class>
        <class>Kuesa::AbstractPostProcessingEffect</class>
        <class>Kuesa::ForwardRenderer</class>
        <class>Kuesa::BloomEffect</class>
        <class>Kuesa::DepthOfFieldEffect</class>
        <class>Kuesa::FullScreenQuad</class>
        <class>Kuesa::GaussianBlurEffect</class>
        <class>Kuesa::OpacityMask</class>
        <class>Kuesa::ThresholdEffect</class>
        <class>Kuesa::ToneMappingAndGammaCorrectionEffect</class>
        <class>Kuesa::GLTF2Material</class>
        <class>Kuesa::MorphController</class>
        <class>Kuesa::DirectionalLight</class>
        <class>Kuesa::PointLight</class>
        <class>Kuesa::SpotLight</class>
        <class>Kuesa::MetallicRoughnessEffect</class>
        <class>Kuesa::MetallicRoughnessMaterial</class>
        <class>Kuesa::MetallicRoughnessProperties</class>
        <class>Kuesa::Skybox</class>
        <class>Kuesa::UnlitEffect</class>
        <class>Kuesa::UnlitMaterial</class>
        <class>Kuesa::UnlitProperties</class>
    </compound>
    <compound kind="class">
        <name>Kuesa::AnimationClipCollection</name>
        <filename>kuesa-animationclipcollection.html</filename>
        <base>AbstractAssetCollection</base>
        <member kind="function" protection="public" virtualness="non" static="no">
            <type>Qt3DAnimation::QAnimationClipLoader *</type>
            <name>add</name>
            <anchorfile>kuesa-animationclipcollection.html</anchorfile>
            <anchor>add</anchor>
            <arglist>(const QString &amp;name, const QUrl &amp;source)</arglist>
        </member>
    </compound>
    <compound kind="class">
        <name>Kuesa::ArmatureCollection</name>
        <filename>kuesa-armaturecollection.html</filename>
        <base>AbstractAssetCollection</base>
    </compound>
    <compound kind="class">
        <name>Kuesa::EffectCollection</name>
        <filename>kuesa-effectcollection.html</filename>
        <base>AbstractAssetCollection</base>
        <member kind="function" protection="public" virtualness="non" static="no">
            <type>Qt3DRender::QEffect *</type>
            <name>addEffect</name>
            <anchorfile>kuesa-effectcollection.html</anchorfile>
            <anchor>addEffect</anchor>
            <arglist>(const QString &amp;name, const QString &amp;id, const QVariantMap &amp;properties)</arglist>
        </member>
        <member kind="function" protection="public" virtualness="non" static="no">
            <type>void</type>
            <name>registerType</name>
            <anchorfile>kuesa-effectcollection.html</anchorfile>
            <anchor>registerType</anchor>
            <arglist>(const QString &amp;id, Kuesa::EffectCreator f)</arglist>
        </member>
        <member kind="function" protection="public" virtualness="non" static="no">
            <type>void</type>
            <name>unregisterType</name>
            <anchorfile>kuesa-effectcollection.html</anchorfile>
            <anchor>unregisterType</anchor>
            <arglist>(const QString &amp;id)</arglist>
        </member>
    </compound>
    <compound kind="class">
        <name>Kuesa::LayerCollection</name>
        <filename>kuesa-layercollection.html</filename>
        <base>AbstractAssetCollection</base>
    </compound>
    <compound kind="class">
        <name>Kuesa::LightCollection</name>
        <filename>kuesa-lightcollection.html</filename>
        <base>AbstractAssetCollection</base>
    </compound>
    <compound kind="class">
        <name>Kuesa::GLTF2MaterialProperties</name>
        <filename>kuesa-gltf2materialproperties.html</filename>
        <member kind="property" type="QMatrix3x3">
            <name>textureTransform</name>
            <anchorfile>kuesa-gltf2materialproperties.html</anchorfile>
            <anchor>textureTransform-prop</anchor>
            <arglist></arglist>
        </member>
        <member kind="property" type="QColor">
            <name>baseColorFactor</name>
            <anchorfile>kuesa-gltf2materialproperties.html</anchorfile>
            <anchor>baseColorFactor-prop</anchor>
            <arglist></arglist>
        </member>
        <member kind="property" type="Qt3DRender::QAbstractTexture*">
            <name>baseColorMap</name>
            <anchorfile>kuesa-gltf2materialproperties.html</anchorfile>
            <anchor>baseColorMap-prop</anchor>
            <arglist></arglist>
        </member>
        <member kind="property" type="float">
            <name>alphaCutoff</name>
            <anchorfile>kuesa-gltf2materialproperties.html</anchorfile>
            <anchor>alphaCutoff-prop</anchor>
            <arglist></arglist>
        </member>
        <member kind="function" protection="public" virtualness="non" static="no">
            <type>bool</type>
            <name>isBaseColorUsingTexCoord1</name>
            <anchorfile>kuesa-gltf2materialproperties.html</anchorfile>
            <anchor>baseColorUsesTexCoord1-prop</anchor>
            <arglist>() const const</arglist>
        </member>
        <member kind="function" protection="public" virtualness="non" static="no">
            <type>QColor</type>
            <name>baseColorFactor</name>
            <anchorfile>kuesa-gltf2materialproperties.html</anchorfile>
            <anchor>baseColorFactor-prop</anchor>
            <arglist>() const const</arglist>
        </member>
        <member kind="function" protection="public" virtualness="non" static="no">
            <type>Qt3DRender::QAbstractTexture *</type>
            <name>baseColorMap</name>
            <anchorfile>kuesa-gltf2materialproperties.html</anchorfile>
            <anchor>baseColorMap-prop</anchor>
            <arglist>() const const</arglist>
        </member>
        <member kind="function" protection="public" virtualness="non" static="no">
            <type>float</type>
            <name>alphaCutoff</name>
            <anchorfile>kuesa-gltf2materialproperties.html</anchorfile>
            <anchor>alphaCutoff-prop</anchor>
            <arglist>() const const</arglist>
        </member>
        <member kind="function" protection="public" virtualness="non" static="no">
            <type>QMatrix3x3</type>
            <name>textureTransform</name>
            <anchorfile>kuesa-gltf2materialproperties.html</anchorfile>
            <anchor>textureTransform-prop</anchor>
            <arglist>() const const</arglist>
        </member>
        <member kind="function" protection="public" virtualness="non" static="no">
            <type>void</type>
            <name>setBaseColorUsesTexCoord1</name>
            <anchorfile>kuesa-gltf2materialproperties.html</anchorfile>
            <anchor>baseColorUsesTexCoord1-prop</anchor>
            <arglist>(bool baseColorUsesTexCoord1)</arglist>
        </member>
        <member kind="function" protection="public" virtualness="non" static="no">
            <type>void</type>
            <name>setBaseColorFactor</name>
            <anchorfile>kuesa-gltf2materialproperties.html</anchorfile>
            <anchor>baseColorFactor-prop</anchor>
            <arglist>(const QColor &amp;baseColorFactor)</arglist>
        </member>
        <member kind="function" protection="public" virtualness="non" static="no">
            <type>void</type>
            <name>setBaseColorMap</name>
            <anchorfile>kuesa-gltf2materialproperties.html</anchorfile>
            <anchor>baseColorMap-prop</anchor>
            <arglist>(Qt3DRender::QAbstractTexture *baseColorMap)</arglist>
        </member>
        <member kind="function" protection="public" virtualness="non" static="no">
            <type>void</type>
            <name>setAlphaCutoff</name>
            <anchorfile>kuesa-gltf2materialproperties.html</anchorfile>
            <anchor>alphaCutoff-prop</anchor>
            <arglist>(float alphaCutoff)</arglist>
        </member>
        <member kind="function" protection="public" virtualness="non" static="no">
            <type>void</type>
            <name>setTextureTransform</name>
            <anchorfile>kuesa-gltf2materialproperties.html</anchorfile>
            <anchor>textureTransform-prop</anchor>
            <arglist>(const QMatrix3x3 &amp;textureTransform)</arglist>
        </member>
        <member kind="function" protection="public" virtualness="non" static="no">
            <type>void</type>
            <name>baseColorUsesTexCoord1Changed</name>
            <anchorfile>kuesa-gltf2materialproperties.html</anchorfile>
            <anchor>baseColorUsesTexCoord1-prop</anchor>
            <arglist>(bool )</arglist>
        </member>
        <member kind="function" protection="public" virtualness="non" static="no">
            <type>void</type>
            <name>baseColorFactorChanged</name>
            <anchorfile>kuesa-gltf2materialproperties.html</anchorfile>
            <anchor>baseColorFactor-prop</anchor>
            <arglist>(const QColor &amp;baseColorFactor)</arglist>
        </member>
        <member kind="function" protection="public" virtualness="non" static="no">
            <type>void</type>
            <name>baseColorMapChanged</name>
            <anchorfile>kuesa-gltf2materialproperties.html</anchorfile>
            <anchor>baseColorMap-prop</anchor>
            <arglist>(Qt3DRender::QAbstractTexture *baseColorMap)</arglist>
        </member>
        <member kind="function" protection="public" virtualness="non" static="no">
            <type>void</type>
            <name>alphaCutoffChanged</name>
            <anchorfile>kuesa-gltf2materialproperties.html</anchorfile>
            <anchor>alphaCutoff-prop</anchor>
            <arglist>(float alphaCutoff)</arglist>
        </member>
        <member kind="function" protection="public" virtualness="non" static="no">
            <type>void</type>
            <name>textureTransformChanged</name>
            <anchorfile>kuesa-gltf2materialproperties.html</anchorfile>
            <anchor>textureTransform-prop</anchor>
            <arglist>(const QMatrix3x3 &amp;textureTransform)</arglist>
        </member>
    </compound>
    <compound kind="class">
        <name>Kuesa::MaterialCollection</name>
        <filename>kuesa-materialcollection.html</filename>
        <base>AbstractAssetCollection</base>
    </compound>
    <compound kind="class">
        <name>Kuesa::SceneEntity</name>
        <filename>kuesa-sceneentity.html</filename>
        <member kind="function" protection="public" virtualness="non" static="no">
            <type>Kuesa::AnimationClipCollection *</type>
            <name>animationClips</name>
            <anchorfile>kuesa-sceneentity.html</anchorfile>
            <anchor>animationClips</anchor>
            <arglist>() const const</arglist>
        </member>
        <member kind="function" protection="public" virtualness="non" static="no">
            <type>Qt3DAnimation::QAbstractAnimationClip *</type>
            <name>animationClip</name>
            <anchorfile>kuesa-sceneentity.html</anchorfile>
            <anchor>animationClip</anchor>
            <arglist>(const QString &amp;name) const const</arglist>
        </member>
        <member kind="function" protection="public" virtualness="non" static="no">
            <type>Kuesa::ArmatureCollection *</type>
            <name>armatures</name>
            <anchorfile>kuesa-sceneentity.html</anchorfile>
            <anchor>armatures</anchor>
            <arglist>() const const</arglist>
        </member>
        <member kind="function" protection="public" virtualness="non" static="no">
            <type>Qt3DCore::QArmature *</type>
            <name>armature</name>
            <anchorfile>kuesa-sceneentity.html</anchorfile>
            <anchor>armature</anchor>
            <arglist>(const QString &amp;name) const const</arglist>
        </member>
        <member kind="function" protection="public" virtualness="non" static="no">
            <type>Qt3DRender::QEffect *</type>
            <name>effect</name>
            <anchorfile>kuesa-sceneentity.html</anchorfile>
            <anchor>effect</anchor>
            <arglist>(const QString &amp;name) const const</arglist>
        </member>
        <member kind="function" protection="public" virtualness="non" static="no">
            <type>Qt3DRender::QEffect *</type>
            <name>effect</name>
            <anchorfile>kuesa-sceneentity.html</anchorfile>
            <anchor>effect-1</anchor>
            <arglist>(int effectPropertyFlags) const const</arglist>
        </member>
        <member kind="function" protection="public" virtualness="non" static="no">
            <type>Kuesa::LayerCollection *</type>
            <name>layers</name>
            <anchorfile>kuesa-sceneentity.html</anchorfile>
            <anchor>layers</anchor>
            <arglist>() const const</arglist>
        </member>
        <member kind="function" protection="public" virtualness="non" static="no">
            <type>Qt3DRender::QLayer *</type>
            <name>layer</name>
            <anchorfile>kuesa-sceneentity.html</anchorfile>
            <anchor>layer</anchor>
            <arglist>(const QString &amp;name) const const</arglist>
        </member>
        <member kind="function" protection="public" virtualness="non" static="no">
            <type>Kuesa::MaterialCollection *</type>
            <name>materials</name>
            <anchorfile>kuesa-sceneentity.html</anchorfile>
            <anchor>materials</anchor>
            <arglist>() const const</arglist>
        </member>
        <member kind="function" protection="public" virtualness="non" static="no">
            <type>Kuesa::GLTF2MaterialProperties *</type>
            <name>material</name>
            <anchorfile>kuesa-sceneentity.html</anchorfile>
            <anchor>material</anchor>
            <arglist>(const QString &amp;name) const const</arglist>
        </member>
        <member kind="function" protection="public" virtualness="non" static="no">
            <type>int *</type>
            <name>meshes</name>
            <anchorfile>kuesa-sceneentity.html</anchorfile>
            <anchor>meshes</anchor>
            <arglist>() const const</arglist>
        </member>
        <member kind="function" protection="public" virtualness="non" static="no">
            <type>int *</type>
            <name>mesh</name>
            <anchorfile>kuesa-sceneentity.html</anchorfile>
            <anchor>mesh</anchor>
            <arglist>(const QString &amp;) const const</arglist>
        </member>
        <member kind="function" protection="public" virtualness="non" static="no">
            <type>int *</type>
            <name>skeletons</name>
            <anchorfile>kuesa-sceneentity.html</anchorfile>
            <anchor>skeletons</anchor>
            <arglist>() const const</arglist>
        </member>
        <member kind="function" protection="public" virtualness="non" static="no">
            <type>Qt3DCore::QAbstractSkeleton *</type>
            <name>skeleton</name>
            <anchorfile>kuesa-sceneentity.html</anchorfile>
            <anchor>skeleton</anchor>
            <arglist>(const QString &amp;name) const const</arglist>
        </member>
        <member kind="function" protection="public" virtualness="non" static="no">
            <type>int *</type>
            <name>textures</name>
            <anchorfile>kuesa-sceneentity.html</anchorfile>
            <anchor>textures</anchor>
            <arglist>() const const</arglist>
        </member>
        <member kind="function" protection="public" virtualness="non" static="no">
            <type>Qt3DRender::QAbstractTexture *</type>
            <name>texture</name>
            <anchorfile>kuesa-sceneentity.html</anchorfile>
            <anchor>texture</anchor>
            <arglist>(const QString &amp;name) const const</arglist>
        </member>
        <member kind="function" protection="public" virtualness="non" static="no">
            <type>int *</type>
            <name>cameras</name>
            <anchorfile>kuesa-sceneentity.html</anchorfile>
            <anchor>cameras</anchor>
            <arglist>() const const</arglist>
        </member>
        <member kind="function" protection="public" virtualness="non" static="no">
            <type>int *</type>
            <name>camera</name>
            <anchorfile>kuesa-sceneentity.html</anchorfile>
            <anchor>camera</anchor>
            <arglist>(const QString &amp;) const const</arglist>
        </member>
        <member kind="function" protection="public" virtualness="non" static="no">
            <type>int *</type>
            <name>entities</name>
            <anchorfile>kuesa-sceneentity.html</anchorfile>
            <anchor>entities</anchor>
            <arglist>() const const</arglist>
        </member>
        <member kind="function" protection="public" virtualness="non" static="no">
            <type>Qt3DCore::QEntity *</type>
            <name>entity</name>
            <anchorfile>kuesa-sceneentity.html</anchorfile>
            <anchor>entity</anchor>
            <arglist>(const QString &amp;name) const const</arglist>
        </member>
        <member kind="function" protection="public" virtualness="non" static="no">
            <type>int *</type>
            <name>textureImages</name>
            <anchorfile>kuesa-sceneentity.html</anchorfile>
            <anchor>textureImages</anchor>
            <arglist>() const const</arglist>
        </member>
        <member kind="function" protection="public" virtualness="non" static="no">
            <type>int *</type>
            <name>textureImage</name>
            <anchorfile>kuesa-sceneentity.html</anchorfile>
            <anchor>textureImage</anchor>
            <arglist>(const QString &amp;)</arglist>
        </member>
        <member kind="function" protection="public" virtualness="non" static="no">
            <type>int *</type>
            <name>animationMappings</name>
            <anchorfile>kuesa-sceneentity.html</anchorfile>
            <anchor>animationMappings</anchor>
            <arglist>() const const</arglist>
        </member>
        <member kind="function" protection="public" virtualness="non" static="no">
            <type>int *</type>
            <name>animationMapping</name>
            <anchorfile>kuesa-sceneentity.html</anchorfile>
            <anchor>animationMapping</anchor>
            <arglist>(const QString &amp;)</arglist>
        </member>
        <member kind="function" protection="public" virtualness="non" static="no">
            <type>void</type>
            <name>clearCollections</name>
            <anchorfile>kuesa-sceneentity.html</anchorfile>
            <anchor>clearCollections</anchor>
            <arglist>()</arglist>
        </member>
        <member kind="function" protection="public" virtualness="non" static="no">
            <type>Qt3DCore::QNode *</type>
            <name>transformForEntity</name>
            <anchorfile>kuesa-sceneentity.html</anchorfile>
            <anchor>transformForEntity</anchor>
            <arglist>(const QString &amp;name)</arglist>
        </member>
        <member kind="function" protection="public" virtualness="non" static="no">
            <type>Qt3DRender::QAbstractTexture *</type>
            <name>brdfLut</name>
            <anchorfile>kuesa-sceneentity.html</anchorfile>
            <anchor>brdfLut</anchor>
            <arglist>() const const</arglist>
        </member>
        <member kind="function" protection="public" virtualness="non" static="no">
            <type>Kuesa::LightCollection *</type>
            <name>lights</name>
            <anchorfile>kuesa-sceneentity.html</anchorfile>
            <anchor>lights-prop</anchor>
            <arglist>() const const</arglist>
        </member>
        <member kind="function" protection="public" virtualness="non" static="no">
            <type>void</type>
            <name>loadingDone</name>
            <anchorfile>kuesa-sceneentity.html</anchorfile>
            <anchor>loadingDone</anchor>
            <arglist>()</arglist>
        </member>
    </compound>
    <compound kind="class">
        <name>Kuesa::AnimationPlayer</name>
        <filename>kuesa-animationplayer.html</filename>
        <member kind="property" type="Kuesa::SceneEntity*">
            <name>sceneEntity</name>
            <anchorfile>kuesa-animationplayer.html</anchorfile>
            <anchor>sceneEntity-prop</anchor>
            <arglist></arglist>
        </member>
        <member kind="property" type="Status">
            <name>status</name>
            <anchorfile>kuesa-animationplayer.html</anchorfile>
            <anchor>status-prop</anchor>
            <arglist></arglist>
        </member>
        <member kind="property" type="QString">
            <name>clip</name>
            <anchorfile>kuesa-animationplayer.html</anchorfile>
            <anchor>clip-prop</anchor>
            <arglist></arglist>
        </member>
        <member kind="property" type="QString">
            <name>mapper</name>
            <anchorfile>kuesa-animationplayer.html</anchorfile>
            <anchor>mapper-prop</anchor>
            <arglist></arglist>
        </member>
        <member kind="property" type="bool">
            <name>running</name>
            <anchorfile>kuesa-animationplayer.html</anchorfile>
            <anchor>running-prop</anchor>
            <arglist></arglist>
        </member>
        <member kind="property" type="int">
            <name>loops</name>
            <anchorfile>kuesa-animationplayer.html</anchorfile>
            <anchor>loops-prop</anchor>
            <arglist></arglist>
        </member>
        <member kind="property" type="Qt3DAnimation::QClock*">
            <name>clock</name>
            <anchorfile>kuesa-animationplayer.html</anchorfile>
            <anchor>clock-prop</anchor>
            <arglist></arglist>
        </member>
        <member kind="property" type="float">
            <name>normalizedTime</name>
            <anchorfile>kuesa-animationplayer.html</anchorfile>
            <anchor>normalizedTime-prop</anchor>
            <arglist></arglist>
        </member>
        <member kind="enum">
            <name>Status</name>
            <anchor>Status-enum</anchor>
            <arglist></arglist>
        </member>
        <member name="None">
            <anchor>Status-enum</anchor>
            <arglist></arglist>
        </member>
        <member name="Ready">
            <anchor>Status-enum</anchor>
            <arglist></arglist>
        </member>
        <member name="Error">
            <anchor>Status-enum</anchor>
            <arglist></arglist>
        </member>
        <member kind="function" protection="public" virtualness="non" static="no">
            <type>Kuesa::SceneEntity *</type>
            <name>sceneEntity</name>
            <anchorfile>kuesa-animationplayer.html</anchorfile>
            <anchor>sceneEntity-prop</anchor>
            <arglist>() const const</arglist>
        </member>
        <member kind="function" protection="public" virtualness="non" static="no">
            <type>Kuesa::AnimationPlayer::Status</type>
            <name>status</name>
            <anchorfile>kuesa-animationplayer.html</anchorfile>
            <anchor>status-prop</anchor>
            <arglist>() const const</arglist>
        </member>
        <member kind="function" protection="public" virtualness="non" static="no">
            <type>QString</type>
            <name>clip</name>
            <anchorfile>kuesa-animationplayer.html</anchorfile>
            <anchor>clip-prop</anchor>
            <arglist>() const const</arglist>
        </member>
        <member kind="function" protection="public" virtualness="non" static="no">
            <type>QString</type>
            <name>mapper</name>
            <anchorfile>kuesa-animationplayer.html</anchorfile>
            <anchor>mapper-prop</anchor>
            <arglist>() const const</arglist>
        </member>
        <member kind="function" protection="public" virtualness="non" static="no">
            <type>bool</type>
            <name>isRunning</name>
            <anchorfile>kuesa-animationplayer.html</anchorfile>
            <anchor>running-prop</anchor>
            <arglist>() const const</arglist>
        </member>
        <member kind="function" protection="public" virtualness="non" static="no">
            <type>int</type>
            <name>loopCount</name>
            <anchorfile>kuesa-animationplayer.html</anchorfile>
            <anchor>loops-prop</anchor>
            <arglist>() const const</arglist>
        </member>
        <member kind="function" protection="public" virtualness="non" static="no">
            <type>Qt3DAnimation::QClock *</type>
            <name>clock</name>
            <anchorfile>kuesa-animationplayer.html</anchorfile>
            <anchor>clock-prop</anchor>
            <arglist>() const const</arglist>
        </member>
        <member kind="function" protection="public" virtualness="non" static="no">
            <type>float</type>
            <name>normalizedTime</name>
            <anchorfile>kuesa-animationplayer.html</anchorfile>
            <anchor>normalizedTime-prop</anchor>
            <arglist>() const const</arglist>
        </member>
        <member kind="function" protection="public" virtualness="non" static="no">
            <type>QVector&lt;Qt3DCore::QNode *&gt;</type>
            <name>targets</name>
            <anchorfile>kuesa-animationplayer.html</anchorfile>
            <anchor>targets</anchor>
            <arglist>() const const</arglist>
        </member>
        <member kind="function" protection="public" virtualness="non" static="no">
            <type>void</type>
            <name>addTarget</name>
            <anchorfile>kuesa-animationplayer.html</anchorfile>
            <anchor>addTarget</anchor>
            <arglist>(Qt3DCore::QNode *target)</arglist>
        </member>
        <member kind="function" protection="public" virtualness="non" static="no">
            <type>void</type>
            <name>removeTarget</name>
            <anchorfile>kuesa-animationplayer.html</anchorfile>
            <anchor>removeTarget</anchor>
            <arglist>(Qt3DCore::QNode *target)</arglist>
        </member>
        <member kind="function" protection="public" virtualness="non" static="no">
            <type>void</type>
            <name>setSceneEntity</name>
            <anchorfile>kuesa-animationplayer.html</anchorfile>
            <anchor>sceneEntity-prop</anchor>
            <arglist>(Kuesa::SceneEntity *sceneEntity)</arglist>
        </member>
        <member kind="function" protection="public" virtualness="non" static="no">
            <type>void</type>
            <name>setClip</name>
            <anchorfile>kuesa-animationplayer.html</anchorfile>
            <anchor>clip-prop</anchor>
            <arglist>(const QString &amp;clip)</arglist>
        </member>
        <member kind="function" protection="public" virtualness="non" static="no">
            <type>void</type>
            <name>setMapper</name>
            <anchorfile>kuesa-animationplayer.html</anchorfile>
            <anchor>mapper-prop</anchor>
            <arglist>(const QString &amp;mapper)</arglist>
        </member>
        <member kind="function" protection="public" virtualness="non" static="no">
            <type>void</type>
            <name>setRunning</name>
            <anchorfile>kuesa-animationplayer.html</anchorfile>
            <anchor>running-prop</anchor>
            <arglist>(bool running)</arglist>
        </member>
        <member kind="function" protection="public" virtualness="non" static="no">
            <type>void</type>
            <name>setLoopCount</name>
            <anchorfile>kuesa-animationplayer.html</anchorfile>
            <anchor>loops-prop</anchor>
            <arglist>(int loops)</arglist>
        </member>
        <member kind="function" protection="public" virtualness="non" static="no">
            <type>void</type>
            <name>setClock</name>
            <anchorfile>kuesa-animationplayer.html</anchorfile>
            <anchor>clock-prop</anchor>
            <arglist>(Qt3DAnimation::QClock *clock)</arglist>
        </member>
        <member kind="function" protection="public" virtualness="non" static="no">
            <type>void</type>
            <name>setNormalizedTime</name>
            <anchorfile>kuesa-animationplayer.html</anchorfile>
            <anchor>normalizedTime-prop</anchor>
            <arglist>(float timeFraction)</arglist>
        </member>
        <member kind="function" protection="public" virtualness="non" static="no">
            <type>void</type>
            <name>start</name>
            <anchorfile>kuesa-animationplayer.html</anchorfile>
            <anchor>start</anchor>
            <arglist>()</arglist>
        </member>
        <member kind="function" protection="public" virtualness="non" static="no">
            <type>void</type>
            <name>stop</name>
            <anchorfile>kuesa-animationplayer.html</anchorfile>
            <anchor>stop</anchor>
            <arglist>()</arglist>
        </member>
        <member kind="function" protection="public" virtualness="non" static="no">
            <type>void</type>
            <name>sceneEntityChanged</name>
            <anchorfile>kuesa-animationplayer.html</anchorfile>
            <anchor>sceneEntity-prop</anchor>
            <arglist>(const Kuesa::SceneEntity *sceneEntity)</arglist>
        </member>
        <member kind="function" protection="public" virtualness="non" static="no">
            <type>void</type>
            <name>statusChanged</name>
            <anchorfile>kuesa-animationplayer.html</anchorfile>
            <anchor>status-prop</anchor>
            <arglist>(Kuesa::AnimationPlayer::Status status)</arglist>
        </member>
        <member kind="function" protection="public" virtualness="non" static="no">
            <type>void</type>
            <name>clipChanged</name>
            <anchorfile>kuesa-animationplayer.html</anchorfile>
            <anchor>clip-prop</anchor>
            <arglist>(const QString &amp;clip)</arglist>
        </member>
        <member kind="function" protection="public" virtualness="non" static="no">
            <type>void</type>
            <name>mapperChanged</name>
            <anchorfile>kuesa-animationplayer.html</anchorfile>
            <anchor>mapper-prop</anchor>
            <arglist>(const QString &amp;mapper)</arglist>
        </member>
        <member kind="function" protection="public" virtualness="non" static="no">
            <type>void</type>
            <name>runningChanged</name>
            <anchorfile>kuesa-animationplayer.html</anchorfile>
            <anchor>running-prop</anchor>
            <arglist>(bool running)</arglist>
        </member>
        <member kind="function" protection="public" virtualness="non" static="no">
            <type>void</type>
            <name>loopCountChanged</name>
            <anchorfile>kuesa-animationplayer.html</anchorfile>
            <anchor>loops-prop</anchor>
            <arglist>(int loops)</arglist>
        </member>
        <member kind="function" protection="public" virtualness="non" static="no">
            <type>void</type>
            <name>clockChanged</name>
            <anchorfile>kuesa-animationplayer.html</anchorfile>
            <anchor>clock-prop</anchor>
            <arglist>(Qt3DAnimation::QClock *clock)</arglist>
        </member>
        <member kind="function" protection="public" virtualness="non" static="no">
            <type>void</type>
            <name>normalizedTimeChanged</name>
            <anchorfile>kuesa-animationplayer.html</anchorfile>
            <anchor>normalizedTime-prop</anchor>
            <arglist>(float index)</arglist>
        </member>
    </compound>
    <compound kind="class">
        <name>Kuesa::AbstractAssetCollection</name>
        <filename>kuesa-abstractassetcollection.html</filename>
        <member kind="property" type="QStringList">
            <name>names</name>
            <anchorfile>kuesa-abstractassetcollection.html</anchorfile>
            <anchor>names-prop</anchor>
            <arglist></arglist>
        </member>
        <member kind="function" protection="public" virtualness="non" static="no">
            <type>QStringList</type>
            <name>names</name>
            <anchorfile>kuesa-abstractassetcollection.html</anchorfile>
            <anchor>names-prop</anchor>
            <arglist>()</arglist>
        </member>
        <member kind="function" protection="public" virtualness="non" static="no">
            <type>int</type>
            <name>size</name>
            <anchorfile>kuesa-abstractassetcollection.html</anchorfile>
            <anchor>size-prop</anchor>
            <arglist>()</arglist>
        </member>
        <member kind="function" protection="public" virtualness="non" static="no">
            <type>bool</type>
            <name>contains</name>
            <anchorfile>kuesa-abstractassetcollection.html</anchorfile>
            <anchor>contains</anchor>
            <arglist>(const QString &amp;name) const const</arglist>
        </member>
        <member kind="function" protection="public" virtualness="non" static="no">
            <type>void</type>
            <name>remove</name>
            <anchorfile>kuesa-abstractassetcollection.html</anchorfile>
            <anchor>remove</anchor>
            <arglist>(const QString &amp;name)</arglist>
        </member>
        <member kind="function" protection="public" virtualness="non" static="no">
            <type>void</type>
            <name>clear</name>
            <anchorfile>kuesa-abstractassetcollection.html</anchorfile>
            <anchor>clear</anchor>
            <arglist>()</arglist>
        </member>
        <member kind="function" protection="public" virtualness="non" static="no">
            <type>void</type>
            <name>namesChanged</name>
            <anchorfile>kuesa-abstractassetcollection.html</anchorfile>
            <anchor>names-prop</anchor>
            <arglist>()</arglist>
        </member>
        <member kind="function" protection="public" virtualness="non" static="no">
            <type>void</type>
            <name>sizeChanged</name>
            <anchorfile>kuesa-abstractassetcollection.html</anchorfile>
            <anchor>size-prop</anchor>
            <arglist>()</arglist>
        </member>
    </compound>
    <compound kind="namespace">
        <name>Kuesa::GLTF2Import</name>
        <filename>kuesa-gltf2import.html</filename>
        <class>Kuesa::GLTF2Import::GLTF2Options</class>
    </compound>
    <compound kind="class">
        <name>Kuesa::GLTF2Import::GLTF2Options</name>
        <filename>kuesa-gltf2import-gltf2options.html</filename>
        <member kind="function" protection="public" virtualness="non" static="no">
            <type>bool</type>
            <name>generateTangents</name>
            <anchorfile>kuesa-gltf2import-gltf2options.html</anchorfile>
            <anchor>generateTangents-prop</anchor>
            <arglist>() const const</arglist>
        </member>
        <member kind="function" protection="public" virtualness="non" static="no">
            <type>bool</type>
            <name>generateNormals</name>
            <anchorfile>kuesa-gltf2import-gltf2options.html</anchorfile>
            <anchor>generateNormals-prop</anchor>
            <arglist>() const const</arglist>
        </member>
        <member kind="function" protection="public" virtualness="non" static="no">
            <type>void</type>
            <name>setGenerateTangents</name>
            <anchorfile>kuesa-gltf2import-gltf2options.html</anchorfile>
            <anchor>generateTangents-prop</anchor>
            <arglist>(bool generateTangents)</arglist>
        </member>
        <member kind="function" protection="public" virtualness="non" static="no">
            <type>void</type>
            <name>setGenerateNormals</name>
            <anchorfile>kuesa-gltf2import-gltf2options.html</anchorfile>
            <anchor>generateNormals-prop</anchor>
            <arglist>(bool generateNormals)</arglist>
        </member>
        <member kind="function" protection="public" virtualness="non" static="no">
            <type>void</type>
            <name>generateTangentsChanged</name>
            <anchorfile>kuesa-gltf2import-gltf2options.html</anchorfile>
            <anchor>generateTangents-prop</anchor>
            <arglist>(bool generateTangents)</arglist>
        </member>
        <member kind="function" protection="public" virtualness="non" static="no">
            <type>void</type>
            <name>generateNormalsChanged</name>
            <anchorfile>kuesa-gltf2import-gltf2options.html</anchorfile>
            <anchor>generateNormals-prop</anchor>
            <arglist>(bool generateNormals)</arglist>
        </member>
    </compound>
    <compound kind="class">
        <name>Kuesa::MorphController</name>
        <filename>kuesa-morphcontroller.html</filename>
        <member kind="property" type="int">
            <name>count</name>
            <anchorfile>kuesa-morphcontroller.html</anchorfile>
            <anchor>count-prop</anchor>
            <arglist></arglist>
        </member>
        <member kind="property" type="float">
            <name>weight0</name>
            <anchorfile>kuesa-morphcontroller.html</anchorfile>
            <anchor>weight0-prop</anchor>
            <arglist></arglist>
        </member>
        <member kind="property" type="float">
            <name>weight1</name>
            <anchorfile>kuesa-morphcontroller.html</anchorfile>
            <anchor>weight1-prop</anchor>
            <arglist></arglist>
        </member>
        <member kind="property" type="float">
            <name>weight2</name>
            <anchorfile>kuesa-morphcontroller.html</anchorfile>
            <anchor>weight2-prop</anchor>
            <arglist></arglist>
        </member>
        <member kind="property" type="float">
            <name>weight3</name>
            <anchorfile>kuesa-morphcontroller.html</anchorfile>
            <anchor>weight3-prop</anchor>
            <arglist></arglist>
        </member>
        <member kind="property" type="float">
            <name>weight4</name>
            <anchorfile>kuesa-morphcontroller.html</anchorfile>
            <anchor>weight4-prop</anchor>
            <arglist></arglist>
        </member>
        <member kind="property" type="float">
            <name>weight5</name>
            <anchorfile>kuesa-morphcontroller.html</anchorfile>
            <anchor>weight5-prop</anchor>
            <arglist></arglist>
        </member>
        <member kind="property" type="float">
            <name>weight6</name>
            <anchorfile>kuesa-morphcontroller.html</anchorfile>
            <anchor>weight6-prop</anchor>
            <arglist></arglist>
        </member>
        <member kind="property" type="float">
            <name>weight7</name>
            <anchorfile>kuesa-morphcontroller.html</anchorfile>
            <anchor>weight7-prop</anchor>
            <arglist></arglist>
        </member>
        <member kind="function" protection="public" virtualness="non" static="no">
            <type>float</type>
            <name>weight0</name>
            <anchorfile>kuesa-morphcontroller.html</anchorfile>
            <anchor>weight0-prop</anchor>
            <arglist>() const const</arglist>
        </member>
        <member kind="function" protection="public" virtualness="non" static="no">
            <type>float</type>
            <name>weight1</name>
            <anchorfile>kuesa-morphcontroller.html</anchorfile>
            <anchor>weight1-prop</anchor>
            <arglist>() const const</arglist>
        </member>
        <member kind="function" protection="public" virtualness="non" static="no">
            <type>float</type>
            <name>weight2</name>
            <anchorfile>kuesa-morphcontroller.html</anchorfile>
            <anchor>weight2-prop</anchor>
            <arglist>() const const</arglist>
        </member>
        <member kind="function" protection="public" virtualness="non" static="no">
            <type>float</type>
            <name>weight3</name>
            <anchorfile>kuesa-morphcontroller.html</anchorfile>
            <anchor>weight3-prop</anchor>
            <arglist>() const const</arglist>
        </member>
        <member kind="function" protection="public" virtualness="non" static="no">
            <type>float</type>
            <name>weight4</name>
            <anchorfile>kuesa-morphcontroller.html</anchorfile>
            <anchor>weight4-prop</anchor>
            <arglist>() const const</arglist>
        </member>
        <member kind="function" protection="public" virtualness="non" static="no">
            <type>float</type>
            <name>weight5</name>
            <anchorfile>kuesa-morphcontroller.html</anchorfile>
            <anchor>weight5-prop</anchor>
            <arglist>() const const</arglist>
        </member>
        <member kind="function" protection="public" virtualness="non" static="no">
            <type>float</type>
            <name>weight6</name>
            <anchorfile>kuesa-morphcontroller.html</anchorfile>
            <anchor>weight6-prop</anchor>
            <arglist>() const const</arglist>
        </member>
        <member kind="function" protection="public" virtualness="non" static="no">
            <type>float</type>
            <name>weight7</name>
            <anchorfile>kuesa-morphcontroller.html</anchorfile>
            <anchor>weight7-prop</anchor>
            <arglist>() const const</arglist>
        </member>
        <member kind="function" protection="public" virtualness="non" static="no">
            <type>int</type>
            <name>count</name>
            <anchorfile>kuesa-morphcontroller.html</anchorfile>
            <anchor>count-prop</anchor>
            <arglist>() const const</arglist>
        </member>
        <member kind="function" protection="public" virtualness="non" static="no">
            <type>void</type>
            <name>setWeight0</name>
            <anchorfile>kuesa-morphcontroller.html</anchorfile>
            <anchor>weight0-prop</anchor>
            <arglist>(float weight0)</arglist>
        </member>
        <member kind="function" protection="public" virtualness="non" static="no">
            <type>void</type>
            <name>setWeight1</name>
            <anchorfile>kuesa-morphcontroller.html</anchorfile>
            <anchor>weight1-prop</anchor>
            <arglist>(float weight1)</arglist>
        </member>
        <member kind="function" protection="public" virtualness="non" static="no">
            <type>void</type>
            <name>setWeight2</name>
            <anchorfile>kuesa-morphcontroller.html</anchorfile>
            <anchor>weight2-prop</anchor>
            <arglist>(float weight2)</arglist>
        </member>
        <member kind="function" protection="public" virtualness="non" static="no">
            <type>void</type>
            <name>setWeight3</name>
            <anchorfile>kuesa-morphcontroller.html</anchorfile>
            <anchor>weight3-prop</anchor>
            <arglist>(float weight3)</arglist>
        </member>
        <member kind="function" protection="public" virtualness="non" static="no">
            <type>void</type>
            <name>setWeight4</name>
            <anchorfile>kuesa-morphcontroller.html</anchorfile>
            <anchor>weight4-prop</anchor>
            <arglist>(float weight4)</arglist>
        </member>
        <member kind="function" protection="public" virtualness="non" static="no">
            <type>void</type>
            <name>setWeight5</name>
            <anchorfile>kuesa-morphcontroller.html</anchorfile>
            <anchor>weight5-prop</anchor>
            <arglist>(float weight5)</arglist>
        </member>
        <member kind="function" protection="public" virtualness="non" static="no">
            <type>void</type>
            <name>setWeight6</name>
            <anchorfile>kuesa-morphcontroller.html</anchorfile>
            <anchor>weight6-prop</anchor>
            <arglist>(float weight6)</arglist>
        </member>
        <member kind="function" protection="public" virtualness="non" static="no">
            <type>void</type>
            <name>setWeight7</name>
            <anchorfile>kuesa-morphcontroller.html</anchorfile>
            <anchor>weight7-prop</anchor>
            <arglist>(float weight7)</arglist>
        </member>
        <member kind="function" protection="public" virtualness="non" static="no">
            <type>void</type>
            <name>weight0Changed</name>
            <anchorfile>kuesa-morphcontroller.html</anchorfile>
            <anchor>weight0-prop</anchor>
            <arglist>(float weight0)</arglist>
        </member>
        <member kind="function" protection="public" virtualness="non" static="no">
            <type>void</type>
            <name>weight1Changed</name>
            <anchorfile>kuesa-morphcontroller.html</anchorfile>
            <anchor>weight1-prop</anchor>
            <arglist>(float weight1)</arglist>
        </member>
        <member kind="function" protection="public" virtualness="non" static="no">
            <type>void</type>
            <name>weight2Changed</name>
            <anchorfile>kuesa-morphcontroller.html</anchorfile>
            <anchor>weight2-prop</anchor>
            <arglist>(float weight2)</arglist>
        </member>
        <member kind="function" protection="public" virtualness="non" static="no">
            <type>void</type>
            <name>weight3Changed</name>
            <anchorfile>kuesa-morphcontroller.html</anchorfile>
            <anchor>weight3-prop</anchor>
            <arglist>(float weight3)</arglist>
        </member>
        <member kind="function" protection="public" virtualness="non" static="no">
            <type>void</type>
            <name>weight4Changed</name>
            <anchorfile>kuesa-morphcontroller.html</anchorfile>
            <anchor>weight4-prop</anchor>
            <arglist>(float weight4)</arglist>
        </member>
        <member kind="function" protection="public" virtualness="non" static="no">
            <type>void</type>
            <name>weight5Changed</name>
            <anchorfile>kuesa-morphcontroller.html</anchorfile>
            <anchor>weight5-prop</anchor>
            <arglist>(float weight5)</arglist>
        </member>
        <member kind="function" protection="public" virtualness="non" static="no">
            <type>void</type>
            <name>weight6Changed</name>
            <anchorfile>kuesa-morphcontroller.html</anchorfile>
            <anchor>weight6-prop</anchor>
            <arglist>(float weight6)</arglist>
        </member>
        <member kind="function" protection="public" virtualness="non" static="no">
            <type>void</type>
            <name>weight7Changed</name>
            <anchorfile>kuesa-morphcontroller.html</anchorfile>
            <anchor>weight7-prop</anchor>
            <arglist>(float weight7)</arglist>
        </member>
        <member kind="function" protection="public" virtualness="non" static="no">
            <type>void</type>
            <name>countChanged</name>
            <anchorfile>kuesa-morphcontroller.html</anchorfile>
            <anchor>count-prop</anchor>
            <arglist>(int count)</arglist>
        </member>
    </compound>
    <compound kind="class">
        <name>Kuesa::UnlitEffect</name>
        <filename>kuesa-unliteffect.html</filename>
        <member kind="function" protection="public" virtualness="non" static="no">
            <type>bool</type>
            <name>isBaseColorMapEnabled</name>
            <anchorfile>kuesa-unliteffect.html</anchorfile>
            <anchor>baseColorMapEnabled-prop</anchor>
            <arglist>() const const</arglist>
        </member>
        <member kind="function" protection="public" virtualness="non" static="no">
            <type>bool</type>
            <name>isUsingColorAttribute</name>
            <anchorfile>kuesa-unliteffect.html</anchorfile>
            <anchor>usingColorAttribute-prop</anchor>
            <arglist>() const const</arglist>
        </member>
        <member kind="function" protection="public" virtualness="non" static="no">
            <type>bool</type>
            <name>isDoubleSided</name>
            <anchorfile>kuesa-unliteffect.html</anchorfile>
            <anchor>doubleSided-prop</anchor>
            <arglist>() const const</arglist>
        </member>
        <member kind="function" protection="public" virtualness="non" static="no">
            <type>bool</type>
            <name>useSkinning</name>
            <anchorfile>kuesa-unliteffect.html</anchorfile>
            <anchor>useSkinning-prop</anchor>
            <arglist>() const const</arglist>
        </member>
        <member kind="function" protection="public" virtualness="non" static="no">
            <type>bool</type>
            <name>isOpaque</name>
            <anchorfile>kuesa-unliteffect.html</anchorfile>
            <anchor>opaque-prop</anchor>
            <arglist>() const const</arglist>
        </member>
        <member kind="function" protection="public" virtualness="non" static="no">
            <type>bool</type>
            <name>isAlphaCutoffEnabled</name>
            <anchorfile>kuesa-unliteffect.html</anchorfile>
            <anchor>alphaCutoffEnabled-prop</anchor>
            <arglist>() const const</arglist>
        </member>
        <member kind="function" protection="public" virtualness="non" static="no">
            <type>void</type>
            <name>setBaseColorMapEnabled</name>
            <anchorfile>kuesa-unliteffect.html</anchorfile>
            <anchor>baseColorMapEnabled-prop</anchor>
            <arglist>(bool enabled)</arglist>
        </member>
        <member kind="function" protection="public" virtualness="non" static="no">
            <type>void</type>
            <name>setUsingColorAttribute</name>
            <anchorfile>kuesa-unliteffect.html</anchorfile>
            <anchor>usingColorAttribute-prop</anchor>
            <arglist>(bool usingColorAttribute)</arglist>
        </member>
        <member kind="function" protection="public" virtualness="non" static="no">
            <type>void</type>
            <name>setDoubleSided</name>
            <anchorfile>kuesa-unliteffect.html</anchorfile>
            <anchor>doubleSided-prop</anchor>
            <arglist>(bool doubleSided)</arglist>
        </member>
        <member kind="function" protection="public" virtualness="non" static="no">
            <type>void</type>
            <name>setUseSkinning</name>
            <anchorfile>kuesa-unliteffect.html</anchorfile>
            <anchor>useSkinning-prop</anchor>
            <arglist>(bool useSkinning)</arglist>
        </member>
        <member kind="function" protection="public" virtualness="non" static="no">
            <type>void</type>
            <name>setOpaque</name>
            <anchorfile>kuesa-unliteffect.html</anchorfile>
            <anchor>opaque-prop</anchor>
            <arglist>(bool opaque)</arglist>
        </member>
        <member kind="function" protection="public" virtualness="non" static="no">
            <type>void</type>
            <name>setAlphaCutoffEnabled</name>
            <anchorfile>kuesa-unliteffect.html</anchorfile>
            <anchor>alphaCutoffEnabled-prop</anchor>
            <arglist>(bool enabled)</arglist>
        </member>
        <member kind="function" protection="public" virtualness="non" static="no">
            <type>void</type>
            <name>baseColorMapEnabledChanged</name>
            <anchorfile>kuesa-unliteffect.html</anchorfile>
            <anchor>baseColorMapEnabled-prop</anchor>
            <arglist>(bool enabled)</arglist>
        </member>
        <member kind="function" protection="public" virtualness="non" static="no">
            <type>void</type>
            <name>usingColorAttributeChanged</name>
            <anchorfile>kuesa-unliteffect.html</anchorfile>
            <anchor>usingColorAttribute-prop</anchor>
            <arglist>(bool usingColorAttribute)</arglist>
        </member>
        <member kind="function" protection="public" virtualness="non" static="no">
            <type>void</type>
            <name>doubleSidedChanged</name>
            <anchorfile>kuesa-unliteffect.html</anchorfile>
            <anchor>doubleSided-prop</anchor>
            <arglist>(bool doubleSided)</arglist>
        </member>
        <member kind="function" protection="public" virtualness="non" static="no">
            <type>void</type>
            <name>useSkinningChanged</name>
            <anchorfile>kuesa-unliteffect.html</anchorfile>
            <anchor>useSkinning-prop</anchor>
            <arglist>(bool useSkinning)</arglist>
        </member>
        <member kind="function" protection="public" virtualness="non" static="no">
            <type>void</type>
            <name>opaqueChanged</name>
            <anchorfile>kuesa-unliteffect.html</anchorfile>
            <anchor>opaque-prop</anchor>
            <arglist>(bool opaque)</arglist>
        </member>
        <member kind="function" protection="public" virtualness="non" static="no">
            <type>void</type>
            <name>alphaCutoffEnabledChanged</name>
            <anchorfile>kuesa-unliteffect.html</anchorfile>
            <anchor>alphaCutoffEnabled-prop</anchor>
            <arglist>(bool enabled)</arglist>
        </member>
    </compound>
    <compound kind="class">
        <name>Kuesa::Skybox</name>
        <filename>kuesa-skybox.html</filename>
        <member kind="function" protection="public" virtualness="non" static="no">
            <type>QString</type>
            <name>baseName</name>
            <anchorfile>kuesa-skybox.html</anchorfile>
            <anchor>baseName</anchor>
            <arglist>() const const</arglist>
        </member>
        <member kind="function" protection="public" virtualness="non" static="no">
            <type>QString</type>
            <name>extension</name>
            <anchorfile>kuesa-skybox.html</anchorfile>
            <anchor>extension</anchor>
            <arglist>() const const</arglist>
        </member>
        <member kind="function" protection="public" virtualness="non" static="no">
            <type>void</type>
            <name>setBaseName</name>
            <anchorfile>kuesa-skybox.html</anchorfile>
            <anchor>setBaseName</anchor>
            <arglist>(const QString &amp;baseName)</arglist>
        </member>
        <member kind="function" protection="public" virtualness="non" static="no">
            <type>void</type>
            <name>setExtension</name>
            <anchorfile>kuesa-skybox.html</anchorfile>
            <anchor>setExtension</anchor>
            <arglist>(const QString &amp;extension)</arglist>
        </member>
        <member kind="function" protection="public" virtualness="non" static="no">
            <type>void</type>
            <name>baseNameChanged</name>
            <anchorfile>kuesa-skybox.html</anchorfile>
            <anchor>baseName-prop</anchor>
            <arglist>(const QString &amp;path)</arglist>
        </member>
        <member kind="function" protection="public" virtualness="non" static="no">
            <type>void</type>
            <name>extensionChanged</name>
            <anchorfile>kuesa-skybox.html</anchorfile>
            <anchor>extension-prop</anchor>
            <arglist>(const QString &amp;extension)</arglist>
        </member>
    </compound>
    <compound kind="class">
        <name>Kuesa::AnimationMappingCollection</name>
        <filename>kuesa-animationmappingcollection.html</filename>
        <base>AbstractAssetCollection</base>
    </compound>
    <compound kind="class">
        <name>Kuesa::SpotLight</name>
        <filename>kuesa-spotlight.html</filename>
        <member kind="property" type="QVector3D">
            <name>localDirection</name>
            <anchorfile>kuesa-spotlight.html</anchorfile>
            <anchor>localDirection-prop</anchor>
            <arglist></arglist>
        </member>
        <member kind="property" type="float">
            <name>innerConeAngle</name>
            <anchorfile>kuesa-spotlight.html</anchorfile>
            <anchor>innerConeAngle-prop</anchor>
            <arglist></arglist>
        </member>
        <member kind="property" type="float">
            <name>outerConeAngle</name>
            <anchorfile>kuesa-spotlight.html</anchorfile>
            <anchor>outerConeAngle-prop</anchor>
            <arglist></arglist>
        </member>
        <member kind="function" protection="public" virtualness="non" static="no">
            <type>QVector3D</type>
            <name>localDirection</name>
            <anchorfile>kuesa-spotlight.html</anchorfile>
            <anchor>localDirection-prop</anchor>
            <arglist>() const const</arglist>
        </member>
        <member kind="function" protection="public" virtualness="non" static="no">
            <type>float</type>
            <name>innerConeAngle</name>
            <anchorfile>kuesa-spotlight.html</anchorfile>
            <anchor>innerConeAngle-prop</anchor>
            <arglist>() const const</arglist>
        </member>
        <member kind="function" protection="public" virtualness="non" static="no">
            <type>float</type>
            <name>outerConeAngle</name>
            <anchorfile>kuesa-spotlight.html</anchorfile>
            <anchor>outerConeAngle-prop</anchor>
            <arglist>() const const</arglist>
        </member>
        <member kind="function" protection="public" virtualness="non" static="no">
            <type>float</type>
            <name>range</name>
            <anchorfile>kuesa-spotlight.html</anchorfile>
            <anchor>range-prop</anchor>
            <arglist>() const const</arglist>
        </member>
        <member kind="function" protection="public" virtualness="non" static="no">
            <type>void</type>
            <name>setLocalDirection</name>
            <anchorfile>kuesa-spotlight.html</anchorfile>
            <anchor>localDirection-prop</anchor>
            <arglist>(const QVector3D &amp;localDirection)</arglist>
        </member>
        <member kind="function" protection="public" virtualness="non" static="no">
            <type>void</type>
            <name>setInnerConeAngle</name>
            <anchorfile>kuesa-spotlight.html</anchorfile>
            <anchor>innerConeAngle-prop</anchor>
            <arglist>(float innerConeAngle)</arglist>
        </member>
        <member kind="function" protection="public" virtualness="non" static="no">
            <type>void</type>
            <name>setOuterConeAngle</name>
            <anchorfile>kuesa-spotlight.html</anchorfile>
            <anchor>outerConeAngle-prop</anchor>
            <arglist>(float outerConeAngle)</arglist>
        </member>
        <member kind="function" protection="public" virtualness="non" static="no">
            <type>void</type>
            <name>setRange</name>
            <anchorfile>kuesa-spotlight.html</anchorfile>
            <anchor>range-prop</anchor>
            <arglist>(float range)</arglist>
        </member>
        <member kind="function" protection="public" virtualness="non" static="no">
            <type>void</type>
            <name>localDirectionChanged</name>
            <anchorfile>kuesa-spotlight.html</anchorfile>
            <anchor>localDirection-prop</anchor>
            <arglist>(const QVector3D &amp;localDirection)</arglist>
        </member>
        <member kind="function" protection="public" virtualness="non" static="no">
            <type>void</type>
            <name>innerConeAngleChanged</name>
            <anchorfile>kuesa-spotlight.html</anchorfile>
            <anchor>innerConeAngle-prop</anchor>
            <arglist>(float innerConeAngle)</arglist>
        </member>
        <member kind="function" protection="public" virtualness="non" static="no">
            <type>void</type>
            <name>outerConeAngleChanged</name>
            <anchorfile>kuesa-spotlight.html</anchorfile>
            <anchor>outerConeAngle-prop</anchor>
            <arglist>(float outerConeAngle)</arglist>
        </member>
        <member kind="function" protection="public" virtualness="non" static="no">
            <type>void</type>
            <name>rangeChanged</name>
            <anchorfile>kuesa-spotlight.html</anchorfile>
            <anchor>range-prop</anchor>
            <arglist>(float range)</arglist>
        </member>
    </compound>
    <compound kind="class">
        <name>Kuesa::EntityCollection</name>
        <filename>kuesa-entitycollection.html</filename>
        <base>AbstractAssetCollection</base>
    </compound>
    <compound kind="class">
        <name>Kuesa::CameraCollection</name>
        <filename>kuesa-cameracollection.html</filename>
        <base>AbstractAssetCollection</base>
    </compound>
    <compound kind="class">
        <name>Kuesa::UnlitProperties</name>
        <filename>kuesa-unlitproperties.html</filename>
        <base>GLTF2MaterialProperties</base>
    </compound>
    <compound kind="class">
        <name>Kuesa::TextureImageCollection</name>
        <filename>kuesa-textureimagecollection.html</filename>
        <base>AbstractAssetCollection</base>
        <member kind="function" protection="public" virtualness="non" static="no">
            <type>Qt3DRender::QTextureImage *</type>
            <name>add</name>
            <anchorfile>kuesa-textureimagecollection.html</anchorfile>
            <anchor>add</anchor>
            <arglist>(const QString &amp;name, const QUrl &amp;source)</arglist>
        </member>
    </compound>
    <compound kind="class">
        <name>Kuesa::ForwardRenderer</name>
        <filename>kuesa-forwardrenderer.html</filename>
        <member kind="property" type="QObject*">
            <name>renderSurface</name>
            <anchorfile>kuesa-forwardrenderer.html</anchorfile>
            <anchor>renderSurface-prop</anchor>
            <arglist></arglist>
        </member>
        <member kind="property" type="QRectF">
            <name>viewportRect</name>
            <anchorfile>kuesa-forwardrenderer.html</anchorfile>
            <anchor>viewportRect-prop</anchor>
            <arglist></arglist>
        </member>
        <member kind="property" type="Qt3DCore::QEntity*">
            <name>camera</name>
            <anchorfile>kuesa-forwardrenderer.html</anchorfile>
            <anchor>camera-prop</anchor>
            <arglist></arglist>
        </member>
        <member kind="property" type="QColor">
            <name>clearColor</name>
            <anchorfile>kuesa-forwardrenderer.html</anchorfile>
            <anchor>clearColor-prop</anchor>
            <arglist></arglist>
        </member>
        <member kind="property" type="Qt3DRender::QClearBuffers::BufferType">
            <name>clearBuffers</name>
            <anchorfile>kuesa-forwardrenderer.html</anchorfile>
            <anchor>clearBuffers-prop</anchor>
            <arglist></arglist>
        </member>
        <member kind="property" type="bool">
            <name>frustumCulling</name>
            <anchorfile>kuesa-forwardrenderer.html</anchorfile>
            <anchor>frustumCulling-prop</anchor>
            <arglist></arglist>
        </member>
        <member kind="property" type="bool">
            <name>backToFrontSorting</name>
            <anchorfile>kuesa-forwardrenderer.html</anchorfile>
            <anchor>backToFrontSorting-prop</anchor>
            <arglist></arglist>
        </member>
        <member kind="property" type="bool">
            <name>zFilling</name>
            <anchorfile>kuesa-forwardrenderer.html</anchorfile>
            <anchor>zFilling-prop</anchor>
            <arglist></arglist>
        </member>
        <member kind="property" type="ToneMappingAndGammaCorrectionEffect::ToneMapping">
            <name>toneMappingAlgorithm</name>
            <anchorfile>kuesa-forwardrenderer.html</anchorfile>
            <anchor>toneMappingAlgorithm-prop</anchor>
            <arglist></arglist>
        </member>
        <member kind="property" type="float">
            <name>exposure</name>
            <anchorfile>kuesa-forwardrenderer.html</anchorfile>
            <anchor>exposure-prop</anchor>
            <arglist></arglist>
        </member>
        <member kind="property" type="float">
            <name>gamma</name>
            <anchorfile>kuesa-forwardrenderer.html</anchorfile>
            <anchor>gamma-prop</anchor>
            <arglist></arglist>
        </member>
        <member kind="function" protection="public" virtualness="non" static="no">
            <type>QObject *</type>
            <name>renderSurface</name>
            <anchorfile>kuesa-forwardrenderer.html</anchorfile>
            <anchor>renderSurface</anchor>
            <arglist>() const const</arglist>
        </member>
        <member kind="function" protection="public" virtualness="non" static="no">
            <type>QRectF</type>
            <name>viewportRect</name>
            <anchorfile>kuesa-forwardrenderer.html</anchorfile>
            <anchor>viewportRect</anchor>
            <arglist>() const const</arglist>
        </member>
        <member kind="function" protection="public" virtualness="non" static="no">
            <type>Qt3DCore::QEntity *</type>
            <name>camera</name>
            <anchorfile>kuesa-forwardrenderer.html</anchorfile>
            <anchor>camera</anchor>
            <arglist>() const const</arglist>
        </member>
        <member kind="function" protection="public" virtualness="non" static="no">
            <type>QColor</type>
            <name>clearColor</name>
            <anchorfile>kuesa-forwardrenderer.html</anchorfile>
            <anchor>clearColor</anchor>
            <arglist>() const const</arglist>
        </member>
        <member kind="function" protection="public" virtualness="non" static="no">
            <type>int</type>
            <name>clearBuffers</name>
            <anchorfile>kuesa-forwardrenderer.html</anchorfile>
            <anchor>clearBuffers</anchor>
            <arglist>() const const</arglist>
        </member>
        <member kind="function" protection="public" virtualness="non" static="no">
            <type>bool</type>
            <name>frustumCulling</name>
            <anchorfile>kuesa-forwardrenderer.html</anchorfile>
            <anchor>frustumCulling</anchor>
            <arglist>() const const</arglist>
        </member>
        <member kind="function" protection="public" virtualness="non" static="no">
            <type>bool</type>
            <name>backToFrontSorting</name>
            <anchorfile>kuesa-forwardrenderer.html</anchorfile>
            <anchor>backToFrontSorting</anchor>
            <arglist>() const const</arglist>
        </member>
        <member kind="function" protection="public" virtualness="non" static="no">
            <type>bool</type>
            <name>zFilling</name>
            <anchorfile>kuesa-forwardrenderer.html</anchorfile>
            <anchor>zFilling</anchor>
            <arglist>() const const</arglist>
        </member>
        <member kind="function" protection="public" virtualness="non" static="no">
            <type>float</type>
            <name>exposure</name>
            <anchorfile>kuesa-forwardrenderer.html</anchorfile>
            <anchor>exposure</anchor>
            <arglist>() const const</arglist>
        </member>
        <member kind="function" protection="public" virtualness="non" static="no">
            <type>float</type>
            <name>gamma</name>
            <anchorfile>kuesa-forwardrenderer.html</anchorfile>
            <anchor>gamma</anchor>
            <arglist>() const const</arglist>
        </member>
        <member kind="function" protection="public" virtualness="non" static="no">
            <type>int</type>
            <name>toneMappingAlgorithm</name>
            <anchorfile>kuesa-forwardrenderer.html</anchorfile>
            <anchor>toneMappingAlgorithm</anchor>
            <arglist>() const const</arglist>
        </member>
        <member kind="function" protection="public" virtualness="non" static="no">
            <type>void</type>
            <name>addPostProcessingEffect</name>
            <anchorfile>kuesa-forwardrenderer.html</anchorfile>
            <anchor>addPostProcessingEffect</anchor>
            <arglist>(Kuesa::AbstractPostProcessingEffect *effect)</arglist>
        </member>
        <member kind="function" protection="public" virtualness="non" static="no">
            <type>void</type>
            <name>removePostProcessingEffect</name>
            <anchorfile>kuesa-forwardrenderer.html</anchorfile>
            <anchor>removePostProcessingEffect</anchor>
            <arglist>(Kuesa::AbstractPostProcessingEffect *effect)</arglist>
        </member>
        <member kind="function" protection="public" virtualness="non" static="no">
            <type>QVector&lt;Kuesa::AbstractPostProcessingEffect *&gt;</type>
            <name>postProcessingEffects</name>
            <anchorfile>kuesa-forwardrenderer.html</anchorfile>
            <anchor>postProcessingEffects</anchor>
            <arglist>() const const</arglist>
        </member>
        <member kind="function" protection="public" virtualness="non" static="no">
            <type>void</type>
            <name>setRenderSurface</name>
            <anchorfile>kuesa-forwardrenderer.html</anchorfile>
            <anchor>setRenderSurface</anchor>
            <arglist>(QObject *renderSurface)</arglist>
        </member>
        <member kind="function" protection="public" virtualness="non" static="no">
            <type>void</type>
            <name>setViewportRect</name>
            <anchorfile>kuesa-forwardrenderer.html</anchorfile>
            <anchor>setViewportRect</anchor>
            <arglist>(const QRectF &amp;viewportRect)</arglist>
        </member>
        <member kind="function" protection="public" virtualness="non" static="no">
            <type>void</type>
            <name>setCamera</name>
            <anchorfile>kuesa-forwardrenderer.html</anchorfile>
            <anchor>setCamera</anchor>
            <arglist>(Qt3DCore::QEntity *camera)</arglist>
        </member>
        <member kind="function" protection="public" virtualness="non" static="no">
            <type>void</type>
            <name>setClearColor</name>
            <anchorfile>kuesa-forwardrenderer.html</anchorfile>
            <anchor>setClearColor</anchor>
            <arglist>(const QColor &amp;clearColor)</arglist>
        </member>
        <member kind="function" protection="public" virtualness="non" static="no">
            <type>void</type>
            <name>setClearBuffers</name>
            <anchorfile>kuesa-forwardrenderer.html</anchorfile>
            <anchor>setClearBuffers</anchor>
            <arglist>(int clearBuffers)</arglist>
        </member>
        <member kind="function" protection="public" virtualness="non" static="no">
            <type>void</type>
            <name>setFrustumCulling</name>
            <anchorfile>kuesa-forwardrenderer.html</anchorfile>
            <anchor>setFrustumCulling</anchor>
            <arglist>(bool frustumCulling)</arglist>
        </member>
        <member kind="function" protection="public" virtualness="non" static="no">
            <type>void</type>
            <name>setBackToFrontSorting</name>
            <anchorfile>kuesa-forwardrenderer.html</anchorfile>
            <anchor>setBackToFrontSorting</anchor>
            <arglist>(bool backToFrontSorting)</arglist>
        </member>
        <member kind="function" protection="public" virtualness="non" static="no">
            <type>void</type>
            <name>setZFilling</name>
            <anchorfile>kuesa-forwardrenderer.html</anchorfile>
            <anchor>setZFilling</anchor>
            <arglist>(bool zfilling)</arglist>
        </member>
        <member kind="function" protection="public" virtualness="non" static="no">
            <type>void</type>
            <name>setGamma</name>
            <anchorfile>kuesa-forwardrenderer.html</anchorfile>
            <anchor>setGamma</anchor>
            <arglist>(float gamma)</arglist>
        </member>
        <member kind="function" protection="public" virtualness="non" static="no">
            <type>void</type>
            <name>setExposure</name>
            <anchorfile>kuesa-forwardrenderer.html</anchorfile>
            <anchor>setExposure</anchor>
            <arglist>(float exposure)</arglist>
        </member>
        <member kind="function" protection="public" virtualness="non" static="no">
            <type>void</type>
            <name>setToneMappingAlgorithm</name>
            <anchorfile>kuesa-forwardrenderer.html</anchorfile>
            <anchor>setToneMappingAlgorithm</anchor>
            <arglist>(int toneMappingAlgorithm)</arglist>
        </member>
        <member kind="function" protection="public" virtualness="non" static="no">
            <type>void</type>
            <name>renderSurfaceChanged</name>
            <anchorfile>kuesa-forwardrenderer.html</anchorfile>
            <anchor>renderSurface-prop</anchor>
            <arglist>(QObject *renderSurface)</arglist>
        </member>
        <member kind="function" protection="public" virtualness="non" static="no">
            <type>void</type>
            <name>viewportRectChanged</name>
            <anchorfile>kuesa-forwardrenderer.html</anchorfile>
            <anchor>viewportRect-prop</anchor>
            <arglist>(const QRectF &amp;viewportRect)</arglist>
        </member>
        <member kind="function" protection="public" virtualness="non" static="no">
            <type>void</type>
            <name>cameraChanged</name>
            <anchorfile>kuesa-forwardrenderer.html</anchorfile>
            <anchor>camera-prop</anchor>
            <arglist>(Qt3DCore::QEntity *camera)</arglist>
        </member>
        <member kind="function" protection="public" virtualness="non" static="no">
            <type>void</type>
            <name>clearColorChanged</name>
            <anchorfile>kuesa-forwardrenderer.html</anchorfile>
            <anchor>clearColor-prop</anchor>
            <arglist>(const QColor &amp;clearColor)</arglist>
        </member>
        <member kind="function" protection="public" virtualness="non" static="no">
            <type>void</type>
            <name>clearBuffersChanged</name>
            <anchorfile>kuesa-forwardrenderer.html</anchorfile>
            <anchor>clearBuffers-prop</anchor>
            <arglist>(int clearBuffers)</arglist>
        </member>
        <member kind="function" protection="public" virtualness="non" static="no">
            <type>void</type>
            <name>frustumCullingChanged</name>
            <anchorfile>kuesa-forwardrenderer.html</anchorfile>
            <anchor>frustumCulling-prop</anchor>
            <arglist>(bool frustumCulling)</arglist>
        </member>
        <member kind="function" protection="public" virtualness="non" static="no">
            <type>void</type>
            <name>backToFrontSortingChanged</name>
            <anchorfile>kuesa-forwardrenderer.html</anchorfile>
            <anchor>backToFrontSorting-prop</anchor>
            <arglist>(bool backToFrontSorting)</arglist>
        </member>
        <member kind="function" protection="public" virtualness="non" static="no">
            <type>void</type>
            <name>zFillingChanged</name>
            <anchorfile>kuesa-forwardrenderer.html</anchorfile>
            <anchor>zFilling-prop</anchor>
            <arglist>(bool zFilling)</arglist>
        </member>
        <member kind="function" protection="public" virtualness="non" static="no">
            <type>void</type>
            <name>gammaChanged</name>
            <anchorfile>kuesa-forwardrenderer.html</anchorfile>
            <anchor>gamma-prop</anchor>
            <arglist>(float gamma)</arglist>
        </member>
        <member kind="function" protection="public" virtualness="non" static="no">
            <type>void</type>
            <name>exposureChanged</name>
            <anchorfile>kuesa-forwardrenderer.html</anchorfile>
            <anchor>exposure-prop</anchor>
            <arglist>(float exposure)</arglist>
        </member>
        <member kind="function" protection="public" virtualness="non" static="no">
            <type>void</type>
            <name>toneMappingAlgorithmChanged</name>
            <anchorfile>kuesa-forwardrenderer.html</anchorfile>
            <anchor>toneMappingAlgorithm-prop</anchor>
            <arglist>(int toneMappingAlgorithm)</arglist>
        </member>
    </compound>
    <compound kind="class">
        <name>Kuesa::MetallicRoughnessEffect</name>
        <filename>kuesa-metallicroughnesseffect.html</filename>
        <member kind="property" type="bool">
            <name>baseColorMapEnabled</name>
            <anchorfile>kuesa-metallicroughnesseffect.html</anchorfile>
            <anchor>baseColorMapEnabled-prop</anchor>
            <arglist></arglist>
        </member>
        <member kind="property" type="bool">
            <name>metalRoughMapEnabled</name>
            <anchorfile>kuesa-metallicroughnesseffect.html</anchorfile>
            <anchor>metalRoughMapEnabled-prop</anchor>
            <arglist></arglist>
        </member>
        <member kind="property" type="bool">
            <name>normalMapEnabled</name>
            <anchorfile>kuesa-metallicroughnesseffect.html</anchorfile>
            <anchor>normalMapEnabled-prop</anchor>
            <arglist></arglist>
        </member>
        <member kind="property" type="bool">
            <name>ambientOcclusionMapEnabled</name>
            <anchorfile>kuesa-metallicroughnesseffect.html</anchorfile>
            <anchor>ambientOcclusionMapEnabled-prop</anchor>
            <arglist></arglist>
        </member>
        <member kind="property" type="bool">
            <name>emissiveMapEnabled</name>
            <anchorfile>kuesa-metallicroughnesseffect.html</anchorfile>
            <anchor>emissiveMapEnabled-prop</anchor>
            <arglist></arglist>
        </member>
        <member kind="property" type="bool">
            <name>usingColorAttribute</name>
            <anchorfile>kuesa-metallicroughnesseffect.html</anchorfile>
            <anchor>usingColorAttribute-prop</anchor>
            <arglist></arglist>
        </member>
        <member kind="property" type="bool">
            <name>doubleSided</name>
            <anchorfile>kuesa-metallicroughnesseffect.html</anchorfile>
            <anchor>doubleSided-prop</anchor>
            <arglist></arglist>
        </member>
        <member kind="property" type="bool">
            <name>useSkinning</name>
            <anchorfile>kuesa-metallicroughnesseffect.html</anchorfile>
            <anchor>useSkinning-prop</anchor>
            <arglist></arglist>
        </member>
        <member kind="property" type="bool">
            <name>opaque</name>
            <anchorfile>kuesa-metallicroughnesseffect.html</anchorfile>
            <anchor>opaque-prop</anchor>
            <arglist></arglist>
        </member>
        <member kind="property" type="bool">
            <name>alphaCutoffEnabled</name>
            <anchorfile>kuesa-metallicroughnesseffect.html</anchorfile>
            <anchor>alphaCutoffEnabled-prop</anchor>
            <arglist></arglist>
        </member>
        <member kind="property" type="Qt3DRender::QAbstractTexture*">
            <name>brdfLUT</name>
            <anchorfile>kuesa-metallicroughnesseffect.html</anchorfile>
            <anchor>brdfLUT-prop</anchor>
            <arglist></arglist>
        </member>
        <member kind="function" protection="public" virtualness="non" static="no">
            <type>bool</type>
            <name>isBaseColorMapEnabled</name>
            <anchorfile>kuesa-metallicroughnesseffect.html</anchorfile>
            <anchor>baseColorMapEnabled-prop</anchor>
            <arglist>() const const</arglist>
        </member>
        <member kind="function" protection="public" virtualness="non" static="no">
            <type>bool</type>
            <name>isMetalRoughMapEnabled</name>
            <anchorfile>kuesa-metallicroughnesseffect.html</anchorfile>
            <anchor>metalRoughMapEnabled-prop</anchor>
            <arglist>() const const</arglist>
        </member>
        <member kind="function" protection="public" virtualness="non" static="no">
            <type>bool</type>
            <name>isNormalMapEnabled</name>
            <anchorfile>kuesa-metallicroughnesseffect.html</anchorfile>
            <anchor>normalMapEnabled-prop</anchor>
            <arglist>() const const</arglist>
        </member>
        <member kind="function" protection="public" virtualness="non" static="no">
            <type>bool</type>
            <name>isAmbientOcclusionMapEnabled</name>
            <anchorfile>kuesa-metallicroughnesseffect.html</anchorfile>
            <anchor>ambientOcclusionMapEnabled-prop</anchor>
            <arglist>() const const</arglist>
        </member>
        <member kind="function" protection="public" virtualness="non" static="no">
            <type>bool</type>
            <name>isEmissiveMapEnabled</name>
            <anchorfile>kuesa-metallicroughnesseffect.html</anchorfile>
            <anchor>emissiveMapEnabled-prop</anchor>
            <arglist>() const const</arglist>
        </member>
        <member kind="function" protection="public" virtualness="non" static="no">
            <type>bool</type>
            <name>isUsingColorAttribute</name>
            <anchorfile>kuesa-metallicroughnesseffect.html</anchorfile>
            <anchor>usingColorAttribute-prop</anchor>
            <arglist>() const const</arglist>
        </member>
        <member kind="function" protection="public" virtualness="non" static="no">
            <type>bool</type>
            <name>isDoubleSided</name>
            <anchorfile>kuesa-metallicroughnesseffect.html</anchorfile>
            <anchor>doubleSided-prop</anchor>
            <arglist>() const const</arglist>
        </member>
        <member kind="function" protection="public" virtualness="non" static="no">
            <type>bool</type>
            <name>useSkinning</name>
            <anchorfile>kuesa-metallicroughnesseffect.html</anchorfile>
            <anchor>useSkinning-prop</anchor>
            <arglist>() const const</arglist>
        </member>
        <member kind="function" protection="public" virtualness="non" static="no">
            <type>bool</type>
            <name>isOpaque</name>
            <anchorfile>kuesa-metallicroughnesseffect.html</anchorfile>
            <anchor>opaque-prop</anchor>
            <arglist>() const const</arglist>
        </member>
        <member kind="function" protection="public" virtualness="non" static="no">
            <type>bool</type>
            <name>isAlphaCutoffEnabled</name>
            <anchorfile>kuesa-metallicroughnesseffect.html</anchorfile>
            <anchor>alphaCutoffEnabled-prop</anchor>
            <arglist>() const const</arglist>
        </member>
        <member kind="function" protection="public" virtualness="non" static="no">
            <type>Qt3DRender::QAbstractTexture *</type>
            <name>brdfLUT</name>
            <anchorfile>kuesa-metallicroughnesseffect.html</anchorfile>
            <anchor>brdfLUT-prop</anchor>
            <arglist>() const const</arglist>
        </member>
        <member kind="function" protection="public" virtualness="non" static="no">
            <type>void</type>
            <name>setBaseColorMapEnabled</name>
            <anchorfile>kuesa-metallicroughnesseffect.html</anchorfile>
            <anchor>baseColorMapEnabled-prop</anchor>
            <arglist>(bool enabled)</arglist>
        </member>
        <member kind="function" protection="public" virtualness="non" static="no">
            <type>void</type>
            <name>setMetalRoughMapEnabled</name>
            <anchorfile>kuesa-metallicroughnesseffect.html</anchorfile>
            <anchor>metalRoughMapEnabled-prop</anchor>
            <arglist>(bool enabled)</arglist>
        </member>
        <member kind="function" protection="public" virtualness="non" static="no">
            <type>void</type>
            <name>setNormalMapEnabled</name>
            <anchorfile>kuesa-metallicroughnesseffect.html</anchorfile>
            <anchor>normalMapEnabled-prop</anchor>
            <arglist>(bool enabled)</arglist>
        </member>
        <member kind="function" protection="public" virtualness="non" static="no">
            <type>void</type>
            <name>setAmbientOcclusionMapEnabled</name>
            <anchorfile>kuesa-metallicroughnesseffect.html</anchorfile>
            <anchor>ambientOcclusionMapEnabled-prop</anchor>
            <arglist>(bool enabled)</arglist>
        </member>
        <member kind="function" protection="public" virtualness="non" static="no">
            <type>void</type>
            <name>setEmissiveMapEnabled</name>
            <anchorfile>kuesa-metallicroughnesseffect.html</anchorfile>
            <anchor>emissiveMapEnabled-prop</anchor>
            <arglist>(bool enabled)</arglist>
        </member>
        <member kind="function" protection="public" virtualness="non" static="no">
            <type>void</type>
            <name>setUsingColorAttribute</name>
            <anchorfile>kuesa-metallicroughnesseffect.html</anchorfile>
            <anchor>usingColorAttribute-prop</anchor>
            <arglist>(bool usingColorAttribute)</arglist>
        </member>
        <member kind="function" protection="public" virtualness="non" static="no">
            <type>void</type>
            <name>setDoubleSided</name>
            <anchorfile>kuesa-metallicroughnesseffect.html</anchorfile>
            <anchor>doubleSided-prop</anchor>
            <arglist>(bool doubleSided)</arglist>
        </member>
        <member kind="function" protection="public" virtualness="non" static="no">
            <type>void</type>
            <name>setUseSkinning</name>
            <anchorfile>kuesa-metallicroughnesseffect.html</anchorfile>
            <anchor>useSkinning-prop</anchor>
            <arglist>(bool useSkinning)</arglist>
        </member>
        <member kind="function" protection="public" virtualness="non" static="no">
            <type>void</type>
            <name>setOpaque</name>
            <anchorfile>kuesa-metallicroughnesseffect.html</anchorfile>
            <anchor>opaque-prop</anchor>
            <arglist>(bool opaque)</arglist>
        </member>
        <member kind="function" protection="public" virtualness="non" static="no">
            <type>void</type>
            <name>setAlphaCutoffEnabled</name>
            <anchorfile>kuesa-metallicroughnesseffect.html</anchorfile>
            <anchor>alphaCutoffEnabled-prop</anchor>
            <arglist>(bool enabled)</arglist>
        </member>
        <member kind="function" protection="public" virtualness="non" static="no">
            <type>void</type>
            <name>setBrdfLUT</name>
            <anchorfile>kuesa-metallicroughnesseffect.html</anchorfile>
            <anchor>brdfLUT-prop</anchor>
            <arglist>(Qt3DRender::QAbstractTexture *brdfLUT)</arglist>
        </member>
        <member kind="function" protection="public" virtualness="non" static="no">
            <type>void</type>
            <name>baseColorMapEnabledChanged</name>
            <anchorfile>kuesa-metallicroughnesseffect.html</anchorfile>
            <anchor>baseColorMapEnabled-prop</anchor>
            <arglist>(bool enabled)</arglist>
        </member>
        <member kind="function" protection="public" virtualness="non" static="no">
            <type>void</type>
            <name>metalRoughMapEnabledChanged</name>
            <anchorfile>kuesa-metallicroughnesseffect.html</anchorfile>
            <anchor>metalRoughMapEnabled-prop</anchor>
            <arglist>(bool enabled)</arglist>
        </member>
        <member kind="function" protection="public" virtualness="non" static="no">
            <type>void</type>
            <name>normalMapEnabledChanged</name>
            <anchorfile>kuesa-metallicroughnesseffect.html</anchorfile>
            <anchor>normalMapEnabled-prop</anchor>
            <arglist>(bool enabled)</arglist>
        </member>
        <member kind="function" protection="public" virtualness="non" static="no">
            <type>void</type>
            <name>ambientOcclusionMapEnabledChanged</name>
            <anchorfile>kuesa-metallicroughnesseffect.html</anchorfile>
            <anchor>ambientOcclusionMapEnabled-prop</anchor>
            <arglist>(bool enabled)</arglist>
        </member>
        <member kind="function" protection="public" virtualness="non" static="no">
            <type>void</type>
            <name>emissiveMapEnabledChanged</name>
            <anchorfile>kuesa-metallicroughnesseffect.html</anchorfile>
            <anchor>emissiveMapEnabled-prop</anchor>
            <arglist>(bool enabled)</arglist>
        </member>
        <member kind="function" protection="public" virtualness="non" static="no">
            <type>void</type>
            <name>usingColorAttributeChanged</name>
            <anchorfile>kuesa-metallicroughnesseffect.html</anchorfile>
            <anchor>usingColorAttribute-prop</anchor>
            <arglist>(bool usingColorAttribute)</arglist>
        </member>
        <member kind="function" protection="public" virtualness="non" static="no">
            <type>void</type>
            <name>doubleSidedChanged</name>
            <anchorfile>kuesa-metallicroughnesseffect.html</anchorfile>
            <anchor>doubleSided-prop</anchor>
            <arglist>(bool doubleSided)</arglist>
        </member>
        <member kind="function" protection="public" virtualness="non" static="no">
            <type>void</type>
            <name>useSkinningChanged</name>
            <anchorfile>kuesa-metallicroughnesseffect.html</anchorfile>
            <anchor>useSkinning-prop</anchor>
            <arglist>(bool useSkinning)</arglist>
        </member>
        <member kind="function" protection="public" virtualness="non" static="no">
            <type>void</type>
            <name>opaqueChanged</name>
            <anchorfile>kuesa-metallicroughnesseffect.html</anchorfile>
            <anchor>opaque-prop</anchor>
            <arglist>(bool opaque)</arglist>
        </member>
        <member kind="function" protection="public" virtualness="non" static="no">
            <type>void</type>
            <name>alphaCutoffEnabledChanged</name>
            <anchorfile>kuesa-metallicroughnesseffect.html</anchorfile>
            <anchor>alphaCutoffEnabled-prop</anchor>
            <arglist>(bool enabled)</arglist>
        </member>
        <member kind="function" protection="public" virtualness="non" static="no">
            <type>void</type>
            <name>brdfLUTChanged</name>
            <anchorfile>kuesa-metallicroughnesseffect.html</anchorfile>
            <anchor>brdfLUT-prop</anchor>
            <arglist>(Qt3DRender::QAbstractTexture *brdfLUT)</arglist>
        </member>
    </compound>
    <compound kind="class">
        <name>Kuesa::MeshCollection</name>
        <filename>kuesa-meshcollection.html</filename>
        <base>AbstractAssetCollection</base>
        <member kind="function" protection="public" virtualness="non" static="no">
            <type>Qt3DRender::QMesh *</type>
            <name>add</name>
            <anchorfile>kuesa-meshcollection.html</anchorfile>
            <anchor>add</anchor>
            <arglist>(const QString &amp;name, const QUrl &amp;source)</arglist>
        </member>
    </compound>
    <compound kind="class">
        <name>Kuesa::BloomEffect</name>
        <filename>kuesa-bloomeffect.html</filename>
        <base>AbstractPostProcessingEffect</base>
        <member kind="property" type="float">
            <name>threshold</name>
            <anchorfile>kuesa-bloomeffect.html</anchorfile>
            <anchor>threshold-prop</anchor>
            <arglist></arglist>
        </member>
        <member kind="property" type="int">
            <name>blurPassCount</name>
            <anchorfile>kuesa-bloomeffect.html</anchorfile>
            <anchor>blurPassCount-prop</anchor>
            <arglist></arglist>
        </member>
        <member kind="function" protection="public" virtualness="virtual" static="no">
            <type>virtual Kuesa::AbstractPostProcessingEffect::FrameGraphNodePtr</type>
            <name>frameGraphSubTree</name>
            <anchorfile>kuesa-bloomeffect.html</anchorfile>
            <anchor>frameGraphSubTree</anchor>
            <arglist>() const const override</arglist>
        </member>
        <member kind="function" protection="public" virtualness="virtual" static="no">
            <type>virtual void</type>
            <name>setSceneSize</name>
            <anchorfile>kuesa-bloomeffect.html</anchorfile>
            <anchor>setSceneSize</anchor>
            <arglist>(const QSize &amp;size) override</arglist>
        </member>
        <member kind="function" protection="public" virtualness="virtual" static="no">
            <type>virtual void</type>
            <name>setInputTexture</name>
            <anchorfile>kuesa-bloomeffect.html</anchorfile>
            <anchor>setInputTexture</anchor>
            <arglist>(Qt3DRender::QAbstractTexture *texture) override</arglist>
        </member>
        <member kind="function" protection="public" virtualness="non" static="no">
            <type>float</type>
            <name>threshold</name>
            <anchorfile>kuesa-bloomeffect.html</anchorfile>
            <anchor>threshold</anchor>
            <arglist>() const const</arglist>
        </member>
        <member kind="function" protection="public" virtualness="non" static="no">
            <type>int</type>
            <name>blurPassCount</name>
            <anchorfile>kuesa-bloomeffect.html</anchorfile>
            <anchor>blurPassCount</anchor>
            <arglist>() const const</arglist>
        </member>
        <member kind="function" protection="public" virtualness="non" static="no">
            <type>void</type>
            <name>setThreshold</name>
            <anchorfile>kuesa-bloomeffect.html</anchorfile>
            <anchor>setThreshold</anchor>
            <arglist>(float threshold)</arglist>
        </member>
        <member kind="function" protection="public" virtualness="non" static="no">
            <type>void</type>
            <name>setBlurPassCount</name>
            <anchorfile>kuesa-bloomeffect.html</anchorfile>
            <anchor>setBlurPassCount</anchor>
            <arglist>(int blurPassCount)</arglist>
        </member>
        <member kind="function" protection="public" virtualness="non" static="no">
            <type>void</type>
            <name>thresholdChanged</name>
            <anchorfile>kuesa-bloomeffect.html</anchorfile>
            <anchor>threshold-prop</anchor>
            <arglist>(float threshold)</arglist>
        </member>
        <member kind="function" protection="public" virtualness="non" static="no">
            <type>void</type>
            <name>blurPassCountChanged</name>
            <anchorfile>kuesa-bloomeffect.html</anchorfile>
            <anchor>blurPassCount-prop</anchor>
            <arglist>(int blurPassCount)</arglist>
        </member>
    </compound>
    <compound kind="class">
        <name>Kuesa::AbstractPostProcessingEffect</name>
        <filename>kuesa-abstractpostprocessingeffect.html</filename>
        <member kind="function" protection="public" virtualness="non" static="no">
            <type>Kuesa::AbstractPostProcessingEffect::Type</type>
            <name>type</name>
            <anchorfile>kuesa-abstractpostprocessingeffect.html</anchorfile>
            <anchor>type</anchor>
            <arglist>() const const</arglist>
        </member>
        <member kind="function" protection="public" virtualness="virtual" static="no">
            <type>virtual void</type>
            <name>setDepthTexture</name>
            <anchorfile>kuesa-abstractpostprocessingeffect.html</anchorfile>
            <anchor>setDepthTexture</anchor>
            <arglist>(Qt3DRender::QAbstractTexture *texture)</arglist>
        </member>
        <member kind="function" protection="public" virtualness="virtual" static="no">
            <type>virtual void</type>
            <name>setCamera</name>
            <anchorfile>kuesa-abstractpostprocessingeffect.html</anchorfile>
            <anchor>setCamera</anchor>
            <arglist>(Qt3DCore::QEntity *camera)</arglist>
        </member>
        <member kind="function" protection="public" virtualness="virtual" static="no">
            <type>virtual void</type>
            <name>setSceneSize</name>
            <anchorfile>kuesa-abstractpostprocessingeffect.html</anchorfile>
            <anchor>setSceneSize</anchor>
            <arglist>(const QSize &amp;size)</arglist>
        </member>
    </compound>
    <compound kind="class">
        <name>Kuesa::FullScreenQuad</name>
        <filename>kuesa-fullscreenquad.html</filename>
        <member kind="function" protection="public" virtualness="non" static="no">
            <type></type>
            <name>FullScreenQuad</name>
            <anchorfile>kuesa-fullscreenquad.html</anchorfile>
            <anchor>FullScreenQuad</anchor>
            <arglist>(Qt3DRender::QMaterial *material, Qt3DCore::QNode *parent)</arglist>
        </member>
        <member kind="function" protection="public" virtualness="non" static="no">
            <type>Qt3DRender::QLayer *</type>
            <name>layer</name>
            <anchorfile>kuesa-fullscreenquad.html</anchorfile>
            <anchor>layer</anchor>
            <arglist>() const const</arglist>
        </member>
    </compound>
    <compound kind="class">
        <name>Kuesa::OpacityMask</name>
        <filename>kuesa-opacitymask.html</filename>
        <base>AbstractPostProcessingEffect</base>
        <member kind="property" type="Qt3DRender::QAbstractTexture*">
            <name>mask</name>
            <anchorfile>kuesa-opacitymask.html</anchorfile>
            <anchor>mask-prop</anchor>
            <arglist></arglist>
        </member>
        <member kind="property" type="bool">
            <name>premultipliedAlpha</name>
            <anchorfile>kuesa-opacitymask.html</anchorfile>
            <anchor>premultipliedAlpha-prop</anchor>
            <arglist></arglist>
        </member>
        <member kind="function" protection="public" virtualness="non" static="no">
            <type>void</type>
            <name>setMask</name>
            <anchorfile>kuesa-opacitymask.html</anchorfile>
            <anchor>mask-prop</anchor>
            <arglist>(Qt3DRender::QAbstractTexture *mask)</arglist>
        </member>
        <member kind="function" protection="public" virtualness="non" static="no">
            <type>Qt3DRender::QAbstractTexture *</type>
            <name>mask</name>
            <anchorfile>kuesa-opacitymask.html</anchorfile>
            <anchor>mask-prop</anchor>
            <arglist>() const const</arglist>
        </member>
        <member kind="function" protection="public" virtualness="non" static="no">
            <type>void</type>
            <name>setPremultipliedAlpha</name>
            <anchorfile>kuesa-opacitymask.html</anchorfile>
            <anchor>premultipliedAlpha-prop</anchor>
            <arglist>(bool premultipliedAlpha)</arglist>
        </member>
        <member kind="function" protection="public" virtualness="non" static="no">
            <type>bool</type>
            <name>premultipliedAlpha</name>
            <anchorfile>kuesa-opacitymask.html</anchorfile>
            <anchor>premultipliedAlpha-prop</anchor>
            <arglist>() const const</arglist>
        </member>
        <member kind="function" protection="public" virtualness="non" static="no">
            <type>void</type>
            <name>maskChanged</name>
            <anchorfile>kuesa-opacitymask.html</anchorfile>
            <anchor>mask-prop</anchor>
            <arglist>(Qt3DRender::QAbstractTexture *mask)</arglist>
        </member>
        <member kind="function" protection="public" virtualness="non" static="no">
            <type>void</type>
            <name>premultipliedAlphaChanged</name>
            <anchorfile>kuesa-opacitymask.html</anchorfile>
            <anchor>premultipliedAlpha-prop</anchor>
            <arglist>(bool premultipliedAlpha)</arglist>
        </member>
    </compound>
    <compound kind="class">
        <name>Kuesa::GLTF2Material</name>
        <filename>kuesa-gltf2material.html</filename>
        <member kind="property" type="Kuesa::MorphController*">
            <name>morphController</name>
            <anchorfile>kuesa-gltf2material.html</anchorfile>
            <anchor>morphController-prop</anchor>
            <arglist></arglist>
        </member>
        <member kind="function" protection="public" virtualness="non" static="no">
            <type>Kuesa::MorphController *</type>
            <name>morphController</name>
            <anchorfile>kuesa-gltf2material.html</anchorfile>
            <anchor>morphController-prop</anchor>
            <arglist>() const const</arglist>
        </member>
        <member kind="function" protection="public" virtualness="non" static="no">
            <type>void</type>
            <name>morphControllerChanged</name>
            <anchorfile>kuesa-gltf2material.html</anchorfile>
            <anchor>morphController-prop</anchor>
            <arglist>(Kuesa::MorphController *morphController)</arglist>
        </member>
    </compound>
    <compound kind="class">
        <name>Kuesa::MetallicRoughnessProperties</name>
        <filename>kuesa-metallicroughnessproperties.html</filename>
        <base>GLTF2MaterialProperties</base>
        <member kind="property" type="bool">
            <name>metallicRoughnessUsesTexCoord1</name>
            <anchorfile>kuesa-metallicroughnessproperties.html</anchorfile>
            <anchor>metallicRoughnessUsesTexCoord1-prop</anchor>
            <arglist></arglist>
        </member>
        <member kind="property" type="bool">
            <name>normalUsesTexCoord1</name>
            <anchorfile>kuesa-metallicroughnessproperties.html</anchorfile>
            <anchor>normalUsesTexCoord1-prop</anchor>
            <arglist></arglist>
        </member>
        <member kind="property" type="bool">
            <name>aoUsesTexCoord1</name>
            <anchorfile>kuesa-metallicroughnessproperties.html</anchorfile>
            <anchor>aoUsesTexCoord1-prop</anchor>
            <arglist></arglist>
        </member>
        <member kind="property" type="bool">
            <name>emissiveUsesTexCoord1</name>
            <anchorfile>kuesa-metallicroughnessproperties.html</anchorfile>
            <anchor>emissiveUsesTexCoord1-prop</anchor>
            <arglist></arglist>
        </member>
        <member kind="property" type="float">
            <name>metallicFactor</name>
            <anchorfile>kuesa-metallicroughnessproperties.html</anchorfile>
            <anchor>metallicFactor-prop</anchor>
            <arglist></arglist>
        </member>
        <member kind="property" type="float">
            <name>roughnessFactor</name>
            <anchorfile>kuesa-metallicroughnessproperties.html</anchorfile>
            <anchor>roughnessFactor-prop</anchor>
            <arglist></arglist>
        </member>
        <member kind="property" type="Qt3DRender::QAbstractTexture*">
            <name>metalRoughMap</name>
            <anchorfile>kuesa-metallicroughnessproperties.html</anchorfile>
            <anchor>metalRoughMap-prop</anchor>
            <arglist></arglist>
        </member>
        <member kind="property" type="float">
            <name>normalScale</name>
            <anchorfile>kuesa-metallicroughnessproperties.html</anchorfile>
            <anchor>normalScale-prop</anchor>
            <arglist></arglist>
        </member>
        <member kind="property" type="Qt3DRender::QAbstractTexture*">
            <name>normalMap</name>
            <anchorfile>kuesa-metallicroughnessproperties.html</anchorfile>
            <anchor>normalMap-prop</anchor>
            <arglist></arglist>
        </member>
        <member kind="property" type="Qt3DRender::QAbstractTexture*">
            <name>ambientOcclusionMap</name>
            <anchorfile>kuesa-metallicroughnessproperties.html</anchorfile>
            <anchor>ambientOcclusionMap-prop</anchor>
            <arglist></arglist>
        </member>
        <member kind="property" type="QColor">
            <name>emissiveFactor</name>
            <anchorfile>kuesa-metallicroughnessproperties.html</anchorfile>
            <anchor>emissiveFactor-prop</anchor>
            <arglist></arglist>
        </member>
        <member kind="property" type="Qt3DRender::QAbstractTexture*">
            <name>emissiveMap</name>
            <anchorfile>kuesa-metallicroughnessproperties.html</anchorfile>
            <anchor>emissiveMap-prop</anchor>
            <arglist></arglist>
        </member>
        <member kind="function" protection="public" virtualness="non" static="no">
            <type>bool</type>
            <name>isMetallicRoughnessUsingTexCoord1</name>
            <anchorfile>kuesa-metallicroughnessproperties.html</anchorfile>
            <anchor>metallicRoughnessUsesTexCoord1-prop</anchor>
            <arglist>() const const</arglist>
        </member>
        <member kind="function" protection="public" virtualness="non" static="no">
            <type>bool</type>
            <name>isNormalUsingTexCoord1</name>
            <anchorfile>kuesa-metallicroughnessproperties.html</anchorfile>
            <anchor>normalUsesTexCoord1-prop</anchor>
            <arglist>() const const</arglist>
        </member>
        <member kind="function" protection="public" virtualness="non" static="no">
            <type>bool</type>
            <name>isAOUsingTexCoord1</name>
            <anchorfile>kuesa-metallicroughnessproperties.html</anchorfile>
            <anchor>aoUsesTexCoord1-prop</anchor>
            <arglist>() const const</arglist>
        </member>
        <member kind="function" protection="public" virtualness="non" static="no">
            <type>bool</type>
            <name>isEmissiveUsingTexCoord1</name>
            <anchorfile>kuesa-metallicroughnessproperties.html</anchorfile>
            <anchor>emissiveUsesTexCoord1-prop</anchor>
            <arglist>() const const</arglist>
        </member>
        <member kind="function" protection="public" virtualness="non" static="no">
            <type>float</type>
            <name>metallicFactor</name>
            <anchorfile>kuesa-metallicroughnessproperties.html</anchorfile>
            <anchor>metallicFactor-prop</anchor>
            <arglist>() const const</arglist>
        </member>
        <member kind="function" protection="public" virtualness="non" static="no">
            <type>float</type>
            <name>roughnessFactor</name>
            <anchorfile>kuesa-metallicroughnessproperties.html</anchorfile>
            <anchor>roughnessFactor-prop</anchor>
            <arglist>() const const</arglist>
        </member>
        <member kind="function" protection="public" virtualness="non" static="no">
            <type>Qt3DRender::QAbstractTexture *</type>
            <name>metalRoughMap</name>
            <anchorfile>kuesa-metallicroughnessproperties.html</anchorfile>
            <anchor>metalRoughMap-prop</anchor>
            <arglist>() const const</arglist>
        </member>
        <member kind="function" protection="public" virtualness="non" static="no">
            <type>float</type>
            <name>normalScale</name>
            <anchorfile>kuesa-metallicroughnessproperties.html</anchorfile>
            <anchor>normalScale-prop</anchor>
            <arglist>() const const</arglist>
        </member>
        <member kind="function" protection="public" virtualness="non" static="no">
            <type>Qt3DRender::QAbstractTexture *</type>
            <name>normalMap</name>
            <anchorfile>kuesa-metallicroughnessproperties.html</anchorfile>
            <anchor>normalMap-prop</anchor>
            <arglist>() const const</arglist>
        </member>
        <member kind="function" protection="public" virtualness="non" static="no">
            <type>Qt3DRender::QAbstractTexture *</type>
            <name>ambientOcclusionMap</name>
            <anchorfile>kuesa-metallicroughnessproperties.html</anchorfile>
            <anchor>ambientOcclusionMap-prop</anchor>
            <arglist>() const const</arglist>
        </member>
        <member kind="function" protection="public" virtualness="non" static="no">
            <type>QColor</type>
            <name>emissiveFactor</name>
            <anchorfile>kuesa-metallicroughnessproperties.html</anchorfile>
            <anchor>emissiveFactor-prop</anchor>
            <arglist>() const const</arglist>
        </member>
        <member kind="function" protection="public" virtualness="non" static="no">
            <type>Qt3DRender::QAbstractTexture *</type>
            <name>emissiveMap</name>
            <anchorfile>kuesa-metallicroughnessproperties.html</anchorfile>
            <anchor>emissiveMap-prop</anchor>
            <arglist>() const const</arglist>
        </member>
        <member kind="function" protection="public" virtualness="non" static="no">
            <type>void</type>
            <name>setMetallicRoughnessUsesTexCoord1</name>
            <anchorfile>kuesa-metallicroughnessproperties.html</anchorfile>
            <anchor>metallicRoughnessUsesTexCoord1-prop</anchor>
            <arglist>(bool metallicRoughnessUsesTexCoord1)</arglist>
        </member>
        <member kind="function" protection="public" virtualness="non" static="no">
            <type>void</type>
            <name>setNormalUsesTexCoord1</name>
            <anchorfile>kuesa-metallicroughnessproperties.html</anchorfile>
            <anchor>normalUsesTexCoord1-prop</anchor>
            <arglist>(bool normalUsesTexCoord1)</arglist>
        </member>
        <member kind="function" protection="public" virtualness="non" static="no">
            <type>void</type>
            <name>setAOUsesTexCoord1</name>
            <anchorfile>kuesa-metallicroughnessproperties.html</anchorfile>
            <anchor>aoUsesTexCoord1-prop</anchor>
            <arglist>(bool aoUsesTexCoord1)</arglist>
        </member>
        <member kind="function" protection="public" virtualness="non" static="no">
            <type>void</type>
            <name>setEmissiveUsesTexCoord1</name>
            <anchorfile>kuesa-metallicroughnessproperties.html</anchorfile>
            <anchor>emissiveUsesTexCoord1-prop</anchor>
            <arglist>(bool emissiveUsesTexCoord1)</arglist>
        </member>
        <member kind="function" protection="public" virtualness="non" static="no">
            <type>void</type>
            <name>setMetallicFactor</name>
            <anchorfile>kuesa-metallicroughnessproperties.html</anchorfile>
            <anchor>metallicFactor-prop</anchor>
            <arglist>(float metallicFactor)</arglist>
        </member>
        <member kind="function" protection="public" virtualness="non" static="no">
            <type>void</type>
            <name>setRoughnessFactor</name>
            <anchorfile>kuesa-metallicroughnessproperties.html</anchorfile>
            <anchor>roughnessFactor-prop</anchor>
            <arglist>(float roughnessFactor)</arglist>
        </member>
        <member kind="function" protection="public" virtualness="non" static="no">
            <type>void</type>
            <name>setMetalRoughMap</name>
            <anchorfile>kuesa-metallicroughnessproperties.html</anchorfile>
            <anchor>metalRoughMap-prop</anchor>
            <arglist>(Qt3DRender::QAbstractTexture *metalRoughMap)</arglist>
        </member>
        <member kind="function" protection="public" virtualness="non" static="no">
            <type>void</type>
            <name>setNormalScale</name>
            <anchorfile>kuesa-metallicroughnessproperties.html</anchorfile>
            <anchor>normalScale-prop</anchor>
            <arglist>(float normalScale)</arglist>
        </member>
        <member kind="function" protection="public" virtualness="non" static="no">
            <type>void</type>
            <name>setNormalMap</name>
            <anchorfile>kuesa-metallicroughnessproperties.html</anchorfile>
            <anchor>normalMap-prop</anchor>
            <arglist>(Qt3DRender::QAbstractTexture *normalMap)</arglist>
        </member>
        <member kind="function" protection="public" virtualness="non" static="no">
            <type>void</type>
            <name>setAmbientOcclusionMap</name>
            <anchorfile>kuesa-metallicroughnessproperties.html</anchorfile>
            <anchor>ambientOcclusionMap-prop</anchor>
            <arglist>(Qt3DRender::QAbstractTexture *ambientOcclusionMap)</arglist>
        </member>
        <member kind="function" protection="public" virtualness="non" static="no">
            <type>void</type>
            <name>setEmissiveFactor</name>
            <anchorfile>kuesa-metallicroughnessproperties.html</anchorfile>
            <anchor>emissiveFactor-prop</anchor>
            <arglist>(const QColor &amp;emissiveFactor)</arglist>
        </member>
        <member kind="function" protection="public" virtualness="non" static="no">
            <type>void</type>
            <name>setEmissiveMap</name>
            <anchorfile>kuesa-metallicroughnessproperties.html</anchorfile>
            <anchor>emissiveMap-prop</anchor>
            <arglist>(Qt3DRender::QAbstractTexture *emissiveMap)</arglist>
        </member>
        <member kind="function" protection="public" virtualness="non" static="no">
            <type>void</type>
            <name>metallicRoughnessUsesTexCoord1Changed</name>
            <anchorfile>kuesa-metallicroughnessproperties.html</anchorfile>
            <anchor>metallicRoughnessUsesTexCoord1-prop</anchor>
            <arglist>(bool )</arglist>
        </member>
        <member kind="function" protection="public" virtualness="non" static="no">
            <type>void</type>
            <name>normalUsesTexCoord1Changed</name>
            <anchorfile>kuesa-metallicroughnessproperties.html</anchorfile>
            <anchor>normalUsesTexCoord1-prop</anchor>
            <arglist>(bool )</arglist>
        </member>
        <member kind="function" protection="public" virtualness="non" static="no">
            <type>void</type>
            <name>aoUsesTexCoord1Changed</name>
            <anchorfile>kuesa-metallicroughnessproperties.html</anchorfile>
            <anchor>aoUsesTexCoord1-prop</anchor>
            <arglist>(bool )</arglist>
        </member>
        <member kind="function" protection="public" virtualness="non" static="no">
            <type>void</type>
            <name>emissiveUsesTexCoord1Changed</name>
            <anchorfile>kuesa-metallicroughnessproperties.html</anchorfile>
            <anchor>emissiveUsesTexCoord1-prop</anchor>
            <arglist>(bool )</arglist>
        </member>
        <member kind="function" protection="public" virtualness="non" static="no">
            <type>void</type>
            <name>metallicFactorChanged</name>
            <anchorfile>kuesa-metallicroughnessproperties.html</anchorfile>
            <anchor>metallicFactor-prop</anchor>
            <arglist>(float metallicFactor)</arglist>
        </member>
        <member kind="function" protection="public" virtualness="non" static="no">
            <type>void</type>
            <name>roughnessFactorChanged</name>
            <anchorfile>kuesa-metallicroughnessproperties.html</anchorfile>
            <anchor>roughnessFactor-prop</anchor>
            <arglist>(float roughnessFactor)</arglist>
        </member>
        <member kind="function" protection="public" virtualness="non" static="no">
            <type>void</type>
            <name>metalRoughMapChanged</name>
            <anchorfile>kuesa-metallicroughnessproperties.html</anchorfile>
            <anchor>metalRoughMap-prop</anchor>
            <arglist>(Qt3DRender::QAbstractTexture *metalRoughMap)</arglist>
        </member>
        <member kind="function" protection="public" virtualness="non" static="no">
            <type>void</type>
            <name>normalScaleChanged</name>
            <anchorfile>kuesa-metallicroughnessproperties.html</anchorfile>
            <anchor>normalScale-prop</anchor>
            <arglist>(float normalScale)</arglist>
        </member>
        <member kind="function" protection="public" virtualness="non" static="no">
            <type>void</type>
            <name>normalMapChanged</name>
            <anchorfile>kuesa-metallicroughnessproperties.html</anchorfile>
            <anchor>normalMap-prop</anchor>
            <arglist>(Qt3DRender::QAbstractTexture *normalMapChanged)</arglist>
        </member>
        <member kind="function" protection="public" virtualness="non" static="no">
            <type>void</type>
            <name>ambientOcclusionMapChanged</name>
            <anchorfile>kuesa-metallicroughnessproperties.html</anchorfile>
            <anchor>ambientOcclusionMap-prop</anchor>
            <arglist>(Qt3DRender::QAbstractTexture *ambientOcclusionMap)</arglist>
        </member>
        <member kind="function" protection="public" virtualness="non" static="no">
            <type>void</type>
            <name>emissiveFactorChanged</name>
            <anchorfile>kuesa-metallicroughnessproperties.html</anchorfile>
            <anchor>emissiveFactor-prop</anchor>
            <arglist>(const QColor &amp;emissiveFactor)</arglist>
        </member>
        <member kind="function" protection="public" virtualness="non" static="no">
            <type>void</type>
            <name>emissiveMapChanged</name>
            <anchorfile>kuesa-metallicroughnessproperties.html</anchorfile>
            <anchor>emissiveMap-prop</anchor>
            <arglist>(Qt3DRender::QAbstractTexture *emissiveMap)</arglist>
        </member>
    </compound>
    <compound kind="class">
        <name>Kuesa::ThresholdEffect</name>
        <filename>kuesa-thresholdeffect.html</filename>
        <base>AbstractPostProcessingEffect</base>
        <member kind="property" type="float">
            <name>threshold</name>
            <anchorfile>kuesa-thresholdeffect.html</anchorfile>
            <anchor>threshold-prop</anchor>
            <arglist></arglist>
        </member>
        <member kind="function" protection="public" virtualness="virtual" static="no">
            <type>virtual Kuesa::AbstractPostProcessingEffect::FrameGraphNodePtr</type>
            <name>frameGraphSubTree</name>
            <anchorfile>kuesa-thresholdeffect.html</anchorfile>
            <anchor>frameGraphSubTree</anchor>
            <arglist>() const const override</arglist>
        </member>
        <member kind="function" protection="public" virtualness="virtual" static="no">
            <type>virtual void</type>
            <name>setInputTexture</name>
            <anchorfile>kuesa-thresholdeffect.html</anchorfile>
            <anchor>setInputTexture</anchor>
            <arglist>(Qt3DRender::QAbstractTexture *texture) override</arglist>
        </member>
        <member kind="function" protection="public" virtualness="non" static="no">
            <type>float</type>
            <name>threshold</name>
            <anchorfile>kuesa-thresholdeffect.html</anchorfile>
            <anchor>threshold</anchor>
            <arglist>() const const</arglist>
        </member>
        <member kind="function" protection="public" virtualness="non" static="no">
            <type>void</type>
            <name>setThreshold</name>
            <anchorfile>kuesa-thresholdeffect.html</anchorfile>
            <anchor>setThreshold</anchor>
            <arglist>(float threshold)</arglist>
        </member>
        <member kind="function" protection="public" virtualness="non" static="no">
            <type>void</type>
            <name>thresholdChanged</name>
            <anchorfile>kuesa-thresholdeffect.html</anchorfile>
            <anchor>threshold-prop</anchor>
            <arglist>(float threshold)</arglist>
        </member>
    </compound>
    <compound kind="class">
        <name>Kuesa::MetallicRoughnessMaterial</name>
        <filename>kuesa-metallicroughnessmaterial.html</filename>
        <base>GLTF2Material</base>
        <member kind="property" type="Kuesa::MetallicRoughnessProperties*">
            <name>metallicRoughnessProperties</name>
            <anchorfile>kuesa-metallicroughnessmaterial.html</anchorfile>
            <anchor>metallicRoughnessProperties-prop</anchor>
            <arglist></arglist>
        </member>
        <member kind="function" protection="public" virtualness="non" static="no">
            <type>Kuesa::MetallicRoughnessProperties *</type>
            <name>metallicRoughnessProperties</name>
            <anchorfile>kuesa-metallicroughnessmaterial.html</anchorfile>
            <anchor>metallicRoughnessProperties-prop</anchor>
            <arglist>() const const</arglist>
        </member>
        <member kind="function" protection="public" virtualness="non" static="no">
            <type>void</type>
            <name>setMetallicRoughnessProperties</name>
            <anchorfile>kuesa-metallicroughnessmaterial.html</anchorfile>
            <anchor>metallicRoughnessProperties-prop</anchor>
            <arglist>(Kuesa::MetallicRoughnessProperties *metallicRoughnessProperties)</arglist>
        </member>
        <member kind="function" protection="public" virtualness="non" static="no">
            <type>void</type>
            <name>metallicRoughnessPropertiesChanged</name>
            <anchorfile>kuesa-metallicroughnessmaterial.html</anchorfile>
            <anchor>metallicRoughnessProperties-prop</anchor>
            <arglist>(Kuesa::MetallicRoughnessProperties *metallicRoughnessProperties)</arglist>
        </member>
    </compound>
    <compound kind="class">
        <name>Kuesa::GaussianBlurEffect</name>
        <filename>kuesa-gaussianblureffect.html</filename>
        <base>AbstractPostProcessingEffect</base>
        <member kind="property" type="int">
            <name>blurPassCount</name>
            <anchorfile>kuesa-gaussianblureffect.html</anchorfile>
            <anchor>blurPassCount-prop</anchor>
            <arglist></arglist>
        </member>
        <member kind="function" protection="public" virtualness="virtual" static="no">
            <type>virtual Kuesa::AbstractPostProcessingEffect::FrameGraphNodePtr</type>
            <name>frameGraphSubTree</name>
            <anchorfile>kuesa-gaussianblureffect.html</anchorfile>
            <anchor>frameGraphSubTree</anchor>
            <arglist>() const const override</arglist>
        </member>
        <member kind="function" protection="public" virtualness="virtual" static="no">
            <type>virtual void</type>
            <name>setInputTexture</name>
            <anchorfile>kuesa-gaussianblureffect.html</anchorfile>
            <anchor>setInputTexture</anchor>
            <arglist>(Qt3DRender::QAbstractTexture *texture) override</arglist>
        </member>
        <member kind="function" protection="public" virtualness="virtual" static="no">
            <type>virtual void</type>
            <name>setSceneSize</name>
            <anchorfile>kuesa-gaussianblureffect.html</anchorfile>
            <anchor>setSceneSize</anchor>
            <arglist>(const QSize &amp;size) override</arglist>
        </member>
        <member kind="function" protection="public" virtualness="non" static="no">
            <type>int</type>
            <name>blurPassCount</name>
            <anchorfile>kuesa-gaussianblureffect.html</anchorfile>
            <anchor>blurPassCount</anchor>
            <arglist>() const const</arglist>
        </member>
        <member kind="function" protection="public" virtualness="non" static="no">
            <type>void</type>
            <name>setBlurPassCount</name>
            <anchorfile>kuesa-gaussianblureffect.html</anchorfile>
            <anchor>setBlurPassCount</anchor>
            <arglist>(int blurPassCount)</arglist>
        </member>
        <member kind="function" protection="public" virtualness="non" static="no">
            <type>void</type>
            <name>blurPassCountChanged</name>
            <anchorfile>kuesa-gaussianblureffect.html</anchorfile>
            <anchor>blurPassCount-prop</anchor>
            <arglist>(int blurPassCount)</arglist>
        </member>
    </compound>
    <compound kind="class">
        <name>Kuesa::SkeletonCollection</name>
        <filename>kuesa-skeletoncollection.html</filename>
        <base>AbstractAssetCollection</base>
        <member kind="function" protection="public" virtualness="non" static="no">
            <type>Qt3DCore::QSkeletonLoader *</type>
            <name>add</name>
            <anchorfile>kuesa-skeletoncollection.html</anchorfile>
            <anchor>add</anchor>
            <arglist>(const QString &amp;name, const QUrl &amp;source)</arglist>
        </member>
    </compound>
    <compound kind="class">
        <name>Kuesa::DepthOfFieldEffect</name>
        <filename>kuesa-depthoffieldeffect.html</filename>
        <base>AbstractPostProcessingEffect</base>
        <member kind="property" type="float">
            <name>focusRange</name>
            <anchorfile>kuesa-depthoffieldeffect.html</anchorfile>
            <anchor>focusRange-prop</anchor>
            <arglist></arglist>
        </member>
        <member kind="property" type="float">
            <name>focusDistance</name>
            <anchorfile>kuesa-depthoffieldeffect.html</anchorfile>
            <anchor>focusDistance-prop</anchor>
            <arglist></arglist>
        </member>
        <member kind="property" type="float">
            <name>radius</name>
            <anchorfile>kuesa-depthoffieldeffect.html</anchorfile>
            <anchor>radius-prop</anchor>
            <arglist></arglist>
        </member>
        <member kind="function" protection="public" virtualness="non" static="no">
            <type>float</type>
            <name>focusRange</name>
            <anchorfile>kuesa-depthoffieldeffect.html</anchorfile>
            <anchor>focusRange-prop</anchor>
            <arglist>() const const</arglist>
        </member>
        <member kind="function" protection="public" virtualness="non" static="no">
            <type>float</type>
            <name>radius</name>
            <anchorfile>kuesa-depthoffieldeffect.html</anchorfile>
            <anchor>radius-prop</anchor>
            <arglist>() const const</arglist>
        </member>
        <member kind="function" protection="public" virtualness="non" static="no">
            <type>float</type>
            <name>focusDistance</name>
            <anchorfile>kuesa-depthoffieldeffect.html</anchorfile>
            <anchor>focusDistance-prop</anchor>
            <arglist>() const const</arglist>
        </member>
        <member kind="function" protection="public" virtualness="non" static="no">
            <type>void</type>
            <name>setFocusRange</name>
            <anchorfile>kuesa-depthoffieldeffect.html</anchorfile>
            <anchor>setFocusRange</anchor>
            <arglist>(float focusRange)</arglist>
        </member>
        <member kind="function" protection="public" virtualness="non" static="no">
            <type>void</type>
            <name>setRadius</name>
            <anchorfile>kuesa-depthoffieldeffect.html</anchorfile>
            <anchor>setRadius</anchor>
            <arglist>(float radius)</arglist>
        </member>
        <member kind="function" protection="public" virtualness="non" static="no">
            <type>void</type>
            <name>setFocusDistance</name>
            <anchorfile>kuesa-depthoffieldeffect.html</anchorfile>
            <anchor>setFocusDistance</anchor>
            <arglist>(float focusDistance)</arglist>
        </member>
        <member kind="function" protection="public" virtualness="non" static="no">
            <type>void</type>
            <name>focusRangeChanged</name>
            <anchorfile>kuesa-depthoffieldeffect.html</anchorfile>
            <anchor>focusRange-prop</anchor>
            <arglist>(float focusRange)</arglist>
        </member>
        <member kind="function" protection="public" virtualness="non" static="no">
            <type>void</type>
            <name>radiusChanged</name>
            <anchorfile>kuesa-depthoffieldeffect.html</anchorfile>
            <anchor>radius-prop</anchor>
            <arglist>(float radius)</arglist>
        </member>
        <member kind="function" protection="public" virtualness="non" static="no">
            <type>void</type>
            <name>focusDistanceChanged</name>
            <anchorfile>kuesa-depthoffieldeffect.html</anchorfile>
            <anchor>focusDistance-prop</anchor>
            <arglist>(float focusDistance)</arglist>
        </member>
    </compound>
    <compound kind="class">
        <name>Kuesa::DirectionalLight</name>
        <filename>kuesa-directionallight.html</filename>
        <member kind="property" type="QVector3D">
            <name>direction</name>
            <anchorfile>kuesa-directionallight.html</anchorfile>
            <anchor>direction-prop</anchor>
            <arglist></arglist>
        </member>
        <member kind="property" type="Kuesa::DirectionalLight::DirectionMode">
            <name>directionMode</name>
            <anchorfile>kuesa-directionallight.html</anchorfile>
            <anchor>directionMode-prop</anchor>
            <arglist></arglist>
        </member>
        <member kind="function" protection="public" virtualness="non" static="no">
            <type>QVector3D</type>
            <name>direction</name>
            <anchorfile>kuesa-directionallight.html</anchorfile>
            <anchor>direction-prop</anchor>
            <arglist>() const const</arglist>
        </member>
        <member kind="function" protection="public" virtualness="non" static="no">
            <type>Kuesa::DirectionalLight::DirectionMode</type>
            <name>directionMode</name>
            <anchorfile>kuesa-directionallight.html</anchorfile>
            <anchor>directionMode-prop</anchor>
            <arglist>() const const</arglist>
        </member>
        <member kind="function" protection="public" virtualness="non" static="no">
            <type>void</type>
            <name>setDirection</name>
            <anchorfile>kuesa-directionallight.html</anchorfile>
            <anchor>direction-prop</anchor>
            <arglist>(const QVector3D &amp;direction)</arglist>
        </member>
        <member kind="function" protection="public" virtualness="non" static="no">
            <type>void</type>
            <name>setDirectionMode</name>
            <anchorfile>kuesa-directionallight.html</anchorfile>
            <anchor>directionMode-prop</anchor>
            <arglist>(Kuesa::DirectionalLight::DirectionMode directionMode)</arglist>
        </member>
        <member kind="function" protection="public" virtualness="non" static="no">
            <type>void</type>
            <name>directionChanged</name>
            <anchorfile>kuesa-directionallight.html</anchorfile>
            <anchor>direction-prop</anchor>
            <arglist>(const QVector3D &amp;direction)</arglist>
        </member>
        <member kind="function" protection="public" virtualness="non" static="no">
            <type>void</type>
            <name>directionModeChanged</name>
            <anchorfile>kuesa-directionallight.html</anchorfile>
            <anchor>directionMode-prop</anchor>
            <arglist>(Kuesa::DirectionalLight::DirectionMode directionMode)</arglist>
        </member>
    </compound>
    <compound kind="class">
        <name>Kuesa::UnlitMaterial</name>
        <filename>kuesa-unlitmaterial.html</filename>
        <base>GLTF2Material</base>
        <member kind="property" type="Kuesa::UnlitProperties*">
            <name>unlitProperties</name>
            <anchorfile>kuesa-unlitmaterial.html</anchorfile>
            <anchor>unlitProperties-prop</anchor>
            <arglist></arglist>
        </member>
        <member kind="function" protection="public" virtualness="non" static="no">
            <type>Kuesa::UnlitProperties *</type>
            <name>unlitProperties</name>
            <anchorfile>kuesa-unlitmaterial.html</anchorfile>
            <anchor>unlitProperties-prop</anchor>
            <arglist>() const const</arglist>
        </member>
        <member kind="function" protection="public" virtualness="non" static="no">
            <type>void</type>
            <name>setUnlitProperties</name>
            <anchorfile>kuesa-unlitmaterial.html</anchorfile>
            <anchor>unlitProperties-prop</anchor>
            <arglist>(Kuesa::UnlitProperties *unlitProperties)</arglist>
        </member>
        <member kind="function" protection="public" virtualness="non" static="no">
            <type>void</type>
            <name>unlitPropertiesChanged</name>
            <anchorfile>kuesa-unlitmaterial.html</anchorfile>
            <anchor>unlitProperties-prop</anchor>
            <arglist>(Kuesa::UnlitProperties *properties)</arglist>
        </member>
    </compound>
    <compound kind="class">
        <name>Kuesa::TextureCollection</name>
        <filename>kuesa-texturecollection.html</filename>
        <base>AbstractAssetCollection</base>
        <member kind="function" protection="public" virtualness="non" static="no">
            <type>Qt3DRender::QTextureLoader *</type>
            <name>add</name>
            <anchorfile>kuesa-texturecollection.html</anchorfile>
            <anchor>add</anchor>
            <arglist>(const QString &amp;name, const QUrl &amp;source)</arglist>
        </member>
    </compound>
    <compound kind="class">
        <name>Kuesa::ToneMappingAndGammaCorrectionEffect</name>
        <filename>kuesa-tonemappingandgammacorrectioneffect.html</filename>
        <base>AbstractPostProcessingEffect</base>
        <member kind="property" type="float">
            <name>exposure</name>
            <anchorfile>kuesa-tonemappingandgammacorrectioneffect.html</anchorfile>
            <anchor>exposure-prop</anchor>
            <arglist></arglist>
        </member>
        <member kind="property" type="float">
            <name>gamma</name>
            <anchorfile>kuesa-tonemappingandgammacorrectioneffect.html</anchorfile>
            <anchor>gamma-prop</anchor>
            <arglist></arglist>
        </member>
        <member kind="property" type="Kuesa::ToneMappingAndGammaCorrectionEffect::ToneMapping">
            <name>toneMappingAlgorithm</name>
            <anchorfile>kuesa-tonemappingandgammacorrectioneffect.html</anchorfile>
            <anchor>toneMappingAlgorithm-prop</anchor>
            <arglist></arglist>
        </member>
        <member kind="enum">
            <name>ToneMapping</name>
            <anchor>ToneMapping-enum</anchor>
            <arglist></arglist>
        </member>
        <member name="None">
            <anchor>ToneMapping-enum</anchor>
            <arglist></arglist>
        </member>
        <member name="Reinhard">
            <anchor>ToneMapping-enum</anchor>
            <arglist></arglist>
        </member>
        <member name="Filmic">
            <anchor>ToneMapping-enum</anchor>
            <arglist></arglist>
        </member>
        <member name="Uncharted">
            <anchor>ToneMapping-enum</anchor>
            <arglist></arglist>
        </member>
        <member kind="function" protection="public" virtualness="non" static="no">
            <type>float</type>
            <name>exposure</name>
            <anchorfile>kuesa-tonemappingandgammacorrectioneffect.html</anchorfile>
            <anchor>exposure-prop</anchor>
            <arglist>() const const</arglist>
        </member>
        <member kind="function" protection="public" virtualness="non" static="no">
            <type>float</type>
            <name>gamma</name>
            <anchorfile>kuesa-tonemappingandgammacorrectioneffect.html</anchorfile>
            <anchor>gamma-prop</anchor>
            <arglist>() const const</arglist>
        </member>
        <member kind="function" protection="public" virtualness="non" static="no">
            <type>Kuesa::ToneMappingAndGammaCorrectionEffect::ToneMapping</type>
            <name>toneMappingAlgorithm</name>
            <anchorfile>kuesa-tonemappingandgammacorrectioneffect.html</anchorfile>
            <anchor>toneMappingAlgorithm</anchor>
            <arglist>() const const</arglist>
        </member>
        <member kind="function" protection="public" virtualness="non" static="no">
            <type>void</type>
            <name>setExposure</name>
            <anchorfile>kuesa-tonemappingandgammacorrectioneffect.html</anchorfile>
            <anchor>exposure-prop</anchor>
            <arglist>(float exposure)</arglist>
        </member>
        <member kind="function" protection="public" virtualness="non" static="no">
            <type>void</type>
            <name>setGamma</name>
            <anchorfile>kuesa-tonemappingandgammacorrectioneffect.html</anchorfile>
            <anchor>gamma-prop</anchor>
            <arglist>(float gamma)</arglist>
        </member>
        <member kind="function" protection="public" virtualness="non" static="no">
            <type>void</type>
            <name>setToneMappingAlgorithm</name>
            <anchorfile>kuesa-tonemappingandgammacorrectioneffect.html</anchorfile>
            <anchor>setToneMappingAlgorithm</anchor>
            <arglist>(Kuesa::ToneMappingAndGammaCorrectionEffect::ToneMapping algorithm)</arglist>
        </member>
        <member kind="function" protection="public" virtualness="non" static="no">
            <type>void</type>
            <name>exposureChanged</name>
            <anchorfile>kuesa-tonemappingandgammacorrectioneffect.html</anchorfile>
            <anchor>exposure-prop</anchor>
            <arglist>(float exposure)</arglist>
        </member>
        <member kind="function" protection="public" virtualness="non" static="no">
            <type>void</type>
            <name>gammaChanged</name>
            <anchorfile>kuesa-tonemappingandgammacorrectioneffect.html</anchorfile>
            <anchor>gamma-prop</anchor>
            <arglist>(float gamma)</arglist>
        </member>
        <member kind="function" protection="public" virtualness="non" static="no">
            <type>void</type>
            <name>toneMappingAlgorithmChanged</name>
            <anchorfile>kuesa-tonemappingandgammacorrectioneffect.html</anchorfile>
            <anchor>toneMappingAlgorithm-prop</anchor>
            <arglist>(Kuesa::ToneMappingAndGammaCorrectionEffect::ToneMapping toneMappingAlgorithm)</arglist>
        </member>
    </compound>
    <compound kind="class">
        <name>Kuesa::PointLight</name>
        <filename>kuesa-pointlight.html</filename>
        <member kind="function" protection="public" virtualness="non" static="no">
            <type>float</type>
            <name>range</name>
            <anchorfile>kuesa-pointlight.html</anchorfile>
            <anchor>range-prop</anchor>
            <arglist>() const const</arglist>
        </member>
        <member kind="function" protection="public" virtualness="non" static="no">
            <type>void</type>
            <name>setRange</name>
            <anchorfile>kuesa-pointlight.html</anchorfile>
            <anchor>range-prop</anchor>
            <arglist>(float range)</arglist>
        </member>
        <member kind="function" protection="public" virtualness="non" static="no">
            <type>void</type>
            <name>rangeChanged</name>
            <anchorfile>kuesa-pointlight.html</anchorfile>
            <anchor>range-prop</anchor>
            <arglist>(float range)</arglist>
        </member>
    </compound>
    <compound kind="class">
        <name>MorphController</name>
        <filename>qml-morphcontroller.html</filename>
    </compound>
    <compound kind="class">
        <name>ToneMappingAndGammaCorrectionEffect</name>
        <filename>qml-tonemappingandgammacorrectioneffect.html</filename>
    </compound>
    <compound kind="class">
        <name>Asset</name>
        <filename>qml-asset.html</filename>
    </compound>
    <compound kind="class">
        <name>GLTF2Material</name>
        <filename>qml-gltf2material.html</filename>
    </compound>
    <compound kind="class">
        <name>MetallicRoughnessMaterial</name>
        <filename>qml-metallicroughnessmaterial.html</filename>
    </compound>
    <compound kind="class">
        <name>MetallicRoughnessEffect</name>
        <filename>qml-metallicroughnesseffect.html</filename>
    </compound>
    <compound kind="class">
        <name>MetallicRoughnessProperties</name>
        <filename>qml-metallicroughnessproperties.html</filename>
    </compound>
    <compound kind="class">
        <name>UnlitMaterial</name>
        <filename>qml-unlitmaterial.html</filename>
    </compound>
    <compound kind="class">
        <name>SceneEntity</name>
        <filename>qml-sceneentity.html</filename>
        <member kind="function" protection="public" virtualness="non" static="no">
            <type></type>
            <name>loadingDone</name>
            <anchorfile>qml-sceneentity.html</anchorfile>
            <anchor>loadingDone-signal</anchor>
            <arglist>()</arglist>
        </member>
    </compound>
    <compound kind="class">
        <name>GLTF2Importer</name>
        <filename>qml-gltf2importer.html</filename>
    </compound>
    <compound kind="class">
        <name>ForwardRenderer</name>
        <filename>qml-forwardrenderer.html</filename>
    </compound>
    <compound kind="class">
        <name>SpotLight</name>
        <filename>qml-spotlight.html</filename>
    </compound>
    <compound kind="class">
        <name>UnlitEffect</name>
        <filename>qml-unliteffect.html</filename>
    </compound>
    <compound kind="class">
        <name>OpacityMask</name>
        <filename>qml-opacitymask.html</filename>
    </compound>
    <compound kind="class">
        <name>Skybox</name>
        <filename>qml-skybox.html</filename>
    </compound>
    <compound kind="class">
        <name>UnlitProperties</name>
        <filename>qml-unlitproperties.html</filename>
    </compound>
    <compound kind="class">
        <name>DirectionalLight</name>
        <filename>qml-directionallight.html</filename>
    </compound>
    <compound kind="class">
        <name>PointLight</name>
        <filename>qml-pointlight.html</filename>
    </compound>
    <compound kind="class">
        <name>GLTF2Options</name>
        <filename>qml-gltf2options.html</filename>
    </compound>
</tagfile>
