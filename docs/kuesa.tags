<?xml version="1.0" encoding="UTF-8"?>
<tagfile>
    <compound kind="class">
        <name>AnimationPlayer</name>
        <filename>qml-animationplayer.html</filename>
    </compound>
    <compound kind="class">
        <name>AnimationPulse</name>
        <filename>qml-animationpulse.html</filename>
    </compound>
    <compound kind="class">
        <name>Asset</name>
        <filename>qml-asset.html</filename>
    </compound>
    <compound kind="class">
        <name>BloomEffect</name>
        <filename>qml-bloomeffect.html</filename>
    </compound>
    <compound kind="class">
        <name>CameraAsset</name>
        <filename>qml-cameraasset.html</filename>
    </compound>
    <compound kind="class">
        <name>DepthOfFieldEffect</name>
        <filename>qml-depthoffieldeffect.html</filename>
    </compound>
    <compound kind="class">
        <name>DirectionalLight</name>
        <filename>qml-directionallight.html</filename>
    </compound>
    <compound kind="class">
        <name>ForwardRenderer</name>
        <filename>qml-forwardrenderer.html</filename>
    </compound>
    <compound kind="class">
        <name>GLTF2Importer</name>
        <filename>qml-gltf2importer.html</filename>
    </compound>
    <compound kind="class">
        <name>GLTF2Material</name>
        <filename>qml-gltf2material.html</filename>
    </compound>
    <compound kind="class">
        <name>GLTF2MaterialEffect</name>
        <filename>qml-gltf2materialeffect.html</filename>
    </compound>
    <compound kind="class">
        <name>GLTF2Options</name>
        <filename>qml-gltf2options.html</filename>
    </compound>
    <compound kind="class">
        <name>GaussianBlurEffect</name>
        <filename>qml-gaussianblureffect.html</filename>
    </compound>
    <compound kind="class">
        <name>Iro2AlphaEquiRectEffect</name>
        <filename>qml-iro2alphaequirecteffect.html</filename>
    </compound>
    <compound kind="class">
        <name>Iro2AlphaEquiRectMaterial</name>
        <filename>qml-iro2alphaequirectmaterial.html</filename>
    </compound>
    <compound kind="class">
        <name>Iro2AlphaEquiRectProperties</name>
        <filename>qml-iro2alphaequirectproperties.html</filename>
    </compound>
    <compound kind="class">
        <name>Iro2AlphaSemEffect</name>
        <filename>qml-iro2alphasemeffect.html</filename>
    </compound>
    <compound kind="class">
        <name>Iro2AlphaSemMaterial</name>
        <filename>qml-iro2alphasemmaterial.html</filename>
    </compound>
    <compound kind="class">
        <name>Iro2AlphaSemProperties</name>
        <filename>qml-iro2alphasemproperties.html</filename>
    </compound>
    <compound kind="class">
        <name>Iro2DiffuseEquiRectEffect</name>
        <filename>qml-iro2diffuseequirecteffect.html</filename>
    </compound>
    <compound kind="class">
        <name>Iro2DiffuseEquiRectMaterial</name>
        <filename>qml-iro2diffuseequirectmaterial.html</filename>
    </compound>
    <compound kind="class">
        <name>Iro2DiffuseEquiRectProperties</name>
        <filename>qml-iro2diffuseequirectproperties.html</filename>
    </compound>
    <compound kind="class">
        <name>Iro2DiffuseSemEffect</name>
        <filename>qml-iro2diffusesemeffect.html</filename>
    </compound>
    <compound kind="class">
        <name>Iro2DiffuseSemMaterial</name>
        <filename>qml-iro2diffusesemmaterial.html</filename>
    </compound>
    <compound kind="class">
        <name>Iro2DiffuseSemProperties</name>
        <filename>qml-iro2diffusesemproperties.html</filename>
    </compound>
    <compound kind="class">
        <name>Iro2GlassEquiRectEffect</name>
        <filename>qml-iro2glassequirecteffect.html</filename>
    </compound>
    <compound kind="class">
        <name>Iro2GlassEquiRectMaterial</name>
        <filename>qml-iro2glassequirectmaterial.html</filename>
    </compound>
    <compound kind="class">
        <name>Iro2GlassEquiRectProperties</name>
        <filename>qml-iro2glassequirectproperties.html</filename>
    </compound>
    <compound kind="class">
        <name>Iro2GlassSemEffect</name>
        <filename>qml-iro2glasssemeffect.html</filename>
    </compound>
    <compound kind="class">
        <name>Iro2GlassSemMaterial</name>
        <filename>qml-iro2glasssemmaterial.html</filename>
    </compound>
    <compound kind="class">
        <name>Iro2GlassSemProperties</name>
        <filename>qml-iro2glasssemproperties.html</filename>
    </compound>
    <compound kind="class">
        <name>Iro2MatteAlphaEffect</name>
        <filename>qml-iro2mattealphaeffect.html</filename>
    </compound>
    <compound kind="class">
        <name>Iro2MatteAlphaMaterial</name>
        <filename>qml-iro2mattealphamaterial.html</filename>
    </compound>
    <compound kind="class">
        <name>Iro2MatteAlphaProperties</name>
        <filename>qml-iro2mattealphaproperties.html</filename>
    </compound>
    <compound kind="class">
        <name>Iro2PlanarReflectionEquiRectEffect</name>
        <filename>qml-iro2planarreflectionequirecteffect.html</filename>
    </compound>
    <compound kind="class">
        <name>Iro2PlanarReflectionEquiRectMaterial</name>
        <filename>qml-iro2planarreflectionequirectmaterial.html</filename>
    </compound>
    <compound kind="class">
        <name>Iro2PlanarReflectionEquiRectProperties</name>
        <filename>qml-iro2planarreflectionequirectproperties.html</filename>
    </compound>
    <compound kind="class">
        <name>Iro2PlanarReflectionSemEffect</name>
        <filename>qml-iro2planarreflectionsemeffect.html</filename>
    </compound>
    <compound kind="class">
        <name>Iro2PlanarReflectionSemMaterial</name>
        <filename>qml-iro2planarreflectionsemmaterial.html</filename>
    </compound>
    <compound kind="class">
        <name>Iro2PlanarReflectionSemProperties</name>
        <filename>qml-iro2planarreflectionsemproperties.html</filename>
    </compound>
    <compound kind="class">
        <name>IroDiffuseAlphaEffect</name>
        <filename>qml-irodiffusealphaeffect.html</filename>
    </compound>
    <compound kind="class">
        <name>IroDiffuseAlphaMaterial</name>
        <filename>qml-irodiffusealphamaterial.html</filename>
    </compound>
    <compound kind="class">
        <name>IroDiffuseAlphaProperties</name>
        <filename>qml-irodiffusealphaproperties.html</filename>
    </compound>
    <compound kind="class">
        <name>IroDiffuseEffect</name>
        <filename>qml-irodiffuseeffect.html</filename>
    </compound>
    <compound kind="class">
        <name>IroDiffuseHemiEffect</name>
        <filename>qml-irodiffusehemieffect.html</filename>
    </compound>
    <compound kind="class">
        <name>IroDiffuseHemiMaterial</name>
        <filename>qml-irodiffusehemimaterial.html</filename>
    </compound>
    <compound kind="class">
        <name>IroDiffuseHemiProperties</name>
        <filename>qml-irodiffusehemiproperties.html</filename>
    </compound>
    <compound kind="class">
        <name>IroDiffuseMaterial</name>
        <filename>qml-irodiffusematerial.html</filename>
    </compound>
    <compound kind="class">
        <name>IroDiffuseProperties</name>
        <filename>qml-irodiffuseproperties.html</filename>
    </compound>
    <compound kind="class">
        <name>IroGlassAddEffect</name>
        <filename>qml-iroglassaddeffect.html</filename>
    </compound>
    <compound kind="class">
        <name>IroGlassAddMaterial</name>
        <filename>qml-iroglassaddmaterial.html</filename>
    </compound>
    <compound kind="class">
        <name>IroGlassAddProperties</name>
        <filename>qml-iroglassaddproperties.html</filename>
    </compound>
    <compound kind="class">
        <name>IroMatteAddEffect</name>
        <filename>qml-iromatteaddeffect.html</filename>
    </compound>
    <compound kind="class">
        <name>IroMatteAddMaterial</name>
        <filename>qml-iromatteaddmaterial.html</filename>
    </compound>
    <compound kind="class">
        <name>IroMatteAddProperties</name>
        <filename>qml-iromatteaddproperties.html</filename>
    </compound>
    <compound kind="class">
        <name>IroMatteAlphaEffect</name>
        <filename>qml-iromattealphaeffect.html</filename>
    </compound>
    <compound kind="class">
        <name>IroMatteAlphaMaterial</name>
        <filename>qml-iromattealphamaterial.html</filename>
    </compound>
    <compound kind="class">
        <name>IroMatteAlphaProperties</name>
        <filename>qml-iromattealphaproperties.html</filename>
    </compound>
    <compound kind="class">
        <name>IroMatteBackgroundEffect</name>
        <filename>qml-iromattebackgroundeffect.html</filename>
    </compound>
    <compound kind="class">
        <name>IroMatteBackgroundMaterial</name>
        <filename>qml-iromattebackgroundmaterial.html</filename>
    </compound>
    <compound kind="class">
        <name>IroMatteBackgroundProperties</name>
        <filename>qml-iromattebackgroundproperties.html</filename>
    </compound>
    <compound kind="class">
        <name>IroMatteMultEffect</name>
        <filename>qml-iromattemulteffect.html</filename>
    </compound>
    <compound kind="class">
        <name>IroMatteMultMaterial</name>
        <filename>qml-iromattemultmaterial.html</filename>
    </compound>
    <compound kind="class">
        <name>IroMatteMultProperties</name>
        <filename>qml-iromattemultproperties.html</filename>
    </compound>
    <compound kind="class">
        <name>IroMatteOpaqueEffect</name>
        <filename>qml-iromatteopaqueeffect.html</filename>
    </compound>
    <compound kind="class">
        <name>IroMatteOpaqueMaterial</name>
        <filename>qml-iromatteopaquematerial.html</filename>
    </compound>
    <compound kind="class">
        <name>IroMatteOpaqueProperties</name>
        <filename>qml-iromatteopaqueproperties.html</filename>
    </compound>
    <compound kind="class">
        <name>IroMatteSkyboxEffect</name>
        <filename>qml-iromatteskyboxeffect.html</filename>
    </compound>
    <compound kind="class">
        <name>IroMatteSkyboxMaterial</name>
        <filename>qml-iromatteskyboxmaterial.html</filename>
    </compound>
    <compound kind="class">
        <name>IroMatteSkyboxProperties</name>
        <filename>qml-iromatteskyboxproperties.html</filename>
    </compound>
    <compound kind="class">
        <name>KTXTexture</name>
        <filename>qml-ktxtexture.html</filename>
    </compound>
    <compound kind="namespace">
        <name>Kuesa</name>
        <filename>kuesa.html</filename>
        <class>Kuesa::AbstractAssetCollection</class>
        <class>Kuesa::AnimationClipCollection</class>
        <class>Kuesa::ArmatureCollection</class>
        <class>Kuesa::EffectCollection</class>
        <class>Kuesa::LayerCollection</class>
        <class>Kuesa::ShadowCastingLight</class>
        <class>Kuesa::LightCollection</class>
        <class>Kuesa::GLTF2MaterialProperties</class>
        <class>Kuesa::MaterialCollection</class>
        <class>Kuesa::MeshCollection</class>
        <class>Kuesa::SkeletonCollection</class>
        <class>Kuesa::TextureCollection</class>
        <class>Kuesa::CameraCollection</class>
        <class>Kuesa::EntityCollection</class>
        <class>Kuesa::TransformCollection</class>
        <class>Kuesa::Placeholder</class>
        <class>Kuesa::PlaceholderCollection</class>
        <class>Kuesa::TextureImageCollection</class>
        <class>Kuesa::AnimationMappingCollection</class>
        <class>Kuesa::ReflectionPlane</class>
        <class>Kuesa::ReflectionPlaneCollection</class>
        <namespace>Kuesa::GLTF2Import</namespace>
        <class>Kuesa::SceneEntity</class>
        <class>Kuesa::KuesaNode</class>
        <class>Kuesa::AnimationPlayer</class>
        <class>Kuesa::AnimationPulse</class>
        <class>Kuesa::AbstractPostProcessingEffect</class>
        <class>Kuesa::ToneMappingAndGammaCorrectionEffect</class>
        <class>Kuesa::View</class>
        <class>Kuesa::ForwardRenderer</class>
        <class>Kuesa::FullScreenQuad</class>
        <class>Kuesa::BloomEffect</class>
        <class>Kuesa::GaussianBlurEffect</class>
        <class>Kuesa::ThresholdEffect</class>
        <class>Kuesa::DepthOfFieldEffect</class>
        <class>Kuesa::OpacityMask</class>
        <class>Kuesa::GLTF2Importer</class>
        <class>Kuesa::MorphController</class>
        <class>Kuesa::GLTF2Material</class>
        <class>Kuesa::IroDiffuseProperties</class>
        <class>Kuesa::IroDiffuseMaterial</class>
        <class>Kuesa::GLTF2MaterialEffect</class>
        <class>Kuesa::IroDiffuseEffect</class>
        <class>Kuesa::IroDiffuseHemiProperties</class>
        <class>Kuesa::IroDiffuseHemiMaterial</class>
        <class>Kuesa::IroDiffuseHemiEffect</class>
        <class>Kuesa::IroGlassAddProperties</class>
        <class>Kuesa::IroGlassAddMaterial</class>
        <class>Kuesa::IroGlassAddEffect</class>
        <class>Kuesa::IroMatteOpaqueProperties</class>
        <class>Kuesa::IroMatteOpaqueMaterial</class>
        <class>Kuesa::IroMatteOpaqueEffect</class>
        <class>Kuesa::IroMatteAlphaProperties</class>
        <class>Kuesa::IroMatteAlphaMaterial</class>
        <class>Kuesa::IroMatteAlphaEffect</class>
        <class>Kuesa::IroMatteSkyboxProperties</class>
        <class>Kuesa::IroMatteSkyboxMaterial</class>
        <class>Kuesa::IroMatteSkyboxEffect</class>
        <class>Kuesa::IroMatteBackgroundProperties</class>
        <class>Kuesa::IroMatteBackgroundMaterial</class>
        <class>Kuesa::IroMatteBackgroundEffect</class>
        <class>Kuesa::IroMatteAddProperties</class>
        <class>Kuesa::IroMatteAddMaterial</class>
        <class>Kuesa::IroMatteAddEffect</class>
        <class>Kuesa::IroMatteMultProperties</class>
        <class>Kuesa::IroMatteMultMaterial</class>
        <class>Kuesa::IroMatteMultEffect</class>
        <class>Kuesa::IroDiffuseAlphaProperties</class>
        <class>Kuesa::IroDiffuseAlphaMaterial</class>
        <class>Kuesa::IroDiffuseAlphaEffect</class>
        <class>Kuesa::Iro2DiffuseEquiRectProperties</class>
        <class>Kuesa::Iro2DiffuseEquiRectMaterial</class>
        <class>Kuesa::Iro2DiffuseEquiRectEffect</class>
        <class>Kuesa::Iro2DiffuseSemProperties</class>
        <class>Kuesa::Iro2DiffuseSemMaterial</class>
        <class>Kuesa::Iro2DiffuseSemEffect</class>
        <class>Kuesa::Iro2AlphaEquiRectProperties</class>
        <class>Kuesa::Iro2AlphaEquiRectMaterial</class>
        <class>Kuesa::Iro2AlphaEquiRectEffect</class>
        <class>Kuesa::Iro2AlphaSemProperties</class>
        <class>Kuesa::Iro2AlphaSemMaterial</class>
        <class>Kuesa::Iro2AlphaSemEffect</class>
        <class>Kuesa::Iro2GlassEquiRectProperties</class>
        <class>Kuesa::Iro2GlassEquiRectMaterial</class>
        <class>Kuesa::Iro2GlassEquiRectEffect</class>
        <class>Kuesa::Iro2GlassSemProperties</class>
        <class>Kuesa::Iro2GlassSemMaterial</class>
        <class>Kuesa::Iro2GlassSemEffect</class>
        <class>Kuesa::Iro2MatteAlphaProperties</class>
        <class>Kuesa::Iro2MatteAlphaMaterial</class>
        <class>Kuesa::Iro2MatteAlphaEffect</class>
        <class>Kuesa::Iro2PlanarReflectionEquiRectProperties</class>
        <class>Kuesa::Iro2PlanarReflectionEquiRectMaterial</class>
        <class>Kuesa::Iro2PlanarReflectionEquiRectEffect</class>
        <class>Kuesa::Iro2PlanarReflectionSemProperties</class>
        <class>Kuesa::Iro2PlanarReflectionSemMaterial</class>
        <class>Kuesa::Iro2PlanarReflectionSemEffect</class>
        <class>Kuesa::KTXTexture</class>
        <class>Kuesa::SpotLight</class>
        <class>Kuesa::MetallicRoughnessEffect</class>
        <class>Kuesa::UnlitEffect</class>
        <class>Kuesa::TextureTransform</class>
        <class>Kuesa::MetallicRoughnessProperties</class>
        <class>Kuesa::MetallicRoughnessMaterial</class>
        <class>Kuesa::UnlitProperties</class>
        <class>Kuesa::UnlitMaterial</class>
        <class>Kuesa::MeshInstantiator</class>
        <class>Kuesa::Particles</class>
        <class>Kuesa::PlaceholderTracker</class>
        <class>Kuesa::Skybox</class>
        <class>Kuesa::SteppedAnimationPlayer</class>
        <class>Kuesa::TransformTracker</class>
    </compound>
    <compound kind="class">
        <name>Kuesa::AbstractAssetCollection</name>
        <filename>kuesa-abstractassetcollection.html</filename>
        <member kind="property" type="QStringList">
            <name>names</name>
            <anchorfile>kuesa-abstractassetcollection.html</anchorfile>
            <anchor>names-prop</anchor>
            <arglist></arglist>
        </member>
        <member kind="function" protection="public" virtualness="non" static="no">
            <type>QStringList</type>
            <name>names</name>
            <anchorfile>kuesa-abstractassetcollection.html</anchorfile>
            <anchor>names-prop</anchor>
            <arglist>()</arglist>
        </member>
        <member kind="function" protection="public" virtualness="non" static="no">
            <type>int</type>
            <name>size</name>
            <anchorfile>kuesa-abstractassetcollection.html</anchorfile>
            <anchor>size-prop</anchor>
            <arglist>()</arglist>
        </member>
        <member kind="function" protection="public" virtualness="non" static="no">
            <type>bool</type>
            <name>contains</name>
            <anchorfile>kuesa-abstractassetcollection.html</anchorfile>
            <anchor>contains</anchor>
            <arglist>(const QString &amp;name) const const</arglist>
        </member>
        <member kind="function" protection="public" virtualness="non" static="no">
            <type>bool</type>
            <name>contains</name>
            <anchorfile>kuesa-abstractassetcollection.html</anchorfile>
            <anchor>contains-1</anchor>
            <arglist>(Qt3DCore::QNode *asset) const const</arglist>
        </member>
        <member kind="function" protection="public" virtualness="non" static="no">
            <type>void</type>
            <name>remove</name>
            <anchorfile>kuesa-abstractassetcollection.html</anchorfile>
            <anchor>remove</anchor>
            <arglist>(const QString &amp;name)</arglist>
        </member>
        <member kind="function" protection="public" virtualness="non" static="no">
            <type>void</type>
            <name>clear</name>
            <anchorfile>kuesa-abstractassetcollection.html</anchorfile>
            <anchor>clear</anchor>
            <arglist>()</arglist>
        </member>
        <member kind="function" protection="public" virtualness="non" static="no">
            <type>void</type>
            <name>namesChanged</name>
            <anchorfile>kuesa-abstractassetcollection.html</anchorfile>
            <anchor>names-prop</anchor>
            <arglist>()</arglist>
        </member>
        <member kind="function" protection="public" virtualness="non" static="no">
            <type>void</type>
            <name>sizeChanged</name>
            <anchorfile>kuesa-abstractassetcollection.html</anchorfile>
            <anchor>size-prop</anchor>
            <arglist>()</arglist>
        </member>
    </compound>
    <compound kind="class">
        <name>Kuesa::AnimationClipCollection</name>
        <filename>kuesa-animationclipcollection.html</filename>
        <base>AbstractAssetCollection</base>
        <member kind="function" protection="public" virtualness="non" static="no">
            <type>Qt3DAnimation::QAnimationClipLoader *</type>
            <name>add</name>
            <anchorfile>kuesa-animationclipcollection.html</anchorfile>
            <anchor>add</anchor>
            <arglist>(const QString &amp;name, const QUrl &amp;source)</arglist>
        </member>
    </compound>
    <compound kind="class">
        <name>Kuesa::AnimationMappingCollection</name>
        <filename>kuesa-animationmappingcollection.html</filename>
        <base>AbstractAssetCollection</base>
    </compound>
    <compound kind="class">
        <name>Kuesa::ArmatureCollection</name>
        <filename>kuesa-armaturecollection.html</filename>
        <base>AbstractAssetCollection</base>
    </compound>
    <compound kind="class">
        <name>Kuesa::CameraCollection</name>
        <filename>kuesa-cameracollection.html</filename>
        <base>AbstractAssetCollection</base>
    </compound>
    <compound kind="class">
        <name>Kuesa::EffectCollection</name>
        <filename>kuesa-effectcollection.html</filename>
        <base>AbstractAssetCollection</base>
        <member kind="function" protection="public" virtualness="non" static="no">
            <type>Qt3DRender::QEffect *</type>
            <name>addEffect</name>
            <anchorfile>kuesa-effectcollection.html</anchorfile>
            <anchor>addEffect</anchor>
            <arglist>(const QString &amp;name, const QString &amp;id, const QVariantMap &amp;properties)</arglist>
        </member>
        <member kind="function" protection="public" virtualness="non" static="no">
            <type>void</type>
            <name>registerType</name>
            <anchorfile>kuesa-effectcollection.html</anchorfile>
            <anchor>registerType</anchor>
            <arglist>(const QString &amp;id, Kuesa::EffectCreator f)</arglist>
        </member>
        <member kind="function" protection="public" virtualness="non" static="no">
            <type>void</type>
            <name>unregisterType</name>
            <anchorfile>kuesa-effectcollection.html</anchorfile>
            <anchor>unregisterType</anchor>
            <arglist>(const QString &amp;id)</arglist>
        </member>
    </compound>
    <compound kind="class">
        <name>Kuesa::EntityCollection</name>
        <filename>kuesa-entitycollection.html</filename>
        <base>AbstractAssetCollection</base>
    </compound>
    <compound kind="class">
        <name>Kuesa::AbstractPostProcessingEffect</name>
        <filename>kuesa-abstractpostprocessingeffect.html</filename>
        <member kind="function" protection="public" virtualness="non" static="no">
            <type>Kuesa::AbstractPostProcessingEffect::Type</type>
            <name>type</name>
            <anchorfile>kuesa-abstractpostprocessingeffect.html</anchorfile>
            <anchor>type</anchor>
            <arglist>() const const</arglist>
        </member>
        <member kind="function" protection="public" virtualness="virtual" static="no">
            <type>virtual void</type>
            <name>setDepthTexture</name>
            <anchorfile>kuesa-abstractpostprocessingeffect.html</anchorfile>
            <anchor>setDepthTexture</anchor>
            <arglist>(Qt3DRender::QAbstractTexture *texture)</arglist>
        </member>
        <member kind="function" protection="public" virtualness="virtual" static="no">
            <type>virtual void</type>
            <name>setCamera</name>
            <anchorfile>kuesa-abstractpostprocessingeffect.html</anchorfile>
            <anchor>setCamera</anchor>
            <arglist>(Qt3DCore::QEntity *camera)</arglist>
        </member>
        <member kind="function" protection="public" virtualness="virtual" static="no">
            <type>virtual void</type>
            <name>setWindowSize</name>
            <anchorfile>kuesa-abstractpostprocessingeffect.html</anchorfile>
            <anchor>setWindowSize</anchor>
            <arglist>(const QSize &amp;sceneSize)</arglist>
        </member>
    </compound>
    <compound kind="class">
        <name>Kuesa::AnimationPlayer</name>
        <filename>kuesa-animationplayer.html</filename>
        <base>KuesaNode</base>
        <member kind="property" type="Status">
            <name>status</name>
            <anchorfile>kuesa-animationplayer.html</anchorfile>
            <anchor>status-prop</anchor>
            <arglist></arglist>
        </member>
        <member kind="property" type="QString">
            <name>clip</name>
            <anchorfile>kuesa-animationplayer.html</anchorfile>
            <anchor>clip-prop</anchor>
            <arglist></arglist>
        </member>
        <member kind="property" type="QString">
            <name>mapper</name>
            <anchorfile>kuesa-animationplayer.html</anchorfile>
            <anchor>mapper-prop</anchor>
            <arglist></arglist>
        </member>
        <member kind="property" type="bool">
            <name>running</name>
            <anchorfile>kuesa-animationplayer.html</anchorfile>
            <anchor>running-prop</anchor>
            <arglist></arglist>
        </member>
        <member kind="property" type="int">
            <name>loops</name>
            <anchorfile>kuesa-animationplayer.html</anchorfile>
            <anchor>loops-prop</anchor>
            <arglist></arglist>
        </member>
        <member kind="property" type="Qt3DAnimation::QClock*">
            <name>clock</name>
            <anchorfile>kuesa-animationplayer.html</anchorfile>
            <anchor>clock-prop</anchor>
            <arglist></arglist>
        </member>
        <member kind="property" type="float">
            <name>normalizedTime</name>
            <anchorfile>kuesa-animationplayer.html</anchorfile>
            <anchor>normalizedTime-prop</anchor>
            <arglist></arglist>
        </member>
        <member kind="property" type="float">
            <name>duration</name>
            <anchorfile>kuesa-animationplayer.html</anchorfile>
            <anchor>duration-prop</anchor>
            <arglist></arglist>
        </member>
        <member kind="enumeration">
            <name>Status</name>
            <anchorfile>kuesa-animationplayer.html</anchorfile>
            <anchor>Status-enum</anchor>
        </member>
        <member kind="enumvalue">
            <name>None</name>
            <anchorfile>kuesa-animationplayer.html</anchorfile>
            <anchor>Status-enum</anchor>
            <arglist></arglist>
        </member>
        <member kind="enumvalue">
            <name>Ready</name>
            <anchorfile>kuesa-animationplayer.html</anchorfile>
            <anchor>Status-enum</anchor>
            <arglist></arglist>
        </member>
        <member kind="enumvalue">
            <name>Error</name>
            <anchorfile>kuesa-animationplayer.html</anchorfile>
            <anchor>Status-enum</anchor>
            <arglist></arglist>
        </member>
        <member kind="function" protection="public" virtualness="non" static="no">
            <type>Kuesa::AnimationPlayer::Status</type>
            <name>status</name>
            <anchorfile>kuesa-animationplayer.html</anchorfile>
            <anchor>status-prop</anchor>
            <arglist>() const const</arglist>
        </member>
        <member kind="function" protection="public" virtualness="non" static="no">
            <type>QString</type>
            <name>clip</name>
            <anchorfile>kuesa-animationplayer.html</anchorfile>
            <anchor>clip-prop</anchor>
            <arglist>() const const</arglist>
        </member>
        <member kind="function" protection="public" virtualness="non" static="no">
            <type>QString</type>
            <name>mapper</name>
            <anchorfile>kuesa-animationplayer.html</anchorfile>
            <anchor>mapper-prop</anchor>
            <arglist>() const const</arglist>
        </member>
        <member kind="function" protection="public" virtualness="non" static="no">
            <type>bool</type>
            <name>isRunning</name>
            <anchorfile>kuesa-animationplayer.html</anchorfile>
            <anchor>running-prop</anchor>
            <arglist>() const const</arglist>
        </member>
        <member kind="function" protection="public" virtualness="non" static="no">
            <type>int</type>
            <name>loopCount</name>
            <anchorfile>kuesa-animationplayer.html</anchorfile>
            <anchor>loops-prop</anchor>
            <arglist>() const const</arglist>
        </member>
        <member kind="function" protection="public" virtualness="non" static="no">
            <type>int</type>
            <name>currentLoop</name>
            <anchorfile>kuesa-animationplayer.html</anchorfile>
            <anchor>currentLoop-prop</anchor>
            <arglist>() const const</arglist>
        </member>
        <member kind="function" protection="public" virtualness="non" static="no">
            <type>Qt3DAnimation::QClock *</type>
            <name>clock</name>
            <anchorfile>kuesa-animationplayer.html</anchorfile>
            <anchor>clock-prop</anchor>
            <arglist>() const const</arglist>
        </member>
        <member kind="function" protection="public" virtualness="non" static="no">
            <type>float</type>
            <name>normalizedTime</name>
            <anchorfile>kuesa-animationplayer.html</anchorfile>
            <anchor>normalizedTime-prop</anchor>
            <arglist>() const const</arglist>
        </member>
        <member kind="function" protection="public" virtualness="non" static="no">
            <type>float</type>
            <name>duration</name>
            <anchorfile>kuesa-animationplayer.html</anchorfile>
            <anchor>duration-prop</anchor>
            <arglist>() const const</arglist>
        </member>
        <member kind="function" protection="public" virtualness="non" static="no">
            <type>QVector&lt;Qt3DCore::QNode *&gt;</type>
            <name>targets</name>
            <anchorfile>kuesa-animationplayer.html</anchorfile>
            <anchor>targets</anchor>
            <arglist>() const const</arglist>
        </member>
        <member kind="function" protection="public" virtualness="non" static="no">
            <type>void</type>
            <name>addTarget</name>
            <anchorfile>kuesa-animationplayer.html</anchorfile>
            <anchor>addTarget</anchor>
            <arglist>(Qt3DCore::QNode *target)</arglist>
        </member>
        <member kind="function" protection="public" virtualness="non" static="no">
            <type>void</type>
            <name>removeTarget</name>
            <anchorfile>kuesa-animationplayer.html</anchorfile>
            <anchor>removeTarget</anchor>
            <arglist>(Qt3DCore::QNode *target)</arglist>
        </member>
        <member kind="function" protection="public" virtualness="non" static="no">
            <type>void</type>
            <name>setClip</name>
            <anchorfile>kuesa-animationplayer.html</anchorfile>
            <anchor>clip-prop</anchor>
            <arglist>(const QString &amp;clip)</arglist>
        </member>
        <member kind="function" protection="public" virtualness="non" static="no">
            <type>void</type>
            <name>setMapper</name>
            <anchorfile>kuesa-animationplayer.html</anchorfile>
            <anchor>mapper-prop</anchor>
            <arglist>(const QString &amp;mapper)</arglist>
        </member>
        <member kind="function" protection="public" virtualness="non" static="no">
            <type>void</type>
            <name>setRunning</name>
            <anchorfile>kuesa-animationplayer.html</anchorfile>
            <anchor>running-prop</anchor>
            <arglist>(bool running)</arglist>
        </member>
        <member kind="function" protection="public" virtualness="non" static="no">
            <type>void</type>
            <name>setLoopCount</name>
            <anchorfile>kuesa-animationplayer.html</anchorfile>
            <anchor>loops-prop</anchor>
            <arglist>(int loops)</arglist>
        </member>
        <member kind="function" protection="public" virtualness="non" static="no">
            <type>void</type>
            <name>setClock</name>
            <anchorfile>kuesa-animationplayer.html</anchorfile>
            <anchor>clock-prop</anchor>
            <arglist>(Qt3DAnimation::QClock *clock)</arglist>
        </member>
        <member kind="function" protection="public" virtualness="non" static="no">
            <type>void</type>
            <name>setNormalizedTime</name>
            <anchorfile>kuesa-animationplayer.html</anchorfile>
            <anchor>normalizedTime-prop</anchor>
            <arglist>(float timeFraction)</arglist>
        </member>
        <member kind="function" protection="public" virtualness="non" static="no">
            <type>void</type>
            <name>start</name>
            <anchorfile>kuesa-animationplayer.html</anchorfile>
            <anchor>start</anchor>
            <arglist>(int delay)</arglist>
        </member>
        <member kind="function" protection="public" virtualness="non" static="no">
            <type>void</type>
            <name>stop</name>
            <anchorfile>kuesa-animationplayer.html</anchorfile>
            <anchor>stop</anchor>
            <arglist>()</arglist>
        </member>
        <member kind="function" protection="public" virtualness="non" static="no">
            <type>void</type>
            <name>reset</name>
            <anchorfile>kuesa-animationplayer.html</anchorfile>
            <anchor>reset</anchor>
            <arglist>()</arglist>
        </member>
        <member kind="function" protection="public" virtualness="non" static="no">
            <type>void</type>
            <name>restart</name>
            <anchorfile>kuesa-animationplayer.html</anchorfile>
            <anchor>restart</anchor>
            <arglist>(int delay)</arglist>
        </member>
        <member kind="function" protection="public" virtualness="non" static="no">
            <type>void</type>
            <name>run</name>
            <anchorfile>kuesa-animationplayer.html</anchorfile>
            <anchor>run</anchor>
            <arglist>(float fromTimeFraction, float toTimeFraction)</arglist>
        </member>
        <member kind="function" protection="public" virtualness="non" static="no">
            <type>void</type>
            <name>statusChanged</name>
            <anchorfile>kuesa-animationplayer.html</anchorfile>
            <anchor>status-prop</anchor>
            <arglist>(Kuesa::AnimationPlayer::Status status)</arglist>
        </member>
        <member kind="function" protection="public" virtualness="non" static="no">
            <type>void</type>
            <name>clipChanged</name>
            <anchorfile>kuesa-animationplayer.html</anchorfile>
            <anchor>clip-prop</anchor>
            <arglist>(const QString &amp;clip)</arglist>
        </member>
        <member kind="function" protection="public" virtualness="non" static="no">
            <type>void</type>
            <name>mapperChanged</name>
            <anchorfile>kuesa-animationplayer.html</anchorfile>
            <anchor>mapper-prop</anchor>
            <arglist>(const QString &amp;mapper)</arglist>
        </member>
        <member kind="function" protection="public" virtualness="non" static="no">
            <type>void</type>
            <name>runningChanged</name>
            <anchorfile>kuesa-animationplayer.html</anchorfile>
            <anchor>running-prop</anchor>
            <arglist>(bool running)</arglist>
        </member>
        <member kind="function" protection="public" virtualness="non" static="no">
            <type>void</type>
            <name>loopCountChanged</name>
            <anchorfile>kuesa-animationplayer.html</anchorfile>
            <anchor>loops-prop</anchor>
            <arglist>(int loops)</arglist>
        </member>
        <member kind="function" protection="public" virtualness="non" static="no">
            <type>void</type>
            <name>clockChanged</name>
            <anchorfile>kuesa-animationplayer.html</anchorfile>
            <anchor>clock-prop</anchor>
            <arglist>(Qt3DAnimation::QClock *clock)</arglist>
        </member>
        <member kind="function" protection="public" virtualness="non" static="no">
            <type>void</type>
            <name>normalizedTimeChanged</name>
            <anchorfile>kuesa-animationplayer.html</anchorfile>
            <anchor>normalizedTime-prop</anchor>
            <arglist>(float index)</arglist>
        </member>
        <member kind="function" protection="public" virtualness="non" static="no">
            <type>void</type>
            <name>durationChanged</name>
            <anchorfile>kuesa-animationplayer.html</anchorfile>
            <anchor>duration-prop</anchor>
            <arglist>(float duration)</arglist>
        </member>
        <member kind="function" protection="public" virtualness="non" static="no">
            <type>void</type>
            <name>currentLoopChanged</name>
            <anchorfile>kuesa-animationplayer.html</anchorfile>
            <anchor>currentLoop-prop</anchor>
            <arglist>(int currentLoop)</arglist>
        </member>
    </compound>
    <compound kind="class">
        <name>Kuesa::AnimationPulse</name>
        <filename>kuesa-animationpulse.html</filename>
        <base>AnimationPlayer</base>
        <member kind="function" protection="public" virtualness="non" static="no">
            <type>float</type>
            <name>pulse</name>
            <anchorfile>kuesa-animationpulse.html</anchorfile>
            <anchor>pulse-prop</anchor>
            <arglist>() const const</arglist>
        </member>
        <member kind="function" protection="public" virtualness="non" static="no">
            <type>void</type>
            <name>pulseChanged</name>
            <anchorfile>kuesa-animationpulse.html</anchorfile>
            <anchor>pulse-prop</anchor>
            <arglist>(float pulse)</arglist>
        </member>
    </compound>
    <compound kind="class">
        <name>Kuesa::BloomEffect</name>
        <filename>kuesa-bloomeffect.html</filename>
        <base>AbstractPostProcessingEffect</base>
        <member kind="property" type="float">
            <name>threshold</name>
            <anchorfile>kuesa-bloomeffect.html</anchorfile>
            <anchor>threshold-prop</anchor>
            <arglist></arglist>
        </member>
        <member kind="property" type="int">
            <name>blurPassCount</name>
            <anchorfile>kuesa-bloomeffect.html</anchorfile>
            <anchor>blurPassCount-prop</anchor>
            <arglist></arglist>
        </member>
        <member kind="function" protection="public" virtualness="virtual" static="no">
            <type>virtual Kuesa::AbstractPostProcessingEffect::FrameGraphNodePtr</type>
            <name>frameGraphSubTree</name>
            <anchorfile>kuesa-bloomeffect.html</anchorfile>
            <anchor>frameGraphSubTree</anchor>
            <arglist>() const const override</arglist>
        </member>
        <member kind="function" protection="public" virtualness="virtual" static="no">
            <type>virtual void</type>
            <name>setWindowSize</name>
            <anchorfile>kuesa-bloomeffect.html</anchorfile>
            <anchor>setWindowSize</anchor>
            <arglist>(const QSize &amp;size) override</arglist>
        </member>
        <member kind="function" protection="public" virtualness="virtual" static="no">
            <type>virtual void</type>
            <name>setInputTexture</name>
            <anchorfile>kuesa-bloomeffect.html</anchorfile>
            <anchor>setInputTexture</anchor>
            <arglist>(Qt3DRender::QAbstractTexture *texture) override</arglist>
        </member>
        <member kind="function" protection="public" virtualness="non" static="no">
            <type>float</type>
            <name>threshold</name>
            <anchorfile>kuesa-bloomeffect.html</anchorfile>
            <anchor>threshold</anchor>
            <arglist>() const const</arglist>
        </member>
        <member kind="function" protection="public" virtualness="non" static="no">
            <type>int</type>
            <name>blurPassCount</name>
            <anchorfile>kuesa-bloomeffect.html</anchorfile>
            <anchor>blurPassCount</anchor>
            <arglist>() const const</arglist>
        </member>
        <member kind="function" protection="public" virtualness="non" static="no">
            <type>void</type>
            <name>setThreshold</name>
            <anchorfile>kuesa-bloomeffect.html</anchorfile>
            <anchor>setThreshold</anchor>
            <arglist>(float threshold)</arglist>
        </member>
        <member kind="function" protection="public" virtualness="non" static="no">
            <type>void</type>
            <name>setBlurPassCount</name>
            <anchorfile>kuesa-bloomeffect.html</anchorfile>
            <anchor>setBlurPassCount</anchor>
            <arglist>(int blurPassCount)</arglist>
        </member>
        <member kind="function" protection="public" virtualness="non" static="no">
            <type>void</type>
            <name>thresholdChanged</name>
            <anchorfile>kuesa-bloomeffect.html</anchorfile>
            <anchor>threshold-prop</anchor>
            <arglist>(float threshold)</arglist>
        </member>
        <member kind="function" protection="public" virtualness="non" static="no">
            <type>void</type>
            <name>blurPassCountChanged</name>
            <anchorfile>kuesa-bloomeffect.html</anchorfile>
            <anchor>blurPassCount-prop</anchor>
            <arglist>(int blurPassCount)</arglist>
        </member>
    </compound>
    <compound kind="class">
        <name>Kuesa::DepthOfFieldEffect</name>
        <filename>kuesa-depthoffieldeffect.html</filename>
        <base>AbstractPostProcessingEffect</base>
        <member kind="property" type="float">
            <name>focusRange</name>
            <anchorfile>kuesa-depthoffieldeffect.html</anchorfile>
            <anchor>focusRange-prop</anchor>
            <arglist></arglist>
        </member>
        <member kind="property" type="float">
            <name>focusDistance</name>
            <anchorfile>kuesa-depthoffieldeffect.html</anchorfile>
            <anchor>focusDistance-prop</anchor>
            <arglist></arglist>
        </member>
        <member kind="property" type="float">
            <name>radius</name>
            <anchorfile>kuesa-depthoffieldeffect.html</anchorfile>
            <anchor>radius-prop</anchor>
            <arglist></arglist>
        </member>
        <member kind="function" protection="public" virtualness="non" static="no">
            <type>float</type>
            <name>focusRange</name>
            <anchorfile>kuesa-depthoffieldeffect.html</anchorfile>
            <anchor>focusRange-prop</anchor>
            <arglist>() const const</arglist>
        </member>
        <member kind="function" protection="public" virtualness="non" static="no">
            <type>float</type>
            <name>radius</name>
            <anchorfile>kuesa-depthoffieldeffect.html</anchorfile>
            <anchor>radius-prop</anchor>
            <arglist>() const const</arglist>
        </member>
        <member kind="function" protection="public" virtualness="non" static="no">
            <type>float</type>
            <name>focusDistance</name>
            <anchorfile>kuesa-depthoffieldeffect.html</anchorfile>
            <anchor>focusDistance-prop</anchor>
            <arglist>() const const</arglist>
        </member>
        <member kind="function" protection="public" virtualness="non" static="no">
            <type>void</type>
            <name>setFocusRange</name>
            <anchorfile>kuesa-depthoffieldeffect.html</anchorfile>
            <anchor>setFocusRange</anchor>
            <arglist>(float focusRange)</arglist>
        </member>
        <member kind="function" protection="public" virtualness="non" static="no">
            <type>void</type>
            <name>setRadius</name>
            <anchorfile>kuesa-depthoffieldeffect.html</anchorfile>
            <anchor>setRadius</anchor>
            <arglist>(float radius)</arglist>
        </member>
        <member kind="function" protection="public" virtualness="non" static="no">
            <type>void</type>
            <name>setFocusDistance</name>
            <anchorfile>kuesa-depthoffieldeffect.html</anchorfile>
            <anchor>setFocusDistance</anchor>
            <arglist>(float focusDistance)</arglist>
        </member>
        <member kind="function" protection="public" virtualness="non" static="no">
            <type>void</type>
            <name>focusRangeChanged</name>
            <anchorfile>kuesa-depthoffieldeffect.html</anchorfile>
            <anchor>focusRange-prop</anchor>
            <arglist>(float focusRange)</arglist>
        </member>
        <member kind="function" protection="public" virtualness="non" static="no">
            <type>void</type>
            <name>radiusChanged</name>
            <anchorfile>kuesa-depthoffieldeffect.html</anchorfile>
            <anchor>radius-prop</anchor>
            <arglist>(float radius)</arglist>
        </member>
        <member kind="function" protection="public" virtualness="non" static="no">
            <type>void</type>
            <name>focusDistanceChanged</name>
            <anchorfile>kuesa-depthoffieldeffect.html</anchorfile>
            <anchor>focusDistance-prop</anchor>
            <arglist>(float focusDistance)</arglist>
        </member>
    </compound>
    <compound kind="class">
        <name>Kuesa::ForwardRenderer</name>
        <filename>kuesa-forwardrenderer.html</filename>
        <base>View</base>
        <member kind="property" type="QObject*">
            <name>renderSurface</name>
            <anchorfile>kuesa-forwardrenderer.html</anchorfile>
            <anchor>renderSurface-prop</anchor>
            <arglist></arglist>
        </member>
        <member kind="property" type="Qt3DRender::QClearBuffers::BufferType">
            <name>clearBuffers</name>
            <anchorfile>kuesa-forwardrenderer.html</anchorfile>
            <anchor>clearBuffers-prop</anchor>
            <arglist></arglist>
        </member>
        <member kind="function" protection="public" virtualness="non" static="no">
            <type>QObject *</type>
            <name>renderSurface</name>
            <anchorfile>kuesa-forwardrenderer.html</anchorfile>
            <anchor>renderSurface</anchor>
            <arglist>() const const</arglist>
        </member>
        <member kind="function" protection="public" virtualness="non" static="no">
            <type>Qt3DRender::QClearBuffers::BufferType</type>
            <name>clearBuffers</name>
            <anchorfile>kuesa-forwardrenderer.html</anchorfile>
            <anchor>clearBuffers</anchor>
            <arglist>() const const</arglist>
        </member>
        <member kind="function" protection="public" virtualness="non" static="no">
            <type>bool</type>
            <name>showDebugOverlay</name>
            <anchorfile>kuesa-forwardrenderer.html</anchorfile>
            <anchor>showDebugOverlay-prop</anchor>
            <arglist>() const const</arglist>
        </member>
        <member kind="function" protection="public" virtualness="non" static="no">
            <type>void</type>
            <name>setRenderSurface</name>
            <anchorfile>kuesa-forwardrenderer.html</anchorfile>
            <anchor>setRenderSurface</anchor>
            <arglist>(QObject *renderSurface)</arglist>
        </member>
        <member kind="function" protection="public" virtualness="non" static="no">
            <type>void</type>
            <name>setClearBuffers</name>
            <anchorfile>kuesa-forwardrenderer.html</anchorfile>
            <anchor>setClearBuffers</anchor>
            <arglist>(Qt3DRender::QClearBuffers::BufferType clearBuffers)</arglist>
        </member>
        <member kind="function" protection="public" virtualness="non" static="no">
            <type>void</type>
            <name>setShowDebugOverlay</name>
            <anchorfile>kuesa-forwardrenderer.html</anchorfile>
            <anchor>showDebugOverlay-prop</anchor>
            <arglist>(bool showDebugOverlay)</arglist>
        </member>
        <member kind="function" protection="public" virtualness="non" static="no">
            <type>void</type>
            <name>dump</name>
            <anchorfile>kuesa-forwardrenderer.html</anchorfile>
            <anchor>dump</anchor>
            <arglist>()</arglist>
        </member>
        <member kind="function" protection="public" virtualness="non" static="no">
            <type>void</type>
            <name>renderSurfaceChanged</name>
            <anchorfile>kuesa-forwardrenderer.html</anchorfile>
            <anchor>renderSurface-prop</anchor>
            <arglist>(QObject *renderSurface)</arglist>
        </member>
        <member kind="function" protection="public" virtualness="non" static="no">
            <type>void</type>
            <name>clearBuffersChanged</name>
            <anchorfile>kuesa-forwardrenderer.html</anchorfile>
            <anchor>clearBuffers-prop</anchor>
            <arglist>(Qt3DRender::QClearBuffers::BufferType clearBuffers)</arglist>
        </member>
        <member kind="function" protection="public" virtualness="non" static="no">
            <type>void</type>
            <name>showDebugOverlayChanged</name>
            <anchorfile>kuesa-forwardrenderer.html</anchorfile>
            <anchor>showDebugOverlay-prop</anchor>
            <arglist>(bool showDebugOverlay)</arglist>
        </member>
    </compound>
    <compound kind="class">
        <name>Kuesa::FullScreenQuad</name>
        <filename>kuesa-fullscreenquad.html</filename>
        <member kind="function" protection="public" virtualness="non" static="no">
            <type></type>
            <name>FullScreenQuad</name>
            <anchorfile>kuesa-fullscreenquad.html</anchorfile>
            <anchor>FullScreenQuad</anchor>
            <arglist>(Qt3DRender::QMaterial *material, Qt3DCore::QNode *parent)</arglist>
        </member>
        <member kind="function" protection="public" virtualness="non" static="no">
            <type>Qt3DRender::QLayer *</type>
            <name>layer</name>
            <anchorfile>kuesa-fullscreenquad.html</anchorfile>
            <anchor>layer</anchor>
            <arglist>() const const</arglist>
        </member>
        <member kind="function" protection="public" virtualness="non" static="no">
            <type>void</type>
            <name>setViewportRect</name>
            <anchorfile>kuesa-fullscreenquad.html</anchorfile>
            <anchor>setViewportRect</anchor>
            <arglist>(const QRectF &amp;vp)</arglist>
        </member>
    </compound>
    <compound kind="namespace">
        <name>Kuesa::GLTF2Import</name>
        <filename>kuesa-gltf2import.html</filename>
        <class>Kuesa::GLTF2Import::GLTF2Options</class>
    </compound>
    <compound kind="class">
        <name>Kuesa::GLTF2Import::GLTF2Options</name>
        <filename>kuesa-gltf2import-gltf2options.html</filename>
        <member kind="function" protection="public" virtualness="non" static="no">
            <type>bool</type>
            <name>generateTangents</name>
            <anchorfile>kuesa-gltf2import-gltf2options.html</anchorfile>
            <anchor>generateTangents-prop</anchor>
            <arglist>() const const</arglist>
        </member>
        <member kind="function" protection="public" virtualness="non" static="no">
            <type>bool</type>
            <name>generateNormals</name>
            <anchorfile>kuesa-gltf2import-gltf2options.html</anchorfile>
            <anchor>generateNormals-prop</anchor>
            <arglist>() const const</arglist>
        </member>
        <member kind="function" protection="public" virtualness="non" static="no">
            <type>void</type>
            <name>setGenerateTangents</name>
            <anchorfile>kuesa-gltf2import-gltf2options.html</anchorfile>
            <anchor>generateTangents-prop</anchor>
            <arglist>(bool generateTangents)</arglist>
        </member>
        <member kind="function" protection="public" virtualness="non" static="no">
            <type>void</type>
            <name>setGenerateNormals</name>
            <anchorfile>kuesa-gltf2import-gltf2options.html</anchorfile>
            <anchor>generateNormals-prop</anchor>
            <arglist>(bool generateNormals)</arglist>
        </member>
        <member kind="function" protection="public" virtualness="non" static="no">
            <type>void</type>
            <name>generateTangentsChanged</name>
            <anchorfile>kuesa-gltf2import-gltf2options.html</anchorfile>
            <anchor>generateTangents-prop</anchor>
            <arglist>(bool generateTangents)</arglist>
        </member>
        <member kind="function" protection="public" virtualness="non" static="no">
            <type>void</type>
            <name>generateNormalsChanged</name>
            <anchorfile>kuesa-gltf2import-gltf2options.html</anchorfile>
            <anchor>generateNormals-prop</anchor>
            <arglist>(bool generateNormals)</arglist>
        </member>
    </compound>
    <compound kind="class">
        <name>Kuesa::GLTF2Importer</name>
        <filename>kuesa-gltf2importer.html</filename>
        <base>KuesaNode</base>
        <member kind="property" type="QUrl">
            <name>source</name>
            <anchorfile>kuesa-gltf2importer.html</anchorfile>
            <anchor>source-prop</anchor>
            <arglist></arglist>
        </member>
        <member kind="property" type="Kuesa::GLTF2Importer::Status">
            <name>status</name>
            <anchorfile>kuesa-gltf2importer.html</anchorfile>
            <anchor>status-prop</anchor>
            <arglist></arglist>
        </member>
        <member kind="property" type="bool">
            <name>assignNames</name>
            <anchorfile>kuesa-gltf2importer.html</anchorfile>
            <anchor>assignNames-prop</anchor>
            <arglist></arglist>
        </member>
        <member kind="property" type="Kuesa::GLTF2Import::GLTF2Options*">
            <name>options</name>
            <anchorfile>kuesa-gltf2importer.html</anchorfile>
            <anchor>options-prop</anchor>
            <arglist></arglist>
        </member>
        <member kind="property" type="int">
            <name>activeSceneIndex</name>
            <anchorfile>kuesa-gltf2importer.html</anchorfile>
            <anchor>activeSceneIndex-prop</anchor>
            <arglist></arglist>
        </member>
        <member kind="property" type="QStringList">
            <name>availableScenes</name>
            <anchorfile>kuesa-gltf2importer.html</anchorfile>
            <anchor>availableScenes-prop</anchor>
            <arglist></arglist>
        </member>
        <member kind="property" type="bool">
            <name>asynchronous</name>
            <anchorfile>kuesa-gltf2importer.html</anchorfile>
            <anchor>asynchronous-prop</anchor>
            <arglist></arglist>
        </member>
        <member kind="enumeration">
            <name>Status</name>
            <anchorfile>kuesa-gltf2importer.html</anchorfile>
            <anchor>Status-enum</anchor>
        </member>
        <member kind="enumvalue">
            <name>None</name>
            <anchorfile>kuesa-gltf2importer.html</anchorfile>
            <anchor>Status-enum</anchor>
            <arglist></arglist>
        </member>
        <member kind="enumvalue">
            <name>Loading</name>
            <anchorfile>kuesa-gltf2importer.html</anchorfile>
            <anchor>Status-enum</anchor>
            <arglist></arglist>
        </member>
        <member kind="enumvalue">
            <name>Ready</name>
            <anchorfile>kuesa-gltf2importer.html</anchorfile>
            <anchor>Status-enum</anchor>
            <arglist></arglist>
        </member>
        <member kind="enumvalue">
            <name>Error</name>
            <anchorfile>kuesa-gltf2importer.html</anchorfile>
            <anchor>Status-enum</anchor>
            <arglist></arglist>
        </member>
        <member kind="enumeration">
            <name>ActiveScene</name>
            <anchorfile>kuesa-gltf2importer.html</anchorfile>
            <anchor>ActiveScene-enum</anchor>
        </member>
        <member kind="enumvalue">
            <name>DefaultScene</name>
            <anchorfile>kuesa-gltf2importer.html</anchorfile>
            <anchor>ActiveScene-enum</anchor>
            <arglist></arglist>
        </member>
        <member kind="enumvalue">
            <name>EmptyScene</name>
            <anchorfile>kuesa-gltf2importer.html</anchorfile>
            <anchor>ActiveScene-enum</anchor>
            <arglist></arglist>
        </member>
        <member kind="function" protection="public" virtualness="non" static="no">
            <type>QUrl</type>
            <name>source</name>
            <anchorfile>kuesa-gltf2importer.html</anchorfile>
            <anchor>source</anchor>
            <arglist>() const const</arglist>
        </member>
        <member kind="function" protection="public" virtualness="non" static="no">
            <type>GLTF2Importer::Status</type>
            <name>status</name>
            <anchorfile>kuesa-gltf2importer.html</anchorfile>
            <anchor>status</anchor>
            <arglist>() const const</arglist>
        </member>
        <member kind="function" protection="public" virtualness="non" static="no">
            <type>bool</type>
            <name>assignNames</name>
            <anchorfile>kuesa-gltf2importer.html</anchorfile>
            <anchor>assignNames</anchor>
            <arglist>() const const</arglist>
        </member>
        <member kind="function" protection="public" virtualness="non" static="no">
            <type>bool</type>
            <name>asynchronous</name>
            <anchorfile>kuesa-gltf2importer.html</anchorfile>
            <anchor>asynchronous-prop</anchor>
            <arglist>() const const</arglist>
        </member>
        <member kind="function" protection="public" virtualness="non" static="no">
            <type>Kuesa::GLTF2Import::GLTF2Options *</type>
            <name>options</name>
            <anchorfile>kuesa-gltf2importer.html</anchorfile>
            <anchor>options-prop</anchor>
            <arglist>()</arglist>
        </member>
        <member kind="function" protection="public" virtualness="non" static="no">
            <type>const Kuesa::GLTF2Import::GLTF2Options *</type>
            <name>options</name>
            <anchorfile>kuesa-gltf2importer.html</anchorfile>
            <anchor>options-prop</anchor>
            <arglist>() const const</arglist>
        </member>
        <member kind="function" protection="public" virtualness="non" static="no">
            <type>int</type>
            <name>activeSceneIndex</name>
            <anchorfile>kuesa-gltf2importer.html</anchorfile>
            <anchor>activeSceneIndex-prop</anchor>
            <arglist>() const const</arglist>
        </member>
        <member kind="function" protection="public" virtualness="non" static="no">
            <type>QStringList</type>
            <name>availableScenes</name>
            <anchorfile>kuesa-gltf2importer.html</anchorfile>
            <anchor>availableScenes-prop</anchor>
            <arglist>() const const</arglist>
        </member>
        <member kind="function" protection="public" virtualness="non" static="no">
            <type>void</type>
            <name>setSource</name>
            <anchorfile>kuesa-gltf2importer.html</anchorfile>
            <anchor>setSource</anchor>
            <arglist>(const QUrl &amp;source)</arglist>
        </member>
        <member kind="function" protection="public" virtualness="non" static="no">
            <type>void</type>
            <name>setAssignNames</name>
            <anchorfile>kuesa-gltf2importer.html</anchorfile>
            <anchor>setAssignNames</anchor>
            <arglist>(bool assignNames)</arglist>
        </member>
        <member kind="function" protection="public" virtualness="non" static="no">
            <type>void</type>
            <name>setActiveSceneIndex</name>
            <anchorfile>kuesa-gltf2importer.html</anchorfile>
            <anchor>activeSceneIndex-prop</anchor>
            <arglist>(int index)</arglist>
        </member>
        <member kind="function" protection="public" virtualness="non" static="no">
            <type>void</type>
            <name>setAsynchronous</name>
            <anchorfile>kuesa-gltf2importer.html</anchorfile>
            <anchor>asynchronous-prop</anchor>
            <arglist>(bool asynchronous)</arglist>
        </member>
        <member kind="function" protection="public" virtualness="non" static="no">
            <type>void</type>
            <name>reload</name>
            <anchorfile>kuesa-gltf2importer.html</anchorfile>
            <anchor>reload</anchor>
            <arglist>()</arglist>
        </member>
        <member kind="function" protection="public" virtualness="non" static="no">
            <type>void</type>
            <name>sourceChanged</name>
            <anchorfile>kuesa-gltf2importer.html</anchorfile>
            <anchor>source-prop</anchor>
            <arglist>(const QUrl &amp;source)</arglist>
        </member>
        <member kind="function" protection="public" virtualness="non" static="no">
            <type>void</type>
            <name>statusChanged</name>
            <anchorfile>kuesa-gltf2importer.html</anchorfile>
            <anchor>status-prop</anchor>
            <arglist>(const Kuesa::GLTF2Importer::Status status)</arglist>
        </member>
        <member kind="function" protection="public" virtualness="non" static="no">
            <type>void</type>
            <name>assignNamesChanged</name>
            <anchorfile>kuesa-gltf2importer.html</anchorfile>
            <anchor>assignNames-prop</anchor>
            <arglist>(bool assignNames)</arglist>
        </member>
        <member kind="function" protection="public" virtualness="non" static="no">
            <type>void</type>
            <name>activeSceneIndexChanged</name>
            <anchorfile>kuesa-gltf2importer.html</anchorfile>
            <anchor>activeSceneIndex-prop</anchor>
            <arglist>(int activeSceneIndex)</arglist>
        </member>
        <member kind="function" protection="public" virtualness="non" static="no">
            <type>void</type>
            <name>availableScenesChanged</name>
            <anchorfile>kuesa-gltf2importer.html</anchorfile>
            <anchor>availableScenes-prop</anchor>
            <arglist>(const QStringList &amp;availableScenes)</arglist>
        </member>
        <member kind="function" protection="public" virtualness="non" static="no">
            <type>void</type>
            <name>asynchronousChanged</name>
            <anchorfile>kuesa-gltf2importer.html</anchorfile>
            <anchor>asynchronous-prop</anchor>
            <arglist>(bool asynchronous)</arglist>
        </member>
    </compound>
    <compound kind="class">
        <name>Kuesa::GLTF2Material</name>
        <filename>kuesa-gltf2material.html</filename>
        <member kind="property" type="Kuesa::MorphController*">
            <name>morphController</name>
            <anchorfile>kuesa-gltf2material.html</anchorfile>
            <anchor>morphController-prop</anchor>
            <arglist></arglist>
        </member>
        <member kind="function" protection="public" virtualness="non" static="no">
            <type>Kuesa::MorphController *</type>
            <name>morphController</name>
            <anchorfile>kuesa-gltf2material.html</anchorfile>
            <anchor>morphController-prop</anchor>
            <arglist>() const const</arglist>
        </member>
        <member kind="function" protection="public" virtualness="non" static="no">
            <type>void</type>
            <name>morphControllerChanged</name>
            <anchorfile>kuesa-gltf2material.html</anchorfile>
            <anchor>morphController-prop</anchor>
            <arglist>(Kuesa::MorphController *morphController)</arglist>
        </member>
    </compound>
    <compound kind="class">
        <name>Kuesa::GLTF2MaterialEffect</name>
        <filename>kuesa-gltf2materialeffect.html</filename>
        <member kind="property" type="bool">
            <name>doubleSided</name>
            <anchorfile>kuesa-gltf2materialeffect.html</anchorfile>
            <anchor>doubleSided-prop</anchor>
            <arglist></arglist>
        </member>
        <member kind="property" type="bool">
            <name>usingSkinning</name>
            <anchorfile>kuesa-gltf2materialeffect.html</anchorfile>
            <anchor>usingSkinning-prop</anchor>
            <arglist></arglist>
        </member>
        <member kind="property" type="bool">
            <name>opaque</name>
            <anchorfile>kuesa-gltf2materialeffect.html</anchorfile>
            <anchor>opaque-prop</anchor>
            <arglist></arglist>
        </member>
        <member kind="property" type="bool">
            <name>alphaCutoffEnabled</name>
            <anchorfile>kuesa-gltf2materialeffect.html</anchorfile>
            <anchor>alphaCutoffEnabled-prop</anchor>
            <arglist></arglist>
        </member>
        <member kind="property" type="bool">
            <name>usingColorAttribute</name>
            <anchorfile>kuesa-gltf2materialeffect.html</anchorfile>
            <anchor>usingColorAttribute-prop</anchor>
            <arglist></arglist>
        </member>
        <member kind="property" type="bool">
            <name>usingNormalAttribute</name>
            <anchorfile>kuesa-gltf2materialeffect.html</anchorfile>
            <anchor>usingNormalAttribute-prop</anchor>
            <arglist></arglist>
        </member>
        <member kind="property" type="bool">
            <name>usingTangentAttribute</name>
            <anchorfile>kuesa-gltf2materialeffect.html</anchorfile>
            <anchor>usingTangentAttribute-prop</anchor>
            <arglist></arglist>
        </member>
        <member kind="property" type="bool">
            <name>usingTexCoordAttribute</name>
            <anchorfile>kuesa-gltf2materialeffect.html</anchorfile>
            <anchor>usingTexCoordAttribute-prop</anchor>
            <arglist></arglist>
        </member>
        <member kind="property" type="bool">
            <name>usingTexCoord1Attribute</name>
            <anchorfile>kuesa-gltf2materialeffect.html</anchorfile>
            <anchor>usingTexCoord1Attribute-prop</anchor>
            <arglist></arglist>
        </member>
        <member kind="property" type="bool">
            <name>usingMorphTargets</name>
            <anchorfile>kuesa-gltf2materialeffect.html</anchorfile>
            <anchor>usingMorphTargets-prop</anchor>
            <arglist></arglist>
        </member>
        <member kind="function" protection="public" virtualness="non" static="no">
            <type>bool</type>
            <name>isDoubleSided</name>
            <anchorfile>kuesa-gltf2materialeffect.html</anchorfile>
            <anchor>doubleSided-prop</anchor>
            <arglist>() const const</arglist>
        </member>
        <member kind="function" protection="public" virtualness="non" static="no">
            <type>bool</type>
            <name>isUsingSkinning</name>
            <anchorfile>kuesa-gltf2materialeffect.html</anchorfile>
            <anchor>usingSkinning-prop</anchor>
            <arglist>() const const</arglist>
        </member>
        <member kind="function" protection="public" virtualness="non" static="no">
            <type>bool</type>
            <name>isOpaque</name>
            <anchorfile>kuesa-gltf2materialeffect.html</anchorfile>
            <anchor>opaque-prop</anchor>
            <arglist>() const const</arglist>
        </member>
        <member kind="function" protection="public" virtualness="non" static="no">
            <type>bool</type>
            <name>isAlphaCutoffEnabled</name>
            <anchorfile>kuesa-gltf2materialeffect.html</anchorfile>
            <anchor>alphaCutoffEnabled-prop</anchor>
            <arglist>() const const</arglist>
        </member>
        <member kind="function" protection="public" virtualness="non" static="no">
            <type>bool</type>
            <name>isUsingColorAttribute</name>
            <anchorfile>kuesa-gltf2materialeffect.html</anchorfile>
            <anchor>usingColorAttribute-prop</anchor>
            <arglist>() const const</arglist>
        </member>
        <member kind="function" protection="public" virtualness="non" static="no">
            <type>bool</type>
            <name>isUsingNormalAttribute</name>
            <anchorfile>kuesa-gltf2materialeffect.html</anchorfile>
            <anchor>usingNormalAttribute-prop</anchor>
            <arglist>() const const</arglist>
        </member>
        <member kind="function" protection="public" virtualness="non" static="no">
            <type>bool</type>
            <name>isUsingTangentAttribute</name>
            <anchorfile>kuesa-gltf2materialeffect.html</anchorfile>
            <anchor>usingTangentAttribute-prop</anchor>
            <arglist>() const const</arglist>
        </member>
        <member kind="function" protection="public" virtualness="non" static="no">
            <type>bool</type>
            <name>isUsingTexCoordAttribute</name>
            <anchorfile>kuesa-gltf2materialeffect.html</anchorfile>
            <anchor>usingTexCoordAttribute-prop</anchor>
            <arglist>() const const</arglist>
        </member>
        <member kind="function" protection="public" virtualness="non" static="no">
            <type>bool</type>
            <name>isUsingTexCoord1Attribute</name>
            <anchorfile>kuesa-gltf2materialeffect.html</anchorfile>
            <anchor>usingTexCoord1Attribute-prop</anchor>
            <arglist>() const const</arglist>
        </member>
        <member kind="function" protection="public" virtualness="non" static="no">
            <type>bool</type>
            <name>isUsingMorphTargets</name>
            <anchorfile>kuesa-gltf2materialeffect.html</anchorfile>
            <anchor>usingMorphTargets-prop</anchor>
            <arglist>() const const</arglist>
        </member>
        <member kind="function" protection="public" virtualness="non" static="no">
            <type>bool</type>
            <name>isInstanced</name>
            <anchorfile>kuesa-gltf2materialeffect.html</anchorfile>
            <anchor>instanced-prop</anchor>
            <arglist>() const const</arglist>
        </member>
        <member kind="function" protection="public" virtualness="non" static="no">
            <type>void</type>
            <name>setDoubleSided</name>
            <anchorfile>kuesa-gltf2materialeffect.html</anchorfile>
            <anchor>doubleSided-prop</anchor>
            <arglist>(bool doubleSided)</arglist>
        </member>
        <member kind="function" protection="public" virtualness="non" static="no">
            <type>void</type>
            <name>setUsingSkinning</name>
            <anchorfile>kuesa-gltf2materialeffect.html</anchorfile>
            <anchor>usingSkinning-prop</anchor>
            <arglist>(bool useSkinning)</arglist>
        </member>
        <member kind="function" protection="public" virtualness="non" static="no">
            <type>void</type>
            <name>setOpaque</name>
            <anchorfile>kuesa-gltf2materialeffect.html</anchorfile>
            <anchor>opaque-prop</anchor>
            <arglist>(bool opaque)</arglist>
        </member>
        <member kind="function" protection="public" virtualness="non" static="no">
            <type>void</type>
            <name>setAlphaCutoffEnabled</name>
            <anchorfile>kuesa-gltf2materialeffect.html</anchorfile>
            <anchor>alphaCutoffEnabled-prop</anchor>
            <arglist>(bool enabled)</arglist>
        </member>
        <member kind="function" protection="public" virtualness="non" static="no">
            <type>void</type>
            <name>setUsingColorAttribute</name>
            <anchorfile>kuesa-gltf2materialeffect.html</anchorfile>
            <anchor>usingColorAttribute-prop</anchor>
            <arglist>(bool usingColorAttribute)</arglist>
        </member>
        <member kind="function" protection="public" virtualness="non" static="no">
            <type>void</type>
            <name>setUsingNormalAttribute</name>
            <anchorfile>kuesa-gltf2materialeffect.html</anchorfile>
            <anchor>usingNormalAttribute-prop</anchor>
            <arglist>(bool usingNormalAttribute)</arglist>
        </member>
        <member kind="function" protection="public" virtualness="non" static="no">
            <type>void</type>
            <name>setUsingTangentAttribute</name>
            <anchorfile>kuesa-gltf2materialeffect.html</anchorfile>
            <anchor>usingTangentAttribute-prop</anchor>
            <arglist>(bool usingTangentAttribute)</arglist>
        </member>
        <member kind="function" protection="public" virtualness="non" static="no">
            <type>void</type>
            <name>setUsingTexCoordAttribute</name>
            <anchorfile>kuesa-gltf2materialeffect.html</anchorfile>
            <anchor>usingTexCoordAttribute-prop</anchor>
            <arglist>(bool usingTexCoordAttribute)</arglist>
        </member>
        <member kind="function" protection="public" virtualness="non" static="no">
            <type>void</type>
            <name>setUsingTexCoord1Attribute</name>
            <anchorfile>kuesa-gltf2materialeffect.html</anchorfile>
            <anchor>usingTexCoord1Attribute-prop</anchor>
            <arglist>(bool usingTexCoord1Attribute)</arglist>
        </member>
        <member kind="function" protection="public" virtualness="non" static="no">
            <type>void</type>
            <name>setUsingMorphTargets</name>
            <anchorfile>kuesa-gltf2materialeffect.html</anchorfile>
            <anchor>usingMorphTargets-prop</anchor>
            <arglist>(bool usingMorphTargets)</arglist>
        </member>
        <member kind="function" protection="public" virtualness="non" static="no">
            <type>void</type>
            <name>setInstanced</name>
            <anchorfile>kuesa-gltf2materialeffect.html</anchorfile>
            <anchor>instanced-prop</anchor>
            <arglist>(bool instanced)</arglist>
        </member>
        <member kind="function" protection="public" virtualness="non" static="no">
            <type>void</type>
            <name>doubleSidedChanged</name>
            <anchorfile>kuesa-gltf2materialeffect.html</anchorfile>
            <anchor>doubleSided-prop</anchor>
            <arglist>(bool doubleSided)</arglist>
        </member>
        <member kind="function" protection="public" virtualness="non" static="no">
            <type>void</type>
            <name>usingSkinningChanged</name>
            <anchorfile>kuesa-gltf2materialeffect.html</anchorfile>
            <anchor>usingSkinning-prop</anchor>
            <arglist>(bool useSkinning)</arglist>
        </member>
        <member kind="function" protection="public" virtualness="non" static="no">
            <type>void</type>
            <name>opaqueChanged</name>
            <anchorfile>kuesa-gltf2materialeffect.html</anchorfile>
            <anchor>opaque-prop</anchor>
            <arglist>(bool opaque)</arglist>
        </member>
        <member kind="function" protection="public" virtualness="non" static="no">
            <type>void</type>
            <name>alphaCutoffEnabledChanged</name>
            <anchorfile>kuesa-gltf2materialeffect.html</anchorfile>
            <anchor>alphaCutoffEnabled-prop</anchor>
            <arglist>(bool enabled)</arglist>
        </member>
        <member kind="function" protection="public" virtualness="non" static="no">
            <type>void</type>
            <name>usingColorAttributeChanged</name>
            <anchorfile>kuesa-gltf2materialeffect.html</anchorfile>
            <anchor>usingColorAttribute-prop</anchor>
            <arglist>(bool usingColorAttribute)</arglist>
        </member>
        <member kind="function" protection="public" virtualness="non" static="no">
            <type>void</type>
            <name>usingNormalAttributeChanged</name>
            <anchorfile>kuesa-gltf2materialeffect.html</anchorfile>
            <anchor>usingNormalAttribute-prop</anchor>
            <arglist>(bool usingNormalAttribute)</arglist>
        </member>
        <member kind="function" protection="public" virtualness="non" static="no">
            <type>void</type>
            <name>usingTangentAttributeChanged</name>
            <anchorfile>kuesa-gltf2materialeffect.html</anchorfile>
            <anchor>usingTangentAttribute-prop</anchor>
            <arglist>(bool usingTangentAttribute)</arglist>
        </member>
        <member kind="function" protection="public" virtualness="non" static="no">
            <type>void</type>
            <name>usingTexCoordAttributeChanged</name>
            <anchorfile>kuesa-gltf2materialeffect.html</anchorfile>
            <anchor>usingTexCoordAttribute-prop</anchor>
            <arglist>(bool usingTexCoordAttribute)</arglist>
        </member>
        <member kind="function" protection="public" virtualness="non" static="no">
            <type>void</type>
            <name>usingTexCoord1AttributeChanged</name>
            <anchorfile>kuesa-gltf2materialeffect.html</anchorfile>
            <anchor>usingTexCoord1Attribute-prop</anchor>
            <arglist>(bool usingTexCoord1Attribute)</arglist>
        </member>
        <member kind="function" protection="public" virtualness="non" static="no">
            <type>void</type>
            <name>usingMorphTargetsChanged</name>
            <anchorfile>kuesa-gltf2materialeffect.html</anchorfile>
            <anchor>usingMorphTargets-prop</anchor>
            <arglist>(bool usingMorphTargets)</arglist>
        </member>
        <member kind="function" protection="public" virtualness="non" static="no">
            <type>void</type>
            <name>instancedChanged</name>
            <anchorfile>kuesa-gltf2materialeffect.html</anchorfile>
            <anchor>instanced-prop</anchor>
            <arglist>(bool instanced)</arglist>
        </member>
    </compound>
    <compound kind="class">
        <name>Kuesa::GLTF2MaterialProperties</name>
        <filename>kuesa-gltf2materialproperties.html</filename>
        <member kind="property" type="QColor">
            <name>baseColorFactor</name>
            <anchorfile>kuesa-gltf2materialproperties.html</anchorfile>
            <anchor>baseColorFactor-prop</anchor>
            <arglist></arglist>
        </member>
        <member kind="property" type="Qt3DRender::QAbstractTexture*">
            <name>baseColorMap</name>
            <anchorfile>kuesa-gltf2materialproperties.html</anchorfile>
            <anchor>baseColorMap-prop</anchor>
            <arglist></arglist>
        </member>
        <member kind="property" type="float">
            <name>alphaCutoff</name>
            <anchorfile>kuesa-gltf2materialproperties.html</anchorfile>
            <anchor>alphaCutoff-prop</anchor>
            <arglist></arglist>
        </member>
        <member kind="property" type="bool">
            <name>receivesShadows</name>
            <anchorfile>kuesa-gltf2materialproperties.html</anchorfile>
            <anchor>receivesShadows-prop</anchor>
            <arglist></arglist>
        </member>
        <member kind="function" protection="public" virtualness="non" static="no">
            <type>bool</type>
            <name>isBaseColorUsingTexCoord1</name>
            <anchorfile>kuesa-gltf2materialproperties.html</anchorfile>
            <anchor>baseColorUsesTexCoord1-prop</anchor>
            <arglist>() const const</arglist>
        </member>
        <member kind="function" protection="public" virtualness="non" static="no">
            <type>QColor</type>
            <name>baseColorFactor</name>
            <anchorfile>kuesa-gltf2materialproperties.html</anchorfile>
            <anchor>baseColorFactor-prop</anchor>
            <arglist>() const const</arglist>
        </member>
        <member kind="function" protection="public" virtualness="non" static="no">
            <type>Qt3DRender::QAbstractTexture *</type>
            <name>baseColorMap</name>
            <anchorfile>kuesa-gltf2materialproperties.html</anchorfile>
            <anchor>baseColorMap-prop</anchor>
            <arglist>() const const</arglist>
        </member>
        <member kind="function" protection="public" virtualness="non" static="no">
            <type>float</type>
            <name>alphaCutoff</name>
            <anchorfile>kuesa-gltf2materialproperties.html</anchorfile>
            <anchor>alphaCutoff-prop</anchor>
            <arglist>() const const</arglist>
        </member>
        <member kind="function" protection="public" virtualness="non" static="no">
            <type>bool</type>
            <name>receivesShadows</name>
            <anchorfile>kuesa-gltf2materialproperties.html</anchorfile>
            <anchor>receivesShadows-prop</anchor>
            <arglist>() const const</arglist>
        </member>
        <member kind="function" protection="public" virtualness="non" static="no">
            <type>void</type>
            <name>setBaseColorUsesTexCoord1</name>
            <anchorfile>kuesa-gltf2materialproperties.html</anchorfile>
            <anchor>baseColorUsesTexCoord1-prop</anchor>
            <arglist>(bool baseColorUsesTexCoord1)</arglist>
        </member>
        <member kind="function" protection="public" virtualness="non" static="no">
            <type>void</type>
            <name>setBaseColorFactor</name>
            <anchorfile>kuesa-gltf2materialproperties.html</anchorfile>
            <anchor>baseColorFactor-prop</anchor>
            <arglist>(const QColor &amp;baseColorFactor)</arglist>
        </member>
        <member kind="function" protection="public" virtualness="non" static="no">
            <type>void</type>
            <name>setBaseColorMap</name>
            <anchorfile>kuesa-gltf2materialproperties.html</anchorfile>
            <anchor>baseColorMap-prop</anchor>
            <arglist>(Qt3DRender::QAbstractTexture *baseColorMap)</arglist>
        </member>
        <member kind="function" protection="public" virtualness="non" static="no">
            <type>void</type>
            <name>setAlphaCutoff</name>
            <anchorfile>kuesa-gltf2materialproperties.html</anchorfile>
            <anchor>alphaCutoff-prop</anchor>
            <arglist>(float alphaCutoff)</arglist>
        </member>
        <member kind="function" protection="public" virtualness="non" static="no">
            <type>void</type>
            <name>setReceivesShadows</name>
            <anchorfile>kuesa-gltf2materialproperties.html</anchorfile>
            <anchor>receivesShadows-prop</anchor>
            <arglist>(bool receivesShadows)</arglist>
        </member>
        <member kind="function" protection="public" virtualness="non" static="no">
            <type>void</type>
            <name>baseColorUsesTexCoord1Changed</name>
            <anchorfile>kuesa-gltf2materialproperties.html</anchorfile>
            <anchor>baseColorUsesTexCoord1-prop</anchor>
            <arglist>(bool )</arglist>
        </member>
        <member kind="function" protection="public" virtualness="non" static="no">
            <type>void</type>
            <name>baseColorFactorChanged</name>
            <anchorfile>kuesa-gltf2materialproperties.html</anchorfile>
            <anchor>baseColorFactor-prop</anchor>
            <arglist>(const QColor &amp;baseColorFactor)</arglist>
        </member>
        <member kind="function" protection="public" virtualness="non" static="no">
            <type>void</type>
            <name>baseColorMapChanged</name>
            <anchorfile>kuesa-gltf2materialproperties.html</anchorfile>
            <anchor>baseColorMap-prop</anchor>
            <arglist>(Qt3DRender::QAbstractTexture *baseColorMap)</arglist>
        </member>
        <member kind="function" protection="public" virtualness="non" static="no">
            <type>void</type>
            <name>alphaCutoffChanged</name>
            <anchorfile>kuesa-gltf2materialproperties.html</anchorfile>
            <anchor>alphaCutoff-prop</anchor>
            <arglist>(float alphaCutoff)</arglist>
        </member>
        <member kind="function" protection="public" virtualness="non" static="no">
            <type>void</type>
            <name>receivesShadowsChanged</name>
            <anchorfile>kuesa-gltf2materialproperties.html</anchorfile>
            <anchor>receivesShadows-prop</anchor>
            <arglist>(bool receivesShadows)</arglist>
        </member>
    </compound>
    <compound kind="class">
        <name>Kuesa::GaussianBlurEffect</name>
        <filename>kuesa-gaussianblureffect.html</filename>
        <base>AbstractPostProcessingEffect</base>
        <member kind="property" type="int">
            <name>blurPassCount</name>
            <anchorfile>kuesa-gaussianblureffect.html</anchorfile>
            <anchor>blurPassCount-prop</anchor>
            <arglist></arglist>
        </member>
        <member kind="function" protection="public" virtualness="virtual" static="no">
            <type>virtual Kuesa::AbstractPostProcessingEffect::FrameGraphNodePtr</type>
            <name>frameGraphSubTree</name>
            <anchorfile>kuesa-gaussianblureffect.html</anchorfile>
            <anchor>frameGraphSubTree</anchor>
            <arglist>() const const override</arglist>
        </member>
        <member kind="function" protection="public" virtualness="virtual" static="no">
            <type>virtual void</type>
            <name>setInputTexture</name>
            <anchorfile>kuesa-gaussianblureffect.html</anchorfile>
            <anchor>setInputTexture</anchor>
            <arglist>(Qt3DRender::QAbstractTexture *texture) override</arglist>
        </member>
        <member kind="function" protection="public" virtualness="virtual" static="no">
            <type>virtual void</type>
            <name>setWindowSize</name>
            <anchorfile>kuesa-gaussianblureffect.html</anchorfile>
            <anchor>setWindowSize</anchor>
            <arglist>(const QSize &amp;size) override</arglist>
        </member>
        <member kind="function" protection="public" virtualness="non" static="no">
            <type>int</type>
            <name>blurPassCount</name>
            <anchorfile>kuesa-gaussianblureffect.html</anchorfile>
            <anchor>blurPassCount</anchor>
            <arglist>() const const</arglist>
        </member>
        <member kind="function" protection="public" virtualness="non" static="no">
            <type>void</type>
            <name>setBlurPassCount</name>
            <anchorfile>kuesa-gaussianblureffect.html</anchorfile>
            <anchor>setBlurPassCount</anchor>
            <arglist>(int blurPassCount)</arglist>
        </member>
        <member kind="function" protection="public" virtualness="non" static="no">
            <type>void</type>
            <name>blurPassCountChanged</name>
            <anchorfile>kuesa-gaussianblureffect.html</anchorfile>
            <anchor>blurPassCount-prop</anchor>
            <arglist>(int blurPassCount)</arglist>
        </member>
    </compound>
    <compound kind="class">
        <name>Kuesa::Iro2AlphaEquiRectEffect</name>
        <filename>kuesa-iro2alphaequirecteffect.html</filename>
        <base>GLTF2MaterialEffect</base>
    </compound>
    <compound kind="class">
        <name>Kuesa::Iro2AlphaEquiRectMaterial</name>
        <filename>kuesa-iro2alphaequirectmaterial.html</filename>
        <base>GLTF2Material</base>
        <member kind="property" type="Kuesa::Iro2AlphaEquiRectProperties*">
            <name>materialProperties</name>
            <anchorfile>kuesa-iro2alphaequirectmaterial.html</anchorfile>
            <anchor>materialProperties-prop</anchor>
            <arglist></arglist>
        </member>
        <member kind="function" protection="public" virtualness="non" static="no">
            <type>Kuesa::Iro2AlphaEquiRectProperties *</type>
            <name>materialProperties</name>
            <anchorfile>kuesa-iro2alphaequirectmaterial.html</anchorfile>
            <anchor>materialProperties-prop</anchor>
            <arglist>() const const</arglist>
        </member>
        <member kind="function" protection="public" virtualness="non" static="no">
            <type>void</type>
            <name>setMaterialProperties</name>
            <anchorfile>kuesa-iro2alphaequirectmaterial.html</anchorfile>
            <anchor>materialProperties-prop</anchor>
            <arglist>(Kuesa::Iro2AlphaEquiRectProperties *materialProperties)</arglist>
        </member>
        <member kind="function" protection="public" virtualness="non" static="no">
            <type>void</type>
            <name>setMaterialProperties</name>
            <anchorfile>kuesa-iro2alphaequirectmaterial.html</anchorfile>
            <anchor>materialProperties-prop</anchor>
            <arglist>(Kuesa::GLTF2MaterialProperties *materialProperties)</arglist>
        </member>
        <member kind="function" protection="public" virtualness="non" static="no">
            <type>void</type>
            <name>materialPropertiesChanged</name>
            <anchorfile>kuesa-iro2alphaequirectmaterial.html</anchorfile>
            <anchor>materialProperties-prop</anchor>
            <arglist>(Kuesa::Iro2AlphaEquiRectProperties *materialProperties)</arglist>
        </member>
    </compound>
    <compound kind="class">
        <name>Kuesa::Iro2AlphaEquiRectProperties</name>
        <filename>kuesa-iro2alphaequirectproperties.html</filename>
        <base>GLTF2MaterialProperties</base>
        <member kind="property" type="bool">
            <name>usesReflectionMap</name>
            <anchorfile>kuesa-iro2alphaequirectproperties.html</anchorfile>
            <anchor>usesReflectionMap-prop</anchor>
            <arglist></arglist>
        </member>
        <member kind="property" type="float">
            <name>reflectionGain</name>
            <anchorfile>kuesa-iro2alphaequirectproperties.html</anchorfile>
            <anchor>reflectionGain-prop</anchor>
            <arglist></arglist>
        </member>
        <member kind="property" type="QVector3D">
            <name>reflectionInnerFilter</name>
            <anchorfile>kuesa-iro2alphaequirectproperties.html</anchorfile>
            <anchor>reflectionInnerFilter-prop</anchor>
            <arglist></arglist>
        </member>
        <member kind="property" type="QVector3D">
            <name>reflectionOuterFilter</name>
            <anchorfile>kuesa-iro2alphaequirectproperties.html</anchorfile>
            <anchor>reflectionOuterFilter-prop</anchor>
            <arglist></arglist>
        </member>
        <member kind="property" type="float">
            <name>innerAlpha</name>
            <anchorfile>kuesa-iro2alphaequirectproperties.html</anchorfile>
            <anchor>innerAlpha-prop</anchor>
            <arglist></arglist>
        </member>
        <member kind="property" type="float">
            <name>outerAlpha</name>
            <anchorfile>kuesa-iro2alphaequirectproperties.html</anchorfile>
            <anchor>outerAlpha-prop</anchor>
            <arglist></arglist>
        </member>
        <member kind="property" type="float">
            <name>alphaGain</name>
            <anchorfile>kuesa-iro2alphaequirectproperties.html</anchorfile>
            <anchor>alphaGain-prop</anchor>
            <arglist></arglist>
        </member>
        <member kind="property" type="bool">
            <name>usesNormalMap</name>
            <anchorfile>kuesa-iro2alphaequirectproperties.html</anchorfile>
            <anchor>usesNormalMap-prop</anchor>
            <arglist></arglist>
        </member>
        <member kind="property" type="float">
            <name>normalMapGain</name>
            <anchorfile>kuesa-iro2alphaequirectproperties.html</anchorfile>
            <anchor>normalMapGain-prop</anchor>
            <arglist></arglist>
        </member>
        <member kind="property" type="QVector3D">
            <name>normalScaling</name>
            <anchorfile>kuesa-iro2alphaequirectproperties.html</anchorfile>
            <anchor>normalScaling-prop</anchor>
            <arglist></arglist>
        </member>
        <member kind="property" type="QVector2D">
            <name>normalDisturb</name>
            <anchorfile>kuesa-iro2alphaequirectproperties.html</anchorfile>
            <anchor>normalDisturb-prop</anchor>
            <arglist></arglist>
        </member>
        <member kind="property" type="float">
            <name>postVertexColor</name>
            <anchorfile>kuesa-iro2alphaequirectproperties.html</anchorfile>
            <anchor>postVertexColor-prop</anchor>
            <arglist></arglist>
        </member>
        <member kind="property" type="QVector3D">
            <name>postHemiFilter</name>
            <anchorfile>kuesa-iro2alphaequirectproperties.html</anchorfile>
            <anchor>postHemiFilter-prop</anchor>
            <arglist></arglist>
        </member>
        <member kind="property" type="float">
            <name>postGain</name>
            <anchorfile>kuesa-iro2alphaequirectproperties.html</anchorfile>
            <anchor>postGain-prop</anchor>
            <arglist></arglist>
        </member>
        <member kind="property" type="bool">
            <name>gltfYUp</name>
            <anchorfile>kuesa-iro2alphaequirectproperties.html</anchorfile>
            <anchor>gltfYUp-prop</anchor>
            <arglist></arglist>
        </member>
        <member kind="function" protection="public" virtualness="non" static="no">
            <type>bool</type>
            <name>usesReflectionMap</name>
            <anchorfile>kuesa-iro2alphaequirectproperties.html</anchorfile>
            <anchor>usesReflectionMap-prop</anchor>
            <arglist>() const const</arglist>
        </member>
        <member kind="function" protection="public" virtualness="non" static="no">
            <type>Qt3DRender::QAbstractTexture *</type>
            <name>reflectionMap</name>
            <anchorfile>kuesa-iro2alphaequirectproperties.html</anchorfile>
            <anchor>reflectionMap-prop</anchor>
            <arglist>() const const</arglist>
        </member>
        <member kind="function" protection="public" virtualness="non" static="no">
            <type>float</type>
            <name>reflectionGain</name>
            <anchorfile>kuesa-iro2alphaequirectproperties.html</anchorfile>
            <anchor>reflectionGain-prop</anchor>
            <arglist>() const const</arglist>
        </member>
        <member kind="function" protection="public" virtualness="non" static="no">
            <type>QVector3D</type>
            <name>reflectionInnerFilter</name>
            <anchorfile>kuesa-iro2alphaequirectproperties.html</anchorfile>
            <anchor>reflectionInnerFilter-prop</anchor>
            <arglist>() const const</arglist>
        </member>
        <member kind="function" protection="public" virtualness="non" static="no">
            <type>QVector3D</type>
            <name>reflectionOuterFilter</name>
            <anchorfile>kuesa-iro2alphaequirectproperties.html</anchorfile>
            <anchor>reflectionOuterFilter-prop</anchor>
            <arglist>() const const</arglist>
        </member>
        <member kind="function" protection="public" virtualness="non" static="no">
            <type>float</type>
            <name>innerAlpha</name>
            <anchorfile>kuesa-iro2alphaequirectproperties.html</anchorfile>
            <anchor>innerAlpha-prop</anchor>
            <arglist>() const const</arglist>
        </member>
        <member kind="function" protection="public" virtualness="non" static="no">
            <type>float</type>
            <name>outerAlpha</name>
            <anchorfile>kuesa-iro2alphaequirectproperties.html</anchorfile>
            <anchor>outerAlpha-prop</anchor>
            <arglist>() const const</arglist>
        </member>
        <member kind="function" protection="public" virtualness="non" static="no">
            <type>float</type>
            <name>alphaGain</name>
            <anchorfile>kuesa-iro2alphaequirectproperties.html</anchorfile>
            <anchor>alphaGain-prop</anchor>
            <arglist>() const const</arglist>
        </member>
        <member kind="function" protection="public" virtualness="non" static="no">
            <type>bool</type>
            <name>usesNormalMap</name>
            <anchorfile>kuesa-iro2alphaequirectproperties.html</anchorfile>
            <anchor>usesNormalMap-prop</anchor>
            <arglist>() const const</arglist>
        </member>
        <member kind="function" protection="public" virtualness="non" static="no">
            <type>Qt3DRender::QAbstractTexture *</type>
            <name>normalMap</name>
            <anchorfile>kuesa-iro2alphaequirectproperties.html</anchorfile>
            <anchor>normalMap-prop</anchor>
            <arglist>() const const</arglist>
        </member>
        <member kind="function" protection="public" virtualness="non" static="no">
            <type>float</type>
            <name>normalMapGain</name>
            <anchorfile>kuesa-iro2alphaequirectproperties.html</anchorfile>
            <anchor>normalMapGain-prop</anchor>
            <arglist>() const const</arglist>
        </member>
        <member kind="function" protection="public" virtualness="non" static="no">
            <type>QVector3D</type>
            <name>normalScaling</name>
            <anchorfile>kuesa-iro2alphaequirectproperties.html</anchorfile>
            <anchor>normalScaling-prop</anchor>
            <arglist>() const const</arglist>
        </member>
        <member kind="function" protection="public" virtualness="non" static="no">
            <type>QVector2D</type>
            <name>normalDisturb</name>
            <anchorfile>kuesa-iro2alphaequirectproperties.html</anchorfile>
            <anchor>normalDisturb-prop</anchor>
            <arglist>() const const</arglist>
        </member>
        <member kind="function" protection="public" virtualness="non" static="no">
            <type>float</type>
            <name>postVertexColor</name>
            <anchorfile>kuesa-iro2alphaequirectproperties.html</anchorfile>
            <anchor>postVertexColor-prop</anchor>
            <arglist>() const const</arglist>
        </member>
        <member kind="function" protection="public" virtualness="non" static="no">
            <type>QVector3D</type>
            <name>postHemiFilter</name>
            <anchorfile>kuesa-iro2alphaequirectproperties.html</anchorfile>
            <anchor>postHemiFilter-prop</anchor>
            <arglist>() const const</arglist>
        </member>
        <member kind="function" protection="public" virtualness="non" static="no">
            <type>float</type>
            <name>postGain</name>
            <anchorfile>kuesa-iro2alphaequirectproperties.html</anchorfile>
            <anchor>postGain-prop</anchor>
            <arglist>() const const</arglist>
        </member>
        <member kind="function" protection="public" virtualness="non" static="no">
            <type>bool</type>
            <name>gltfYUp</name>
            <anchorfile>kuesa-iro2alphaequirectproperties.html</anchorfile>
            <anchor>gltfYUp-prop</anchor>
            <arglist>() const const</arglist>
        </member>
        <member kind="function" protection="public" virtualness="non" static="no">
            <type>void</type>
            <name>setUsesReflectionMap</name>
            <anchorfile>kuesa-iro2alphaequirectproperties.html</anchorfile>
            <anchor>usesReflectionMap-prop</anchor>
            <arglist>(bool usesReflectionMap)</arglist>
        </member>
        <member kind="function" protection="public" virtualness="non" static="no">
            <type>void</type>
            <name>setReflectionMap</name>
            <anchorfile>kuesa-iro2alphaequirectproperties.html</anchorfile>
            <anchor>reflectionMap-prop</anchor>
            <arglist>(Qt3DRender::QAbstractTexture *reflectionMap)</arglist>
        </member>
        <member kind="function" protection="public" virtualness="non" static="no">
            <type>void</type>
            <name>setReflectionGain</name>
            <anchorfile>kuesa-iro2alphaequirectproperties.html</anchorfile>
            <anchor>reflectionGain-prop</anchor>
            <arglist>(float reflectionGain)</arglist>
        </member>
        <member kind="function" protection="public" virtualness="non" static="no">
            <type>void</type>
            <name>setReflectionInnerFilter</name>
            <anchorfile>kuesa-iro2alphaequirectproperties.html</anchorfile>
            <anchor>reflectionInnerFilter-prop</anchor>
            <arglist>(const QVector3D &amp;reflectionInnerFilter)</arglist>
        </member>
        <member kind="function" protection="public" virtualness="non" static="no">
            <type>void</type>
            <name>setReflectionOuterFilter</name>
            <anchorfile>kuesa-iro2alphaequirectproperties.html</anchorfile>
            <anchor>reflectionOuterFilter-prop</anchor>
            <arglist>(const QVector3D &amp;reflectionOuterFilter)</arglist>
        </member>
        <member kind="function" protection="public" virtualness="non" static="no">
            <type>void</type>
            <name>setInnerAlpha</name>
            <anchorfile>kuesa-iro2alphaequirectproperties.html</anchorfile>
            <anchor>innerAlpha-prop</anchor>
            <arglist>(float innerAlpha)</arglist>
        </member>
        <member kind="function" protection="public" virtualness="non" static="no">
            <type>void</type>
            <name>setOuterAlpha</name>
            <anchorfile>kuesa-iro2alphaequirectproperties.html</anchorfile>
            <anchor>outerAlpha-prop</anchor>
            <arglist>(float outerAlpha)</arglist>
        </member>
        <member kind="function" protection="public" virtualness="non" static="no">
            <type>void</type>
            <name>setAlphaGain</name>
            <anchorfile>kuesa-iro2alphaequirectproperties.html</anchorfile>
            <anchor>alphaGain-prop</anchor>
            <arglist>(float alphaGain)</arglist>
        </member>
        <member kind="function" protection="public" virtualness="non" static="no">
            <type>void</type>
            <name>setUsesNormalMap</name>
            <anchorfile>kuesa-iro2alphaequirectproperties.html</anchorfile>
            <anchor>usesNormalMap-prop</anchor>
            <arglist>(bool usesNormalMap)</arglist>
        </member>
        <member kind="function" protection="public" virtualness="non" static="no">
            <type>void</type>
            <name>setNormalMap</name>
            <anchorfile>kuesa-iro2alphaequirectproperties.html</anchorfile>
            <anchor>normalMap-prop</anchor>
            <arglist>(Qt3DRender::QAbstractTexture *normalMap)</arglist>
        </member>
        <member kind="function" protection="public" virtualness="non" static="no">
            <type>void</type>
            <name>setNormalMapGain</name>
            <anchorfile>kuesa-iro2alphaequirectproperties.html</anchorfile>
            <anchor>normalMapGain-prop</anchor>
            <arglist>(float normalMapGain)</arglist>
        </member>
        <member kind="function" protection="public" virtualness="non" static="no">
            <type>void</type>
            <name>setNormalScaling</name>
            <anchorfile>kuesa-iro2alphaequirectproperties.html</anchorfile>
            <anchor>normalScaling-prop</anchor>
            <arglist>(const QVector3D &amp;normalScaling)</arglist>
        </member>
        <member kind="function" protection="public" virtualness="non" static="no">
            <type>void</type>
            <name>setNormalDisturb</name>
            <anchorfile>kuesa-iro2alphaequirectproperties.html</anchorfile>
            <anchor>normalDisturb-prop</anchor>
            <arglist>(const QVector2D &amp;normalDisturb)</arglist>
        </member>
        <member kind="function" protection="public" virtualness="non" static="no">
            <type>void</type>
            <name>setPostVertexColor</name>
            <anchorfile>kuesa-iro2alphaequirectproperties.html</anchorfile>
            <anchor>postVertexColor-prop</anchor>
            <arglist>(float postVertexColor)</arglist>
        </member>
        <member kind="function" protection="public" virtualness="non" static="no">
            <type>void</type>
            <name>setPostHemiFilter</name>
            <anchorfile>kuesa-iro2alphaequirectproperties.html</anchorfile>
            <anchor>postHemiFilter-prop</anchor>
            <arglist>(const QVector3D &amp;postHemiFilter)</arglist>
        </member>
        <member kind="function" protection="public" virtualness="non" static="no">
            <type>void</type>
            <name>setPostGain</name>
            <anchorfile>kuesa-iro2alphaequirectproperties.html</anchorfile>
            <anchor>postGain-prop</anchor>
            <arglist>(float postGain)</arglist>
        </member>
        <member kind="function" protection="public" virtualness="non" static="no">
            <type>void</type>
            <name>setGltfYUp</name>
            <anchorfile>kuesa-iro2alphaequirectproperties.html</anchorfile>
            <anchor>gltfYUp-prop</anchor>
            <arglist>(bool gltfYUp)</arglist>
        </member>
        <member kind="function" protection="public" virtualness="non" static="no">
            <type>void</type>
            <name>usesReflectionMapChanged</name>
            <anchorfile>kuesa-iro2alphaequirectproperties.html</anchorfile>
            <anchor>usesReflectionMap-prop</anchor>
            <arglist>(bool )</arglist>
        </member>
        <member kind="function" protection="public" virtualness="non" static="no">
            <type>void</type>
            <name>reflectionMapChanged</name>
            <anchorfile>kuesa-iro2alphaequirectproperties.html</anchorfile>
            <anchor>reflectionMap-prop</anchor>
            <arglist>(Qt3DRender::QAbstractTexture *)</arglist>
        </member>
        <member kind="function" protection="public" virtualness="non" static="no">
            <type>void</type>
            <name>reflectionGainChanged</name>
            <anchorfile>kuesa-iro2alphaequirectproperties.html</anchorfile>
            <anchor>reflectionGain-prop</anchor>
            <arglist>(float )</arglist>
        </member>
        <member kind="function" protection="public" virtualness="non" static="no">
            <type>void</type>
            <name>reflectionInnerFilterChanged</name>
            <anchorfile>kuesa-iro2alphaequirectproperties.html</anchorfile>
            <anchor>reflectionInnerFilter-prop</anchor>
            <arglist>(QVector3D )</arglist>
        </member>
        <member kind="function" protection="public" virtualness="non" static="no">
            <type>void</type>
            <name>reflectionOuterFilterChanged</name>
            <anchorfile>kuesa-iro2alphaequirectproperties.html</anchorfile>
            <anchor>reflectionOuterFilter-prop</anchor>
            <arglist>(QVector3D )</arglist>
        </member>
        <member kind="function" protection="public" virtualness="non" static="no">
            <type>void</type>
            <name>innerAlphaChanged</name>
            <anchorfile>kuesa-iro2alphaequirectproperties.html</anchorfile>
            <anchor>innerAlpha-prop</anchor>
            <arglist>(float )</arglist>
        </member>
        <member kind="function" protection="public" virtualness="non" static="no">
            <type>void</type>
            <name>outerAlphaChanged</name>
            <anchorfile>kuesa-iro2alphaequirectproperties.html</anchorfile>
            <anchor>outerAlpha-prop</anchor>
            <arglist>(float )</arglist>
        </member>
        <member kind="function" protection="public" virtualness="non" static="no">
            <type>void</type>
            <name>alphaGainChanged</name>
            <anchorfile>kuesa-iro2alphaequirectproperties.html</anchorfile>
            <anchor>alphaGain-prop</anchor>
            <arglist>(float )</arglist>
        </member>
        <member kind="function" protection="public" virtualness="non" static="no">
            <type>void</type>
            <name>usesNormalMapChanged</name>
            <anchorfile>kuesa-iro2alphaequirectproperties.html</anchorfile>
            <anchor>usesNormalMap-prop</anchor>
            <arglist>(bool )</arglist>
        </member>
        <member kind="function" protection="public" virtualness="non" static="no">
            <type>void</type>
            <name>normalMapChanged</name>
            <anchorfile>kuesa-iro2alphaequirectproperties.html</anchorfile>
            <anchor>normalMap-prop</anchor>
            <arglist>(Qt3DRender::QAbstractTexture *)</arglist>
        </member>
        <member kind="function" protection="public" virtualness="non" static="no">
            <type>void</type>
            <name>normalMapGainChanged</name>
            <anchorfile>kuesa-iro2alphaequirectproperties.html</anchorfile>
            <anchor>normalMapGain-prop</anchor>
            <arglist>(float )</arglist>
        </member>
        <member kind="function" protection="public" virtualness="non" static="no">
            <type>void</type>
            <name>normalScalingChanged</name>
            <anchorfile>kuesa-iro2alphaequirectproperties.html</anchorfile>
            <anchor>normalScaling-prop</anchor>
            <arglist>(QVector3D )</arglist>
        </member>
        <member kind="function" protection="public" virtualness="non" static="no">
            <type>void</type>
            <name>normalDisturbChanged</name>
            <anchorfile>kuesa-iro2alphaequirectproperties.html</anchorfile>
            <anchor>normalDisturb-prop</anchor>
            <arglist>(QVector2D )</arglist>
        </member>
        <member kind="function" protection="public" virtualness="non" static="no">
            <type>void</type>
            <name>postVertexColorChanged</name>
            <anchorfile>kuesa-iro2alphaequirectproperties.html</anchorfile>
            <anchor>postVertexColor-prop</anchor>
            <arglist>(float )</arglist>
        </member>
        <member kind="function" protection="public" virtualness="non" static="no">
            <type>void</type>
            <name>postHemiFilterChanged</name>
            <anchorfile>kuesa-iro2alphaequirectproperties.html</anchorfile>
            <anchor>postHemiFilter-prop</anchor>
            <arglist>(QVector3D )</arglist>
        </member>
        <member kind="function" protection="public" virtualness="non" static="no">
            <type>void</type>
            <name>postGainChanged</name>
            <anchorfile>kuesa-iro2alphaequirectproperties.html</anchorfile>
            <anchor>postGain-prop</anchor>
            <arglist>(float )</arglist>
        </member>
        <member kind="function" protection="public" virtualness="non" static="no">
            <type>void</type>
            <name>gltfYUpChanged</name>
            <anchorfile>kuesa-iro2alphaequirectproperties.html</anchorfile>
            <anchor>gltfYUp-prop</anchor>
            <arglist>(bool )</arglist>
        </member>
    </compound>
    <compound kind="class">
        <name>Kuesa::Iro2AlphaSemEffect</name>
        <filename>kuesa-iro2alphasemeffect.html</filename>
        <base>GLTF2MaterialEffect</base>
    </compound>
    <compound kind="class">
        <name>Kuesa::Iro2AlphaSemMaterial</name>
        <filename>kuesa-iro2alphasemmaterial.html</filename>
        <base>GLTF2Material</base>
        <member kind="property" type="Kuesa::Iro2AlphaSemProperties*">
            <name>materialProperties</name>
            <anchorfile>kuesa-iro2alphasemmaterial.html</anchorfile>
            <anchor>materialProperties-prop</anchor>
            <arglist></arglist>
        </member>
        <member kind="function" protection="public" virtualness="non" static="no">
            <type>Kuesa::Iro2AlphaSemProperties *</type>
            <name>materialProperties</name>
            <anchorfile>kuesa-iro2alphasemmaterial.html</anchorfile>
            <anchor>materialProperties-prop</anchor>
            <arglist>() const const</arglist>
        </member>
        <member kind="function" protection="public" virtualness="non" static="no">
            <type>void</type>
            <name>setMaterialProperties</name>
            <anchorfile>kuesa-iro2alphasemmaterial.html</anchorfile>
            <anchor>materialProperties-prop</anchor>
            <arglist>(Kuesa::Iro2AlphaSemProperties *materialProperties)</arglist>
        </member>
        <member kind="function" protection="public" virtualness="non" static="no">
            <type>void</type>
            <name>setMaterialProperties</name>
            <anchorfile>kuesa-iro2alphasemmaterial.html</anchorfile>
            <anchor>materialProperties-prop</anchor>
            <arglist>(Kuesa::GLTF2MaterialProperties *materialProperties)</arglist>
        </member>
        <member kind="function" protection="public" virtualness="non" static="no">
            <type>void</type>
            <name>materialPropertiesChanged</name>
            <anchorfile>kuesa-iro2alphasemmaterial.html</anchorfile>
            <anchor>materialProperties-prop</anchor>
            <arglist>(Kuesa::Iro2AlphaSemProperties *materialProperties)</arglist>
        </member>
    </compound>
    <compound kind="class">
        <name>Kuesa::Iro2AlphaSemProperties</name>
        <filename>kuesa-iro2alphasemproperties.html</filename>
        <base>GLTF2MaterialProperties</base>
        <member kind="property" type="bool">
            <name>usesReflectionMap</name>
            <anchorfile>kuesa-iro2alphasemproperties.html</anchorfile>
            <anchor>usesReflectionMap-prop</anchor>
            <arglist></arglist>
        </member>
        <member kind="property" type="float">
            <name>reflectionGain</name>
            <anchorfile>kuesa-iro2alphasemproperties.html</anchorfile>
            <anchor>reflectionGain-prop</anchor>
            <arglist></arglist>
        </member>
        <member kind="property" type="QVector3D">
            <name>reflectionInnerFilter</name>
            <anchorfile>kuesa-iro2alphasemproperties.html</anchorfile>
            <anchor>reflectionInnerFilter-prop</anchor>
            <arglist></arglist>
        </member>
        <member kind="property" type="QVector3D">
            <name>reflectionOuterFilter</name>
            <anchorfile>kuesa-iro2alphasemproperties.html</anchorfile>
            <anchor>reflectionOuterFilter-prop</anchor>
            <arglist></arglist>
        </member>
        <member kind="property" type="float">
            <name>innerAlpha</name>
            <anchorfile>kuesa-iro2alphasemproperties.html</anchorfile>
            <anchor>innerAlpha-prop</anchor>
            <arglist></arglist>
        </member>
        <member kind="property" type="float">
            <name>outerAlpha</name>
            <anchorfile>kuesa-iro2alphasemproperties.html</anchorfile>
            <anchor>outerAlpha-prop</anchor>
            <arglist></arglist>
        </member>
        <member kind="property" type="float">
            <name>alphaGain</name>
            <anchorfile>kuesa-iro2alphasemproperties.html</anchorfile>
            <anchor>alphaGain-prop</anchor>
            <arglist></arglist>
        </member>
        <member kind="property" type="bool">
            <name>usesNormalMap</name>
            <anchorfile>kuesa-iro2alphasemproperties.html</anchorfile>
            <anchor>usesNormalMap-prop</anchor>
            <arglist></arglist>
        </member>
        <member kind="property" type="float">
            <name>normalMapGain</name>
            <anchorfile>kuesa-iro2alphasemproperties.html</anchorfile>
            <anchor>normalMapGain-prop</anchor>
            <arglist></arglist>
        </member>
        <member kind="property" type="QVector3D">
            <name>normalScaling</name>
            <anchorfile>kuesa-iro2alphasemproperties.html</anchorfile>
            <anchor>normalScaling-prop</anchor>
            <arglist></arglist>
        </member>
        <member kind="property" type="QVector2D">
            <name>normalDisturb</name>
            <anchorfile>kuesa-iro2alphasemproperties.html</anchorfile>
            <anchor>normalDisturb-prop</anchor>
            <arglist></arglist>
        </member>
        <member kind="property" type="float">
            <name>postVertexColor</name>
            <anchorfile>kuesa-iro2alphasemproperties.html</anchorfile>
            <anchor>postVertexColor-prop</anchor>
            <arglist></arglist>
        </member>
        <member kind="property" type="QVector3D">
            <name>postHemiFilter</name>
            <anchorfile>kuesa-iro2alphasemproperties.html</anchorfile>
            <anchor>postHemiFilter-prop</anchor>
            <arglist></arglist>
        </member>
        <member kind="property" type="float">
            <name>postGain</name>
            <anchorfile>kuesa-iro2alphasemproperties.html</anchorfile>
            <anchor>postGain-prop</anchor>
            <arglist></arglist>
        </member>
        <member kind="property" type="bool">
            <name>gltfYUp</name>
            <anchorfile>kuesa-iro2alphasemproperties.html</anchorfile>
            <anchor>gltfYUp-prop</anchor>
            <arglist></arglist>
        </member>
        <member kind="function" protection="public" virtualness="non" static="no">
            <type>bool</type>
            <name>usesReflectionMap</name>
            <anchorfile>kuesa-iro2alphasemproperties.html</anchorfile>
            <anchor>usesReflectionMap-prop</anchor>
            <arglist>() const const</arglist>
        </member>
        <member kind="function" protection="public" virtualness="non" static="no">
            <type>Qt3DRender::QAbstractTexture *</type>
            <name>reflectionMap</name>
            <anchorfile>kuesa-iro2alphasemproperties.html</anchorfile>
            <anchor>reflectionMap-prop</anchor>
            <arglist>() const const</arglist>
        </member>
        <member kind="function" protection="public" virtualness="non" static="no">
            <type>float</type>
            <name>reflectionGain</name>
            <anchorfile>kuesa-iro2alphasemproperties.html</anchorfile>
            <anchor>reflectionGain-prop</anchor>
            <arglist>() const const</arglist>
        </member>
        <member kind="function" protection="public" virtualness="non" static="no">
            <type>QVector3D</type>
            <name>reflectionInnerFilter</name>
            <anchorfile>kuesa-iro2alphasemproperties.html</anchorfile>
            <anchor>reflectionInnerFilter-prop</anchor>
            <arglist>() const const</arglist>
        </member>
        <member kind="function" protection="public" virtualness="non" static="no">
            <type>QVector3D</type>
            <name>reflectionOuterFilter</name>
            <anchorfile>kuesa-iro2alphasemproperties.html</anchorfile>
            <anchor>reflectionOuterFilter-prop</anchor>
            <arglist>() const const</arglist>
        </member>
        <member kind="function" protection="public" virtualness="non" static="no">
            <type>float</type>
            <name>innerAlpha</name>
            <anchorfile>kuesa-iro2alphasemproperties.html</anchorfile>
            <anchor>innerAlpha-prop</anchor>
            <arglist>() const const</arglist>
        </member>
        <member kind="function" protection="public" virtualness="non" static="no">
            <type>float</type>
            <name>outerAlpha</name>
            <anchorfile>kuesa-iro2alphasemproperties.html</anchorfile>
            <anchor>outerAlpha-prop</anchor>
            <arglist>() const const</arglist>
        </member>
        <member kind="function" protection="public" virtualness="non" static="no">
            <type>float</type>
            <name>alphaGain</name>
            <anchorfile>kuesa-iro2alphasemproperties.html</anchorfile>
            <anchor>alphaGain-prop</anchor>
            <arglist>() const const</arglist>
        </member>
        <member kind="function" protection="public" virtualness="non" static="no">
            <type>bool</type>
            <name>usesNormalMap</name>
            <anchorfile>kuesa-iro2alphasemproperties.html</anchorfile>
            <anchor>usesNormalMap-prop</anchor>
            <arglist>() const const</arglist>
        </member>
        <member kind="function" protection="public" virtualness="non" static="no">
            <type>Qt3DRender::QAbstractTexture *</type>
            <name>normalMap</name>
            <anchorfile>kuesa-iro2alphasemproperties.html</anchorfile>
            <anchor>normalMap-prop</anchor>
            <arglist>() const const</arglist>
        </member>
        <member kind="function" protection="public" virtualness="non" static="no">
            <type>float</type>
            <name>normalMapGain</name>
            <anchorfile>kuesa-iro2alphasemproperties.html</anchorfile>
            <anchor>normalMapGain-prop</anchor>
            <arglist>() const const</arglist>
        </member>
        <member kind="function" protection="public" virtualness="non" static="no">
            <type>QVector3D</type>
            <name>normalScaling</name>
            <anchorfile>kuesa-iro2alphasemproperties.html</anchorfile>
            <anchor>normalScaling-prop</anchor>
            <arglist>() const const</arglist>
        </member>
        <member kind="function" protection="public" virtualness="non" static="no">
            <type>QVector2D</type>
            <name>normalDisturb</name>
            <anchorfile>kuesa-iro2alphasemproperties.html</anchorfile>
            <anchor>normalDisturb-prop</anchor>
            <arglist>() const const</arglist>
        </member>
        <member kind="function" protection="public" virtualness="non" static="no">
            <type>float</type>
            <name>postVertexColor</name>
            <anchorfile>kuesa-iro2alphasemproperties.html</anchorfile>
            <anchor>postVertexColor-prop</anchor>
            <arglist>() const const</arglist>
        </member>
        <member kind="function" protection="public" virtualness="non" static="no">
            <type>QVector3D</type>
            <name>postHemiFilter</name>
            <anchorfile>kuesa-iro2alphasemproperties.html</anchorfile>
            <anchor>postHemiFilter-prop</anchor>
            <arglist>() const const</arglist>
        </member>
        <member kind="function" protection="public" virtualness="non" static="no">
            <type>float</type>
            <name>postGain</name>
            <anchorfile>kuesa-iro2alphasemproperties.html</anchorfile>
            <anchor>postGain-prop</anchor>
            <arglist>() const const</arglist>
        </member>
        <member kind="function" protection="public" virtualness="non" static="no">
            <type>bool</type>
            <name>gltfYUp</name>
            <anchorfile>kuesa-iro2alphasemproperties.html</anchorfile>
            <anchor>gltfYUp-prop</anchor>
            <arglist>() const const</arglist>
        </member>
        <member kind="function" protection="public" virtualness="non" static="no">
            <type>void</type>
            <name>setUsesReflectionMap</name>
            <anchorfile>kuesa-iro2alphasemproperties.html</anchorfile>
            <anchor>usesReflectionMap-prop</anchor>
            <arglist>(bool usesReflectionMap)</arglist>
        </member>
        <member kind="function" protection="public" virtualness="non" static="no">
            <type>void</type>
            <name>setReflectionMap</name>
            <anchorfile>kuesa-iro2alphasemproperties.html</anchorfile>
            <anchor>reflectionMap-prop</anchor>
            <arglist>(Qt3DRender::QAbstractTexture *reflectionMap)</arglist>
        </member>
        <member kind="function" protection="public" virtualness="non" static="no">
            <type>void</type>
            <name>setReflectionGain</name>
            <anchorfile>kuesa-iro2alphasemproperties.html</anchorfile>
            <anchor>reflectionGain-prop</anchor>
            <arglist>(float reflectionGain)</arglist>
        </member>
        <member kind="function" protection="public" virtualness="non" static="no">
            <type>void</type>
            <name>setReflectionInnerFilter</name>
            <anchorfile>kuesa-iro2alphasemproperties.html</anchorfile>
            <anchor>reflectionInnerFilter-prop</anchor>
            <arglist>(const QVector3D &amp;reflectionInnerFilter)</arglist>
        </member>
        <member kind="function" protection="public" virtualness="non" static="no">
            <type>void</type>
            <name>setReflectionOuterFilter</name>
            <anchorfile>kuesa-iro2alphasemproperties.html</anchorfile>
            <anchor>reflectionOuterFilter-prop</anchor>
            <arglist>(const QVector3D &amp;reflectionOuterFilter)</arglist>
        </member>
        <member kind="function" protection="public" virtualness="non" static="no">
            <type>void</type>
            <name>setInnerAlpha</name>
            <anchorfile>kuesa-iro2alphasemproperties.html</anchorfile>
            <anchor>innerAlpha-prop</anchor>
            <arglist>(float innerAlpha)</arglist>
        </member>
        <member kind="function" protection="public" virtualness="non" static="no">
            <type>void</type>
            <name>setOuterAlpha</name>
            <anchorfile>kuesa-iro2alphasemproperties.html</anchorfile>
            <anchor>outerAlpha-prop</anchor>
            <arglist>(float outerAlpha)</arglist>
        </member>
        <member kind="function" protection="public" virtualness="non" static="no">
            <type>void</type>
            <name>setAlphaGain</name>
            <anchorfile>kuesa-iro2alphasemproperties.html</anchorfile>
            <anchor>alphaGain-prop</anchor>
            <arglist>(float alphaGain)</arglist>
        </member>
        <member kind="function" protection="public" virtualness="non" static="no">
            <type>void</type>
            <name>setUsesNormalMap</name>
            <anchorfile>kuesa-iro2alphasemproperties.html</anchorfile>
            <anchor>usesNormalMap-prop</anchor>
            <arglist>(bool usesNormalMap)</arglist>
        </member>
        <member kind="function" protection="public" virtualness="non" static="no">
            <type>void</type>
            <name>setNormalMap</name>
            <anchorfile>kuesa-iro2alphasemproperties.html</anchorfile>
            <anchor>normalMap-prop</anchor>
            <arglist>(Qt3DRender::QAbstractTexture *normalMap)</arglist>
        </member>
        <member kind="function" protection="public" virtualness="non" static="no">
            <type>void</type>
            <name>setNormalMapGain</name>
            <anchorfile>kuesa-iro2alphasemproperties.html</anchorfile>
            <anchor>normalMapGain-prop</anchor>
            <arglist>(float normalMapGain)</arglist>
        </member>
        <member kind="function" protection="public" virtualness="non" static="no">
            <type>void</type>
            <name>setNormalScaling</name>
            <anchorfile>kuesa-iro2alphasemproperties.html</anchorfile>
            <anchor>normalScaling-prop</anchor>
            <arglist>(const QVector3D &amp;normalScaling)</arglist>
        </member>
        <member kind="function" protection="public" virtualness="non" static="no">
            <type>void</type>
            <name>setNormalDisturb</name>
            <anchorfile>kuesa-iro2alphasemproperties.html</anchorfile>
            <anchor>normalDisturb-prop</anchor>
            <arglist>(const QVector2D &amp;normalDisturb)</arglist>
        </member>
        <member kind="function" protection="public" virtualness="non" static="no">
            <type>void</type>
            <name>setPostVertexColor</name>
            <anchorfile>kuesa-iro2alphasemproperties.html</anchorfile>
            <anchor>postVertexColor-prop</anchor>
            <arglist>(float postVertexColor)</arglist>
        </member>
        <member kind="function" protection="public" virtualness="non" static="no">
            <type>void</type>
            <name>setPostHemiFilter</name>
            <anchorfile>kuesa-iro2alphasemproperties.html</anchorfile>
            <anchor>postHemiFilter-prop</anchor>
            <arglist>(const QVector3D &amp;postHemiFilter)</arglist>
        </member>
        <member kind="function" protection="public" virtualness="non" static="no">
            <type>void</type>
            <name>setPostGain</name>
            <anchorfile>kuesa-iro2alphasemproperties.html</anchorfile>
            <anchor>postGain-prop</anchor>
            <arglist>(float postGain)</arglist>
        </member>
        <member kind="function" protection="public" virtualness="non" static="no">
            <type>void</type>
            <name>setGltfYUp</name>
            <anchorfile>kuesa-iro2alphasemproperties.html</anchorfile>
            <anchor>gltfYUp-prop</anchor>
            <arglist>(bool gltfYUp)</arglist>
        </member>
        <member kind="function" protection="public" virtualness="non" static="no">
            <type>void</type>
            <name>usesReflectionMapChanged</name>
            <anchorfile>kuesa-iro2alphasemproperties.html</anchorfile>
            <anchor>usesReflectionMap-prop</anchor>
            <arglist>(bool )</arglist>
        </member>
        <member kind="function" protection="public" virtualness="non" static="no">
            <type>void</type>
            <name>reflectionMapChanged</name>
            <anchorfile>kuesa-iro2alphasemproperties.html</anchorfile>
            <anchor>reflectionMap-prop</anchor>
            <arglist>(Qt3DRender::QAbstractTexture *)</arglist>
        </member>
        <member kind="function" protection="public" virtualness="non" static="no">
            <type>void</type>
            <name>reflectionGainChanged</name>
            <anchorfile>kuesa-iro2alphasemproperties.html</anchorfile>
            <anchor>reflectionGain-prop</anchor>
            <arglist>(float )</arglist>
        </member>
        <member kind="function" protection="public" virtualness="non" static="no">
            <type>void</type>
            <name>reflectionInnerFilterChanged</name>
            <anchorfile>kuesa-iro2alphasemproperties.html</anchorfile>
            <anchor>reflectionInnerFilter-prop</anchor>
            <arglist>(QVector3D )</arglist>
        </member>
        <member kind="function" protection="public" virtualness="non" static="no">
            <type>void</type>
            <name>reflectionOuterFilterChanged</name>
            <anchorfile>kuesa-iro2alphasemproperties.html</anchorfile>
            <anchor>reflectionOuterFilter-prop</anchor>
            <arglist>(QVector3D )</arglist>
        </member>
        <member kind="function" protection="public" virtualness="non" static="no">
            <type>void</type>
            <name>innerAlphaChanged</name>
            <anchorfile>kuesa-iro2alphasemproperties.html</anchorfile>
            <anchor>innerAlpha-prop</anchor>
            <arglist>(float )</arglist>
        </member>
        <member kind="function" protection="public" virtualness="non" static="no">
            <type>void</type>
            <name>outerAlphaChanged</name>
            <anchorfile>kuesa-iro2alphasemproperties.html</anchorfile>
            <anchor>outerAlpha-prop</anchor>
            <arglist>(float )</arglist>
        </member>
        <member kind="function" protection="public" virtualness="non" static="no">
            <type>void</type>
            <name>alphaGainChanged</name>
            <anchorfile>kuesa-iro2alphasemproperties.html</anchorfile>
            <anchor>alphaGain-prop</anchor>
            <arglist>(float )</arglist>
        </member>
        <member kind="function" protection="public" virtualness="non" static="no">
            <type>void</type>
            <name>usesNormalMapChanged</name>
            <anchorfile>kuesa-iro2alphasemproperties.html</anchorfile>
            <anchor>usesNormalMap-prop</anchor>
            <arglist>(bool )</arglist>
        </member>
        <member kind="function" protection="public" virtualness="non" static="no">
            <type>void</type>
            <name>normalMapChanged</name>
            <anchorfile>kuesa-iro2alphasemproperties.html</anchorfile>
            <anchor>normalMap-prop</anchor>
            <arglist>(Qt3DRender::QAbstractTexture *)</arglist>
        </member>
        <member kind="function" protection="public" virtualness="non" static="no">
            <type>void</type>
            <name>normalMapGainChanged</name>
            <anchorfile>kuesa-iro2alphasemproperties.html</anchorfile>
            <anchor>normalMapGain-prop</anchor>
            <arglist>(float )</arglist>
        </member>
        <member kind="function" protection="public" virtualness="non" static="no">
            <type>void</type>
            <name>normalScalingChanged</name>
            <anchorfile>kuesa-iro2alphasemproperties.html</anchorfile>
            <anchor>normalScaling-prop</anchor>
            <arglist>(QVector3D )</arglist>
        </member>
        <member kind="function" protection="public" virtualness="non" static="no">
            <type>void</type>
            <name>normalDisturbChanged</name>
            <anchorfile>kuesa-iro2alphasemproperties.html</anchorfile>
            <anchor>normalDisturb-prop</anchor>
            <arglist>(QVector2D )</arglist>
        </member>
        <member kind="function" protection="public" virtualness="non" static="no">
            <type>void</type>
            <name>postVertexColorChanged</name>
            <anchorfile>kuesa-iro2alphasemproperties.html</anchorfile>
            <anchor>postVertexColor-prop</anchor>
            <arglist>(float )</arglist>
        </member>
        <member kind="function" protection="public" virtualness="non" static="no">
            <type>void</type>
            <name>postHemiFilterChanged</name>
            <anchorfile>kuesa-iro2alphasemproperties.html</anchorfile>
            <anchor>postHemiFilter-prop</anchor>
            <arglist>(QVector3D )</arglist>
        </member>
        <member kind="function" protection="public" virtualness="non" static="no">
            <type>void</type>
            <name>postGainChanged</name>
            <anchorfile>kuesa-iro2alphasemproperties.html</anchorfile>
            <anchor>postGain-prop</anchor>
            <arglist>(float )</arglist>
        </member>
        <member kind="function" protection="public" virtualness="non" static="no">
            <type>void</type>
            <name>gltfYUpChanged</name>
            <anchorfile>kuesa-iro2alphasemproperties.html</anchorfile>
            <anchor>gltfYUp-prop</anchor>
            <arglist>(bool )</arglist>
        </member>
    </compound>
    <compound kind="class">
        <name>Kuesa::Iro2DiffuseEquiRectEffect</name>
        <filename>kuesa-iro2diffuseequirecteffect.html</filename>
        <base>GLTF2MaterialEffect</base>
    </compound>
    <compound kind="class">
        <name>Kuesa::Iro2DiffuseEquiRectMaterial</name>
        <filename>kuesa-iro2diffuseequirectmaterial.html</filename>
        <base>GLTF2Material</base>
        <member kind="property" type="Kuesa::Iro2DiffuseEquiRectProperties*">
            <name>materialProperties</name>
            <anchorfile>kuesa-iro2diffuseequirectmaterial.html</anchorfile>
            <anchor>materialProperties-prop</anchor>
            <arglist></arglist>
        </member>
        <member kind="function" protection="public" virtualness="non" static="no">
            <type>Kuesa::Iro2DiffuseEquiRectProperties *</type>
            <name>materialProperties</name>
            <anchorfile>kuesa-iro2diffuseequirectmaterial.html</anchorfile>
            <anchor>materialProperties-prop</anchor>
            <arglist>() const const</arglist>
        </member>
        <member kind="function" protection="public" virtualness="non" static="no">
            <type>void</type>
            <name>setMaterialProperties</name>
            <anchorfile>kuesa-iro2diffuseequirectmaterial.html</anchorfile>
            <anchor>materialProperties-prop</anchor>
            <arglist>(Kuesa::Iro2DiffuseEquiRectProperties *materialProperties)</arglist>
        </member>
        <member kind="function" protection="public" virtualness="non" static="no">
            <type>void</type>
            <name>setMaterialProperties</name>
            <anchorfile>kuesa-iro2diffuseequirectmaterial.html</anchorfile>
            <anchor>materialProperties-prop</anchor>
            <arglist>(Kuesa::GLTF2MaterialProperties *materialProperties)</arglist>
        </member>
        <member kind="function" protection="public" virtualness="non" static="no">
            <type>void</type>
            <name>materialPropertiesChanged</name>
            <anchorfile>kuesa-iro2diffuseequirectmaterial.html</anchorfile>
            <anchor>materialProperties-prop</anchor>
            <arglist>(Kuesa::Iro2DiffuseEquiRectProperties *materialProperties)</arglist>
        </member>
    </compound>
    <compound kind="class">
        <name>Kuesa::Iro2DiffuseEquiRectProperties</name>
        <filename>kuesa-iro2diffuseequirectproperties.html</filename>
        <base>GLTF2MaterialProperties</base>
        <member kind="property" type="bool">
            <name>usesDiffuseMap</name>
            <anchorfile>kuesa-iro2diffuseequirectproperties.html</anchorfile>
            <anchor>usesDiffuseMap-prop</anchor>
            <arglist></arglist>
        </member>
        <member kind="property" type="float">
            <name>diffuseGain</name>
            <anchorfile>kuesa-iro2diffuseequirectproperties.html</anchorfile>
            <anchor>diffuseGain-prop</anchor>
            <arglist></arglist>
        </member>
        <member kind="property" type="QVector3D">
            <name>diffuseInnerFilter</name>
            <anchorfile>kuesa-iro2diffuseequirectproperties.html</anchorfile>
            <anchor>diffuseInnerFilter-prop</anchor>
            <arglist></arglist>
        </member>
        <member kind="property" type="QVector3D">
            <name>diffuseOuterFilter</name>
            <anchorfile>kuesa-iro2diffuseequirectproperties.html</anchorfile>
            <anchor>diffuseOuterFilter-prop</anchor>
            <arglist></arglist>
        </member>
        <member kind="property" type="bool">
            <name>usesReflectionMap</name>
            <anchorfile>kuesa-iro2diffuseequirectproperties.html</anchorfile>
            <anchor>usesReflectionMap-prop</anchor>
            <arglist></arglist>
        </member>
        <member kind="property" type="float">
            <name>reflectionGain</name>
            <anchorfile>kuesa-iro2diffuseequirectproperties.html</anchorfile>
            <anchor>reflectionGain-prop</anchor>
            <arglist></arglist>
        </member>
        <member kind="property" type="QVector3D">
            <name>reflectionInnerFilter</name>
            <anchorfile>kuesa-iro2diffuseequirectproperties.html</anchorfile>
            <anchor>reflectionInnerFilter-prop</anchor>
            <arglist></arglist>
        </member>
        <member kind="property" type="QVector3D">
            <name>reflectionOuterFilter</name>
            <anchorfile>kuesa-iro2diffuseequirectproperties.html</anchorfile>
            <anchor>reflectionOuterFilter-prop</anchor>
            <arglist></arglist>
        </member>
        <member kind="property" type="bool">
            <name>usesNormalMap</name>
            <anchorfile>kuesa-iro2diffuseequirectproperties.html</anchorfile>
            <anchor>usesNormalMap-prop</anchor>
            <arglist></arglist>
        </member>
        <member kind="property" type="float">
            <name>normalMapGain</name>
            <anchorfile>kuesa-iro2diffuseequirectproperties.html</anchorfile>
            <anchor>normalMapGain-prop</anchor>
            <arglist></arglist>
        </member>
        <member kind="property" type="QVector3D">
            <name>normalScaling</name>
            <anchorfile>kuesa-iro2diffuseequirectproperties.html</anchorfile>
            <anchor>normalScaling-prop</anchor>
            <arglist></arglist>
        </member>
        <member kind="property" type="QVector2D">
            <name>normalDisturb</name>
            <anchorfile>kuesa-iro2diffuseequirectproperties.html</anchorfile>
            <anchor>normalDisturb-prop</anchor>
            <arglist></arglist>
        </member>
        <member kind="property" type="float">
            <name>postVertexColor</name>
            <anchorfile>kuesa-iro2diffuseequirectproperties.html</anchorfile>
            <anchor>postVertexColor-prop</anchor>
            <arglist></arglist>
        </member>
        <member kind="property" type="QVector3D">
            <name>postHemiFilter</name>
            <anchorfile>kuesa-iro2diffuseequirectproperties.html</anchorfile>
            <anchor>postHemiFilter-prop</anchor>
            <arglist></arglist>
        </member>
        <member kind="property" type="float">
            <name>postGain</name>
            <anchorfile>kuesa-iro2diffuseequirectproperties.html</anchorfile>
            <anchor>postGain-prop</anchor>
            <arglist></arglist>
        </member>
        <member kind="property" type="bool">
            <name>gltfYUp</name>
            <anchorfile>kuesa-iro2diffuseequirectproperties.html</anchorfile>
            <anchor>gltfYUp-prop</anchor>
            <arglist></arglist>
        </member>
        <member kind="function" protection="public" virtualness="non" static="no">
            <type>bool</type>
            <name>usesDiffuseMap</name>
            <anchorfile>kuesa-iro2diffuseequirectproperties.html</anchorfile>
            <anchor>usesDiffuseMap-prop</anchor>
            <arglist>() const const</arglist>
        </member>
        <member kind="function" protection="public" virtualness="non" static="no">
            <type>Qt3DRender::QAbstractTexture *</type>
            <name>diffuseMap</name>
            <anchorfile>kuesa-iro2diffuseequirectproperties.html</anchorfile>
            <anchor>diffuseMap-prop</anchor>
            <arglist>() const const</arglist>
        </member>
        <member kind="function" protection="public" virtualness="non" static="no">
            <type>float</type>
            <name>diffuseGain</name>
            <anchorfile>kuesa-iro2diffuseequirectproperties.html</anchorfile>
            <anchor>diffuseGain-prop</anchor>
            <arglist>() const const</arglist>
        </member>
        <member kind="function" protection="public" virtualness="non" static="no">
            <type>QVector3D</type>
            <name>diffuseInnerFilter</name>
            <anchorfile>kuesa-iro2diffuseequirectproperties.html</anchorfile>
            <anchor>diffuseInnerFilter-prop</anchor>
            <arglist>() const const</arglist>
        </member>
        <member kind="function" protection="public" virtualness="non" static="no">
            <type>QVector3D</type>
            <name>diffuseOuterFilter</name>
            <anchorfile>kuesa-iro2diffuseequirectproperties.html</anchorfile>
            <anchor>diffuseOuterFilter-prop</anchor>
            <arglist>() const const</arglist>
        </member>
        <member kind="function" protection="public" virtualness="non" static="no">
            <type>bool</type>
            <name>usesReflectionMap</name>
            <anchorfile>kuesa-iro2diffuseequirectproperties.html</anchorfile>
            <anchor>usesReflectionMap-prop</anchor>
            <arglist>() const const</arglist>
        </member>
        <member kind="function" protection="public" virtualness="non" static="no">
            <type>Qt3DRender::QAbstractTexture *</type>
            <name>reflectionMap</name>
            <anchorfile>kuesa-iro2diffuseequirectproperties.html</anchorfile>
            <anchor>reflectionMap-prop</anchor>
            <arglist>() const const</arglist>
        </member>
        <member kind="function" protection="public" virtualness="non" static="no">
            <type>float</type>
            <name>reflectionGain</name>
            <anchorfile>kuesa-iro2diffuseequirectproperties.html</anchorfile>
            <anchor>reflectionGain-prop</anchor>
            <arglist>() const const</arglist>
        </member>
        <member kind="function" protection="public" virtualness="non" static="no">
            <type>QVector3D</type>
            <name>reflectionInnerFilter</name>
            <anchorfile>kuesa-iro2diffuseequirectproperties.html</anchorfile>
            <anchor>reflectionInnerFilter-prop</anchor>
            <arglist>() const const</arglist>
        </member>
        <member kind="function" protection="public" virtualness="non" static="no">
            <type>QVector3D</type>
            <name>reflectionOuterFilter</name>
            <anchorfile>kuesa-iro2diffuseequirectproperties.html</anchorfile>
            <anchor>reflectionOuterFilter-prop</anchor>
            <arglist>() const const</arglist>
        </member>
        <member kind="function" protection="public" virtualness="non" static="no">
            <type>bool</type>
            <name>usesNormalMap</name>
            <anchorfile>kuesa-iro2diffuseequirectproperties.html</anchorfile>
            <anchor>usesNormalMap-prop</anchor>
            <arglist>() const const</arglist>
        </member>
        <member kind="function" protection="public" virtualness="non" static="no">
            <type>Qt3DRender::QAbstractTexture *</type>
            <name>normalMap</name>
            <anchorfile>kuesa-iro2diffuseequirectproperties.html</anchorfile>
            <anchor>normalMap-prop</anchor>
            <arglist>() const const</arglist>
        </member>
        <member kind="function" protection="public" virtualness="non" static="no">
            <type>float</type>
            <name>normalMapGain</name>
            <anchorfile>kuesa-iro2diffuseequirectproperties.html</anchorfile>
            <anchor>normalMapGain-prop</anchor>
            <arglist>() const const</arglist>
        </member>
        <member kind="function" protection="public" virtualness="non" static="no">
            <type>QVector3D</type>
            <name>normalScaling</name>
            <anchorfile>kuesa-iro2diffuseequirectproperties.html</anchorfile>
            <anchor>normalScaling-prop</anchor>
            <arglist>() const const</arglist>
        </member>
        <member kind="function" protection="public" virtualness="non" static="no">
            <type>QVector2D</type>
            <name>normalDisturb</name>
            <anchorfile>kuesa-iro2diffuseequirectproperties.html</anchorfile>
            <anchor>normalDisturb-prop</anchor>
            <arglist>() const const</arglist>
        </member>
        <member kind="function" protection="public" virtualness="non" static="no">
            <type>float</type>
            <name>postVertexColor</name>
            <anchorfile>kuesa-iro2diffuseequirectproperties.html</anchorfile>
            <anchor>postVertexColor-prop</anchor>
            <arglist>() const const</arglist>
        </member>
        <member kind="function" protection="public" virtualness="non" static="no">
            <type>QVector3D</type>
            <name>postHemiFilter</name>
            <anchorfile>kuesa-iro2diffuseequirectproperties.html</anchorfile>
            <anchor>postHemiFilter-prop</anchor>
            <arglist>() const const</arglist>
        </member>
        <member kind="function" protection="public" virtualness="non" static="no">
            <type>float</type>
            <name>postGain</name>
            <anchorfile>kuesa-iro2diffuseequirectproperties.html</anchorfile>
            <anchor>postGain-prop</anchor>
            <arglist>() const const</arglist>
        </member>
        <member kind="function" protection="public" virtualness="non" static="no">
            <type>bool</type>
            <name>gltfYUp</name>
            <anchorfile>kuesa-iro2diffuseequirectproperties.html</anchorfile>
            <anchor>gltfYUp-prop</anchor>
            <arglist>() const const</arglist>
        </member>
        <member kind="function" protection="public" virtualness="non" static="no">
            <type>void</type>
            <name>setUsesDiffuseMap</name>
            <anchorfile>kuesa-iro2diffuseequirectproperties.html</anchorfile>
            <anchor>usesDiffuseMap-prop</anchor>
            <arglist>(bool usesDiffuseMap)</arglist>
        </member>
        <member kind="function" protection="public" virtualness="non" static="no">
            <type>void</type>
            <name>setDiffuseMap</name>
            <anchorfile>kuesa-iro2diffuseequirectproperties.html</anchorfile>
            <anchor>diffuseMap-prop</anchor>
            <arglist>(Qt3DRender::QAbstractTexture *diffuseMap)</arglist>
        </member>
        <member kind="function" protection="public" virtualness="non" static="no">
            <type>void</type>
            <name>setDiffuseGain</name>
            <anchorfile>kuesa-iro2diffuseequirectproperties.html</anchorfile>
            <anchor>diffuseGain-prop</anchor>
            <arglist>(float diffuseGain)</arglist>
        </member>
        <member kind="function" protection="public" virtualness="non" static="no">
            <type>void</type>
            <name>setDiffuseInnerFilter</name>
            <anchorfile>kuesa-iro2diffuseequirectproperties.html</anchorfile>
            <anchor>diffuseInnerFilter-prop</anchor>
            <arglist>(const QVector3D &amp;diffuseInnerFilter)</arglist>
        </member>
        <member kind="function" protection="public" virtualness="non" static="no">
            <type>void</type>
            <name>setDiffuseOuterFilter</name>
            <anchorfile>kuesa-iro2diffuseequirectproperties.html</anchorfile>
            <anchor>diffuseOuterFilter-prop</anchor>
            <arglist>(const QVector3D &amp;diffuseOuterFilter)</arglist>
        </member>
        <member kind="function" protection="public" virtualness="non" static="no">
            <type>void</type>
            <name>setUsesReflectionMap</name>
            <anchorfile>kuesa-iro2diffuseequirectproperties.html</anchorfile>
            <anchor>usesReflectionMap-prop</anchor>
            <arglist>(bool usesReflectionMap)</arglist>
        </member>
        <member kind="function" protection="public" virtualness="non" static="no">
            <type>void</type>
            <name>setReflectionMap</name>
            <anchorfile>kuesa-iro2diffuseequirectproperties.html</anchorfile>
            <anchor>reflectionMap-prop</anchor>
            <arglist>(Qt3DRender::QAbstractTexture *reflectionMap)</arglist>
        </member>
        <member kind="function" protection="public" virtualness="non" static="no">
            <type>void</type>
            <name>setReflectionGain</name>
            <anchorfile>kuesa-iro2diffuseequirectproperties.html</anchorfile>
            <anchor>reflectionGain-prop</anchor>
            <arglist>(float reflectionGain)</arglist>
        </member>
        <member kind="function" protection="public" virtualness="non" static="no">
            <type>void</type>
            <name>setReflectionInnerFilter</name>
            <anchorfile>kuesa-iro2diffuseequirectproperties.html</anchorfile>
            <anchor>reflectionInnerFilter-prop</anchor>
            <arglist>(const QVector3D &amp;reflectionInnerFilter)</arglist>
        </member>
        <member kind="function" protection="public" virtualness="non" static="no">
            <type>void</type>
            <name>setReflectionOuterFilter</name>
            <anchorfile>kuesa-iro2diffuseequirectproperties.html</anchorfile>
            <anchor>reflectionOuterFilter-prop</anchor>
            <arglist>(const QVector3D &amp;reflectionOuterFilter)</arglist>
        </member>
        <member kind="function" protection="public" virtualness="non" static="no">
            <type>void</type>
            <name>setUsesNormalMap</name>
            <anchorfile>kuesa-iro2diffuseequirectproperties.html</anchorfile>
            <anchor>usesNormalMap-prop</anchor>
            <arglist>(bool usesNormalMap)</arglist>
        </member>
        <member kind="function" protection="public" virtualness="non" static="no">
            <type>void</type>
            <name>setNormalMap</name>
            <anchorfile>kuesa-iro2diffuseequirectproperties.html</anchorfile>
            <anchor>normalMap-prop</anchor>
            <arglist>(Qt3DRender::QAbstractTexture *normalMap)</arglist>
        </member>
        <member kind="function" protection="public" virtualness="non" static="no">
            <type>void</type>
            <name>setNormalMapGain</name>
            <anchorfile>kuesa-iro2diffuseequirectproperties.html</anchorfile>
            <anchor>normalMapGain-prop</anchor>
            <arglist>(float normalMapGain)</arglist>
        </member>
        <member kind="function" protection="public" virtualness="non" static="no">
            <type>void</type>
            <name>setNormalScaling</name>
            <anchorfile>kuesa-iro2diffuseequirectproperties.html</anchorfile>
            <anchor>normalScaling-prop</anchor>
            <arglist>(const QVector3D &amp;normalScaling)</arglist>
        </member>
        <member kind="function" protection="public" virtualness="non" static="no">
            <type>void</type>
            <name>setNormalDisturb</name>
            <anchorfile>kuesa-iro2diffuseequirectproperties.html</anchorfile>
            <anchor>normalDisturb-prop</anchor>
            <arglist>(const QVector2D &amp;normalDisturb)</arglist>
        </member>
        <member kind="function" protection="public" virtualness="non" static="no">
            <type>void</type>
            <name>setPostVertexColor</name>
            <anchorfile>kuesa-iro2diffuseequirectproperties.html</anchorfile>
            <anchor>postVertexColor-prop</anchor>
            <arglist>(float postVertexColor)</arglist>
        </member>
        <member kind="function" protection="public" virtualness="non" static="no">
            <type>void</type>
            <name>setPostHemiFilter</name>
            <anchorfile>kuesa-iro2diffuseequirectproperties.html</anchorfile>
            <anchor>postHemiFilter-prop</anchor>
            <arglist>(const QVector3D &amp;postHemiFilter)</arglist>
        </member>
        <member kind="function" protection="public" virtualness="non" static="no">
            <type>void</type>
            <name>setPostGain</name>
            <anchorfile>kuesa-iro2diffuseequirectproperties.html</anchorfile>
            <anchor>postGain-prop</anchor>
            <arglist>(float postGain)</arglist>
        </member>
        <member kind="function" protection="public" virtualness="non" static="no">
            <type>void</type>
            <name>setGltfYUp</name>
            <anchorfile>kuesa-iro2diffuseequirectproperties.html</anchorfile>
            <anchor>gltfYUp-prop</anchor>
            <arglist>(bool gltfYUp)</arglist>
        </member>
        <member kind="function" protection="public" virtualness="non" static="no">
            <type>void</type>
            <name>usesDiffuseMapChanged</name>
            <anchorfile>kuesa-iro2diffuseequirectproperties.html</anchorfile>
            <anchor>usesDiffuseMap-prop</anchor>
            <arglist>(bool )</arglist>
        </member>
        <member kind="function" protection="public" virtualness="non" static="no">
            <type>void</type>
            <name>diffuseMapChanged</name>
            <anchorfile>kuesa-iro2diffuseequirectproperties.html</anchorfile>
            <anchor>diffuseMap-prop</anchor>
            <arglist>(Qt3DRender::QAbstractTexture *)</arglist>
        </member>
        <member kind="function" protection="public" virtualness="non" static="no">
            <type>void</type>
            <name>diffuseGainChanged</name>
            <anchorfile>kuesa-iro2diffuseequirectproperties.html</anchorfile>
            <anchor>diffuseGain-prop</anchor>
            <arglist>(float )</arglist>
        </member>
        <member kind="function" protection="public" virtualness="non" static="no">
            <type>void</type>
            <name>diffuseInnerFilterChanged</name>
            <anchorfile>kuesa-iro2diffuseequirectproperties.html</anchorfile>
            <anchor>diffuseInnerFilter-prop</anchor>
            <arglist>(QVector3D )</arglist>
        </member>
        <member kind="function" protection="public" virtualness="non" static="no">
            <type>void</type>
            <name>diffuseOuterFilterChanged</name>
            <anchorfile>kuesa-iro2diffuseequirectproperties.html</anchorfile>
            <anchor>diffuseOuterFilter-prop</anchor>
            <arglist>(QVector3D )</arglist>
        </member>
        <member kind="function" protection="public" virtualness="non" static="no">
            <type>void</type>
            <name>usesReflectionMapChanged</name>
            <anchorfile>kuesa-iro2diffuseequirectproperties.html</anchorfile>
            <anchor>usesReflectionMap-prop</anchor>
            <arglist>(bool )</arglist>
        </member>
        <member kind="function" protection="public" virtualness="non" static="no">
            <type>void</type>
            <name>reflectionMapChanged</name>
            <anchorfile>kuesa-iro2diffuseequirectproperties.html</anchorfile>
            <anchor>reflectionMap-prop</anchor>
            <arglist>(Qt3DRender::QAbstractTexture *)</arglist>
        </member>
        <member kind="function" protection="public" virtualness="non" static="no">
            <type>void</type>
            <name>reflectionGainChanged</name>
            <anchorfile>kuesa-iro2diffuseequirectproperties.html</anchorfile>
            <anchor>reflectionGain-prop</anchor>
            <arglist>(float )</arglist>
        </member>
        <member kind="function" protection="public" virtualness="non" static="no">
            <type>void</type>
            <name>reflectionInnerFilterChanged</name>
            <anchorfile>kuesa-iro2diffuseequirectproperties.html</anchorfile>
            <anchor>reflectionInnerFilter-prop</anchor>
            <arglist>(QVector3D )</arglist>
        </member>
        <member kind="function" protection="public" virtualness="non" static="no">
            <type>void</type>
            <name>reflectionOuterFilterChanged</name>
            <anchorfile>kuesa-iro2diffuseequirectproperties.html</anchorfile>
            <anchor>reflectionOuterFilter-prop</anchor>
            <arglist>(QVector3D )</arglist>
        </member>
        <member kind="function" protection="public" virtualness="non" static="no">
            <type>void</type>
            <name>usesNormalMapChanged</name>
            <anchorfile>kuesa-iro2diffuseequirectproperties.html</anchorfile>
            <anchor>usesNormalMap-prop</anchor>
            <arglist>(bool )</arglist>
        </member>
        <member kind="function" protection="public" virtualness="non" static="no">
            <type>void</type>
            <name>normalMapChanged</name>
            <anchorfile>kuesa-iro2diffuseequirectproperties.html</anchorfile>
            <anchor>normalMap-prop</anchor>
            <arglist>(Qt3DRender::QAbstractTexture *)</arglist>
        </member>
        <member kind="function" protection="public" virtualness="non" static="no">
            <type>void</type>
            <name>normalMapGainChanged</name>
            <anchorfile>kuesa-iro2diffuseequirectproperties.html</anchorfile>
            <anchor>normalMapGain-prop</anchor>
            <arglist>(float )</arglist>
        </member>
        <member kind="function" protection="public" virtualness="non" static="no">
            <type>void</type>
            <name>normalScalingChanged</name>
            <anchorfile>kuesa-iro2diffuseequirectproperties.html</anchorfile>
            <anchor>normalScaling-prop</anchor>
            <arglist>(QVector3D )</arglist>
        </member>
        <member kind="function" protection="public" virtualness="non" static="no">
            <type>void</type>
            <name>normalDisturbChanged</name>
            <anchorfile>kuesa-iro2diffuseequirectproperties.html</anchorfile>
            <anchor>normalDisturb-prop</anchor>
            <arglist>(QVector2D )</arglist>
        </member>
        <member kind="function" protection="public" virtualness="non" static="no">
            <type>void</type>
            <name>postVertexColorChanged</name>
            <anchorfile>kuesa-iro2diffuseequirectproperties.html</anchorfile>
            <anchor>postVertexColor-prop</anchor>
            <arglist>(float )</arglist>
        </member>
        <member kind="function" protection="public" virtualness="non" static="no">
            <type>void</type>
            <name>postHemiFilterChanged</name>
            <anchorfile>kuesa-iro2diffuseequirectproperties.html</anchorfile>
            <anchor>postHemiFilter-prop</anchor>
            <arglist>(QVector3D )</arglist>
        </member>
        <member kind="function" protection="public" virtualness="non" static="no">
            <type>void</type>
            <name>postGainChanged</name>
            <anchorfile>kuesa-iro2diffuseequirectproperties.html</anchorfile>
            <anchor>postGain-prop</anchor>
            <arglist>(float )</arglist>
        </member>
        <member kind="function" protection="public" virtualness="non" static="no">
            <type>void</type>
            <name>gltfYUpChanged</name>
            <anchorfile>kuesa-iro2diffuseequirectproperties.html</anchorfile>
            <anchor>gltfYUp-prop</anchor>
            <arglist>(bool )</arglist>
        </member>
    </compound>
    <compound kind="class">
        <name>Kuesa::Iro2DiffuseSemEffect</name>
        <filename>kuesa-iro2diffusesemeffect.html</filename>
        <base>GLTF2MaterialEffect</base>
    </compound>
    <compound kind="class">
        <name>Kuesa::Iro2DiffuseSemMaterial</name>
        <filename>kuesa-iro2diffusesemmaterial.html</filename>
        <base>GLTF2Material</base>
        <member kind="property" type="Kuesa::Iro2DiffuseSemProperties*">
            <name>materialProperties</name>
            <anchorfile>kuesa-iro2diffusesemmaterial.html</anchorfile>
            <anchor>materialProperties-prop</anchor>
            <arglist></arglist>
        </member>
        <member kind="function" protection="public" virtualness="non" static="no">
            <type>Kuesa::Iro2DiffuseSemProperties *</type>
            <name>materialProperties</name>
            <anchorfile>kuesa-iro2diffusesemmaterial.html</anchorfile>
            <anchor>materialProperties-prop</anchor>
            <arglist>() const const</arglist>
        </member>
        <member kind="function" protection="public" virtualness="non" static="no">
            <type>void</type>
            <name>setMaterialProperties</name>
            <anchorfile>kuesa-iro2diffusesemmaterial.html</anchorfile>
            <anchor>materialProperties-prop</anchor>
            <arglist>(Kuesa::Iro2DiffuseSemProperties *materialProperties)</arglist>
        </member>
        <member kind="function" protection="public" virtualness="non" static="no">
            <type>void</type>
            <name>setMaterialProperties</name>
            <anchorfile>kuesa-iro2diffusesemmaterial.html</anchorfile>
            <anchor>materialProperties-prop</anchor>
            <arglist>(Kuesa::GLTF2MaterialProperties *materialProperties)</arglist>
        </member>
        <member kind="function" protection="public" virtualness="non" static="no">
            <type>void</type>
            <name>materialPropertiesChanged</name>
            <anchorfile>kuesa-iro2diffusesemmaterial.html</anchorfile>
            <anchor>materialProperties-prop</anchor>
            <arglist>(Kuesa::Iro2DiffuseSemProperties *materialProperties)</arglist>
        </member>
    </compound>
    <compound kind="class">
        <name>Kuesa::Iro2DiffuseSemProperties</name>
        <filename>kuesa-iro2diffusesemproperties.html</filename>
        <base>GLTF2MaterialProperties</base>
        <member kind="property" type="bool">
            <name>usesDiffuseMap</name>
            <anchorfile>kuesa-iro2diffusesemproperties.html</anchorfile>
            <anchor>usesDiffuseMap-prop</anchor>
            <arglist></arglist>
        </member>
        <member kind="property" type="float">
            <name>diffuseGain</name>
            <anchorfile>kuesa-iro2diffusesemproperties.html</anchorfile>
            <anchor>diffuseGain-prop</anchor>
            <arglist></arglist>
        </member>
        <member kind="property" type="QVector3D">
            <name>diffuseInnerFilter</name>
            <anchorfile>kuesa-iro2diffusesemproperties.html</anchorfile>
            <anchor>diffuseInnerFilter-prop</anchor>
            <arglist></arglist>
        </member>
        <member kind="property" type="QVector3D">
            <name>diffuseOuterFilter</name>
            <anchorfile>kuesa-iro2diffusesemproperties.html</anchorfile>
            <anchor>diffuseOuterFilter-prop</anchor>
            <arglist></arglist>
        </member>
        <member kind="property" type="bool">
            <name>usesReflectionMap</name>
            <anchorfile>kuesa-iro2diffusesemproperties.html</anchorfile>
            <anchor>usesReflectionMap-prop</anchor>
            <arglist></arglist>
        </member>
        <member kind="property" type="float">
            <name>reflectionGain</name>
            <anchorfile>kuesa-iro2diffusesemproperties.html</anchorfile>
            <anchor>reflectionGain-prop</anchor>
            <arglist></arglist>
        </member>
        <member kind="property" type="QVector3D">
            <name>reflectionInnerFilter</name>
            <anchorfile>kuesa-iro2diffusesemproperties.html</anchorfile>
            <anchor>reflectionInnerFilter-prop</anchor>
            <arglist></arglist>
        </member>
        <member kind="property" type="QVector3D">
            <name>reflectionOuterFilter</name>
            <anchorfile>kuesa-iro2diffusesemproperties.html</anchorfile>
            <anchor>reflectionOuterFilter-prop</anchor>
            <arglist></arglist>
        </member>
        <member kind="property" type="bool">
            <name>usesNormalMap</name>
            <anchorfile>kuesa-iro2diffusesemproperties.html</anchorfile>
            <anchor>usesNormalMap-prop</anchor>
            <arglist></arglist>
        </member>
        <member kind="property" type="float">
            <name>normalMapGain</name>
            <anchorfile>kuesa-iro2diffusesemproperties.html</anchorfile>
            <anchor>normalMapGain-prop</anchor>
            <arglist></arglist>
        </member>
        <member kind="property" type="QVector3D">
            <name>normalScaling</name>
            <anchorfile>kuesa-iro2diffusesemproperties.html</anchorfile>
            <anchor>normalScaling-prop</anchor>
            <arglist></arglist>
        </member>
        <member kind="property" type="QVector2D">
            <name>normalDisturb</name>
            <anchorfile>kuesa-iro2diffusesemproperties.html</anchorfile>
            <anchor>normalDisturb-prop</anchor>
            <arglist></arglist>
        </member>
        <member kind="property" type="float">
            <name>postVertexColor</name>
            <anchorfile>kuesa-iro2diffusesemproperties.html</anchorfile>
            <anchor>postVertexColor-prop</anchor>
            <arglist></arglist>
        </member>
        <member kind="property" type="QVector3D">
            <name>postHemiFilter</name>
            <anchorfile>kuesa-iro2diffusesemproperties.html</anchorfile>
            <anchor>postHemiFilter-prop</anchor>
            <arglist></arglist>
        </member>
        <member kind="property" type="float">
            <name>postGain</name>
            <anchorfile>kuesa-iro2diffusesemproperties.html</anchorfile>
            <anchor>postGain-prop</anchor>
            <arglist></arglist>
        </member>
        <member kind="property" type="bool">
            <name>gltfYUp</name>
            <anchorfile>kuesa-iro2diffusesemproperties.html</anchorfile>
            <anchor>gltfYUp-prop</anchor>
            <arglist></arglist>
        </member>
        <member kind="function" protection="public" virtualness="non" static="no">
            <type>bool</type>
            <name>usesDiffuseMap</name>
            <anchorfile>kuesa-iro2diffusesemproperties.html</anchorfile>
            <anchor>usesDiffuseMap-prop</anchor>
            <arglist>() const const</arglist>
        </member>
        <member kind="function" protection="public" virtualness="non" static="no">
            <type>Qt3DRender::QAbstractTexture *</type>
            <name>diffuseMap</name>
            <anchorfile>kuesa-iro2diffusesemproperties.html</anchorfile>
            <anchor>diffuseMap-prop</anchor>
            <arglist>() const const</arglist>
        </member>
        <member kind="function" protection="public" virtualness="non" static="no">
            <type>float</type>
            <name>diffuseGain</name>
            <anchorfile>kuesa-iro2diffusesemproperties.html</anchorfile>
            <anchor>diffuseGain-prop</anchor>
            <arglist>() const const</arglist>
        </member>
        <member kind="function" protection="public" virtualness="non" static="no">
            <type>QVector3D</type>
            <name>diffuseInnerFilter</name>
            <anchorfile>kuesa-iro2diffusesemproperties.html</anchorfile>
            <anchor>diffuseInnerFilter-prop</anchor>
            <arglist>() const const</arglist>
        </member>
        <member kind="function" protection="public" virtualness="non" static="no">
            <type>QVector3D</type>
            <name>diffuseOuterFilter</name>
            <anchorfile>kuesa-iro2diffusesemproperties.html</anchorfile>
            <anchor>diffuseOuterFilter-prop</anchor>
            <arglist>() const const</arglist>
        </member>
        <member kind="function" protection="public" virtualness="non" static="no">
            <type>bool</type>
            <name>usesReflectionMap</name>
            <anchorfile>kuesa-iro2diffusesemproperties.html</anchorfile>
            <anchor>usesReflectionMap-prop</anchor>
            <arglist>() const const</arglist>
        </member>
        <member kind="function" protection="public" virtualness="non" static="no">
            <type>Qt3DRender::QAbstractTexture *</type>
            <name>reflectionMap</name>
            <anchorfile>kuesa-iro2diffusesemproperties.html</anchorfile>
            <anchor>reflectionMap-prop</anchor>
            <arglist>() const const</arglist>
        </member>
        <member kind="function" protection="public" virtualness="non" static="no">
            <type>float</type>
            <name>reflectionGain</name>
            <anchorfile>kuesa-iro2diffusesemproperties.html</anchorfile>
            <anchor>reflectionGain-prop</anchor>
            <arglist>() const const</arglist>
        </member>
        <member kind="function" protection="public" virtualness="non" static="no">
            <type>QVector3D</type>
            <name>reflectionInnerFilter</name>
            <anchorfile>kuesa-iro2diffusesemproperties.html</anchorfile>
            <anchor>reflectionInnerFilter-prop</anchor>
            <arglist>() const const</arglist>
        </member>
        <member kind="function" protection="public" virtualness="non" static="no">
            <type>QVector3D</type>
            <name>reflectionOuterFilter</name>
            <anchorfile>kuesa-iro2diffusesemproperties.html</anchorfile>
            <anchor>reflectionOuterFilter-prop</anchor>
            <arglist>() const const</arglist>
        </member>
        <member kind="function" protection="public" virtualness="non" static="no">
            <type>bool</type>
            <name>usesNormalMap</name>
            <anchorfile>kuesa-iro2diffusesemproperties.html</anchorfile>
            <anchor>usesNormalMap-prop</anchor>
            <arglist>() const const</arglist>
        </member>
        <member kind="function" protection="public" virtualness="non" static="no">
            <type>Qt3DRender::QAbstractTexture *</type>
            <name>normalMap</name>
            <anchorfile>kuesa-iro2diffusesemproperties.html</anchorfile>
            <anchor>normalMap-prop</anchor>
            <arglist>() const const</arglist>
        </member>
        <member kind="function" protection="public" virtualness="non" static="no">
            <type>float</type>
            <name>normalMapGain</name>
            <anchorfile>kuesa-iro2diffusesemproperties.html</anchorfile>
            <anchor>normalMapGain-prop</anchor>
            <arglist>() const const</arglist>
        </member>
        <member kind="function" protection="public" virtualness="non" static="no">
            <type>QVector3D</type>
            <name>normalScaling</name>
            <anchorfile>kuesa-iro2diffusesemproperties.html</anchorfile>
            <anchor>normalScaling-prop</anchor>
            <arglist>() const const</arglist>
        </member>
        <member kind="function" protection="public" virtualness="non" static="no">
            <type>QVector2D</type>
            <name>normalDisturb</name>
            <anchorfile>kuesa-iro2diffusesemproperties.html</anchorfile>
            <anchor>normalDisturb-prop</anchor>
            <arglist>() const const</arglist>
        </member>
        <member kind="function" protection="public" virtualness="non" static="no">
            <type>float</type>
            <name>postVertexColor</name>
            <anchorfile>kuesa-iro2diffusesemproperties.html</anchorfile>
            <anchor>postVertexColor-prop</anchor>
            <arglist>() const const</arglist>
        </member>
        <member kind="function" protection="public" virtualness="non" static="no">
            <type>QVector3D</type>
            <name>postHemiFilter</name>
            <anchorfile>kuesa-iro2diffusesemproperties.html</anchorfile>
            <anchor>postHemiFilter-prop</anchor>
            <arglist>() const const</arglist>
        </member>
        <member kind="function" protection="public" virtualness="non" static="no">
            <type>float</type>
            <name>postGain</name>
            <anchorfile>kuesa-iro2diffusesemproperties.html</anchorfile>
            <anchor>postGain-prop</anchor>
            <arglist>() const const</arglist>
        </member>
        <member kind="function" protection="public" virtualness="non" static="no">
            <type>bool</type>
            <name>gltfYUp</name>
            <anchorfile>kuesa-iro2diffusesemproperties.html</anchorfile>
            <anchor>gltfYUp-prop</anchor>
            <arglist>() const const</arglist>
        </member>
        <member kind="function" protection="public" virtualness="non" static="no">
            <type>void</type>
            <name>setUsesDiffuseMap</name>
            <anchorfile>kuesa-iro2diffusesemproperties.html</anchorfile>
            <anchor>usesDiffuseMap-prop</anchor>
            <arglist>(bool usesDiffuseMap)</arglist>
        </member>
        <member kind="function" protection="public" virtualness="non" static="no">
            <type>void</type>
            <name>setDiffuseMap</name>
            <anchorfile>kuesa-iro2diffusesemproperties.html</anchorfile>
            <anchor>diffuseMap-prop</anchor>
            <arglist>(Qt3DRender::QAbstractTexture *diffuseMap)</arglist>
        </member>
        <member kind="function" protection="public" virtualness="non" static="no">
            <type>void</type>
            <name>setDiffuseGain</name>
            <anchorfile>kuesa-iro2diffusesemproperties.html</anchorfile>
            <anchor>diffuseGain-prop</anchor>
            <arglist>(float diffuseGain)</arglist>
        </member>
        <member kind="function" protection="public" virtualness="non" static="no">
            <type>void</type>
            <name>setDiffuseInnerFilter</name>
            <anchorfile>kuesa-iro2diffusesemproperties.html</anchorfile>
            <anchor>diffuseInnerFilter-prop</anchor>
            <arglist>(const QVector3D &amp;diffuseInnerFilter)</arglist>
        </member>
        <member kind="function" protection="public" virtualness="non" static="no">
            <type>void</type>
            <name>setDiffuseOuterFilter</name>
            <anchorfile>kuesa-iro2diffusesemproperties.html</anchorfile>
            <anchor>diffuseOuterFilter-prop</anchor>
            <arglist>(const QVector3D &amp;diffuseOuterFilter)</arglist>
        </member>
        <member kind="function" protection="public" virtualness="non" static="no">
            <type>void</type>
            <name>setUsesReflectionMap</name>
            <anchorfile>kuesa-iro2diffusesemproperties.html</anchorfile>
            <anchor>usesReflectionMap-prop</anchor>
            <arglist>(bool usesReflectionMap)</arglist>
        </member>
        <member kind="function" protection="public" virtualness="non" static="no">
            <type>void</type>
            <name>setReflectionMap</name>
            <anchorfile>kuesa-iro2diffusesemproperties.html</anchorfile>
            <anchor>reflectionMap-prop</anchor>
            <arglist>(Qt3DRender::QAbstractTexture *reflectionMap)</arglist>
        </member>
        <member kind="function" protection="public" virtualness="non" static="no">
            <type>void</type>
            <name>setReflectionGain</name>
            <anchorfile>kuesa-iro2diffusesemproperties.html</anchorfile>
            <anchor>reflectionGain-prop</anchor>
            <arglist>(float reflectionGain)</arglist>
        </member>
        <member kind="function" protection="public" virtualness="non" static="no">
            <type>void</type>
            <name>setReflectionInnerFilter</name>
            <anchorfile>kuesa-iro2diffusesemproperties.html</anchorfile>
            <anchor>reflectionInnerFilter-prop</anchor>
            <arglist>(const QVector3D &amp;reflectionInnerFilter)</arglist>
        </member>
        <member kind="function" protection="public" virtualness="non" static="no">
            <type>void</type>
            <name>setReflectionOuterFilter</name>
            <anchorfile>kuesa-iro2diffusesemproperties.html</anchorfile>
            <anchor>reflectionOuterFilter-prop</anchor>
            <arglist>(const QVector3D &amp;reflectionOuterFilter)</arglist>
        </member>
        <member kind="function" protection="public" virtualness="non" static="no">
            <type>void</type>
            <name>setUsesNormalMap</name>
            <anchorfile>kuesa-iro2diffusesemproperties.html</anchorfile>
            <anchor>usesNormalMap-prop</anchor>
            <arglist>(bool usesNormalMap)</arglist>
        </member>
        <member kind="function" protection="public" virtualness="non" static="no">
            <type>void</type>
            <name>setNormalMap</name>
            <anchorfile>kuesa-iro2diffusesemproperties.html</anchorfile>
            <anchor>normalMap-prop</anchor>
            <arglist>(Qt3DRender::QAbstractTexture *normalMap)</arglist>
        </member>
        <member kind="function" protection="public" virtualness="non" static="no">
            <type>void</type>
            <name>setNormalMapGain</name>
            <anchorfile>kuesa-iro2diffusesemproperties.html</anchorfile>
            <anchor>normalMapGain-prop</anchor>
            <arglist>(float normalMapGain)</arglist>
        </member>
        <member kind="function" protection="public" virtualness="non" static="no">
            <type>void</type>
            <name>setNormalScaling</name>
            <anchorfile>kuesa-iro2diffusesemproperties.html</anchorfile>
            <anchor>normalScaling-prop</anchor>
            <arglist>(const QVector3D &amp;normalScaling)</arglist>
        </member>
        <member kind="function" protection="public" virtualness="non" static="no">
            <type>void</type>
            <name>setNormalDisturb</name>
            <anchorfile>kuesa-iro2diffusesemproperties.html</anchorfile>
            <anchor>normalDisturb-prop</anchor>
            <arglist>(const QVector2D &amp;normalDisturb)</arglist>
        </member>
        <member kind="function" protection="public" virtualness="non" static="no">
            <type>void</type>
            <name>setPostVertexColor</name>
            <anchorfile>kuesa-iro2diffusesemproperties.html</anchorfile>
            <anchor>postVertexColor-prop</anchor>
            <arglist>(float postVertexColor)</arglist>
        </member>
        <member kind="function" protection="public" virtualness="non" static="no">
            <type>void</type>
            <name>setPostHemiFilter</name>
            <anchorfile>kuesa-iro2diffusesemproperties.html</anchorfile>
            <anchor>postHemiFilter-prop</anchor>
            <arglist>(const QVector3D &amp;postHemiFilter)</arglist>
        </member>
        <member kind="function" protection="public" virtualness="non" static="no">
            <type>void</type>
            <name>setPostGain</name>
            <anchorfile>kuesa-iro2diffusesemproperties.html</anchorfile>
            <anchor>postGain-prop</anchor>
            <arglist>(float postGain)</arglist>
        </member>
        <member kind="function" protection="public" virtualness="non" static="no">
            <type>void</type>
            <name>setGltfYUp</name>
            <anchorfile>kuesa-iro2diffusesemproperties.html</anchorfile>
            <anchor>gltfYUp-prop</anchor>
            <arglist>(bool gltfYUp)</arglist>
        </member>
        <member kind="function" protection="public" virtualness="non" static="no">
            <type>void</type>
            <name>usesDiffuseMapChanged</name>
            <anchorfile>kuesa-iro2diffusesemproperties.html</anchorfile>
            <anchor>usesDiffuseMap-prop</anchor>
            <arglist>(bool )</arglist>
        </member>
        <member kind="function" protection="public" virtualness="non" static="no">
            <type>void</type>
            <name>diffuseMapChanged</name>
            <anchorfile>kuesa-iro2diffusesemproperties.html</anchorfile>
            <anchor>diffuseMap-prop</anchor>
            <arglist>(Qt3DRender::QAbstractTexture *)</arglist>
        </member>
        <member kind="function" protection="public" virtualness="non" static="no">
            <type>void</type>
            <name>diffuseGainChanged</name>
            <anchorfile>kuesa-iro2diffusesemproperties.html</anchorfile>
            <anchor>diffuseGain-prop</anchor>
            <arglist>(float )</arglist>
        </member>
        <member kind="function" protection="public" virtualness="non" static="no">
            <type>void</type>
            <name>diffuseInnerFilterChanged</name>
            <anchorfile>kuesa-iro2diffusesemproperties.html</anchorfile>
            <anchor>diffuseInnerFilter-prop</anchor>
            <arglist>(QVector3D )</arglist>
        </member>
        <member kind="function" protection="public" virtualness="non" static="no">
            <type>void</type>
            <name>diffuseOuterFilterChanged</name>
            <anchorfile>kuesa-iro2diffusesemproperties.html</anchorfile>
            <anchor>diffuseOuterFilter-prop</anchor>
            <arglist>(QVector3D )</arglist>
        </member>
        <member kind="function" protection="public" virtualness="non" static="no">
            <type>void</type>
            <name>usesReflectionMapChanged</name>
            <anchorfile>kuesa-iro2diffusesemproperties.html</anchorfile>
            <anchor>usesReflectionMap-prop</anchor>
            <arglist>(bool )</arglist>
        </member>
        <member kind="function" protection="public" virtualness="non" static="no">
            <type>void</type>
            <name>reflectionMapChanged</name>
            <anchorfile>kuesa-iro2diffusesemproperties.html</anchorfile>
            <anchor>reflectionMap-prop</anchor>
            <arglist>(Qt3DRender::QAbstractTexture *)</arglist>
        </member>
        <member kind="function" protection="public" virtualness="non" static="no">
            <type>void</type>
            <name>reflectionGainChanged</name>
            <anchorfile>kuesa-iro2diffusesemproperties.html</anchorfile>
            <anchor>reflectionGain-prop</anchor>
            <arglist>(float )</arglist>
        </member>
        <member kind="function" protection="public" virtualness="non" static="no">
            <type>void</type>
            <name>reflectionInnerFilterChanged</name>
            <anchorfile>kuesa-iro2diffusesemproperties.html</anchorfile>
            <anchor>reflectionInnerFilter-prop</anchor>
            <arglist>(QVector3D )</arglist>
        </member>
        <member kind="function" protection="public" virtualness="non" static="no">
            <type>void</type>
            <name>reflectionOuterFilterChanged</name>
            <anchorfile>kuesa-iro2diffusesemproperties.html</anchorfile>
            <anchor>reflectionOuterFilter-prop</anchor>
            <arglist>(QVector3D )</arglist>
        </member>
        <member kind="function" protection="public" virtualness="non" static="no">
            <type>void</type>
            <name>usesNormalMapChanged</name>
            <anchorfile>kuesa-iro2diffusesemproperties.html</anchorfile>
            <anchor>usesNormalMap-prop</anchor>
            <arglist>(bool )</arglist>
        </member>
        <member kind="function" protection="public" virtualness="non" static="no">
            <type>void</type>
            <name>normalMapChanged</name>
            <anchorfile>kuesa-iro2diffusesemproperties.html</anchorfile>
            <anchor>normalMap-prop</anchor>
            <arglist>(Qt3DRender::QAbstractTexture *)</arglist>
        </member>
        <member kind="function" protection="public" virtualness="non" static="no">
            <type>void</type>
            <name>normalMapGainChanged</name>
            <anchorfile>kuesa-iro2diffusesemproperties.html</anchorfile>
            <anchor>normalMapGain-prop</anchor>
            <arglist>(float )</arglist>
        </member>
        <member kind="function" protection="public" virtualness="non" static="no">
            <type>void</type>
            <name>normalScalingChanged</name>
            <anchorfile>kuesa-iro2diffusesemproperties.html</anchorfile>
            <anchor>normalScaling-prop</anchor>
            <arglist>(QVector3D )</arglist>
        </member>
        <member kind="function" protection="public" virtualness="non" static="no">
            <type>void</type>
            <name>normalDisturbChanged</name>
            <anchorfile>kuesa-iro2diffusesemproperties.html</anchorfile>
            <anchor>normalDisturb-prop</anchor>
            <arglist>(QVector2D )</arglist>
        </member>
        <member kind="function" protection="public" virtualness="non" static="no">
            <type>void</type>
            <name>postVertexColorChanged</name>
            <anchorfile>kuesa-iro2diffusesemproperties.html</anchorfile>
            <anchor>postVertexColor-prop</anchor>
            <arglist>(float )</arglist>
        </member>
        <member kind="function" protection="public" virtualness="non" static="no">
            <type>void</type>
            <name>postHemiFilterChanged</name>
            <anchorfile>kuesa-iro2diffusesemproperties.html</anchorfile>
            <anchor>postHemiFilter-prop</anchor>
            <arglist>(QVector3D )</arglist>
        </member>
        <member kind="function" protection="public" virtualness="non" static="no">
            <type>void</type>
            <name>postGainChanged</name>
            <anchorfile>kuesa-iro2diffusesemproperties.html</anchorfile>
            <anchor>postGain-prop</anchor>
            <arglist>(float )</arglist>
        </member>
        <member kind="function" protection="public" virtualness="non" static="no">
            <type>void</type>
            <name>gltfYUpChanged</name>
            <anchorfile>kuesa-iro2diffusesemproperties.html</anchorfile>
            <anchor>gltfYUp-prop</anchor>
            <arglist>(bool )</arglist>
        </member>
    </compound>
    <compound kind="class">
        <name>Kuesa::Iro2GlassEquiRectEffect</name>
        <filename>kuesa-iro2glassequirecteffect.html</filename>
        <base>GLTF2MaterialEffect</base>
    </compound>
    <compound kind="class">
        <name>Kuesa::Iro2GlassEquiRectMaterial</name>
        <filename>kuesa-iro2glassequirectmaterial.html</filename>
        <base>GLTF2Material</base>
        <member kind="property" type="Kuesa::Iro2GlassEquiRectProperties*">
            <name>materialProperties</name>
            <anchorfile>kuesa-iro2glassequirectmaterial.html</anchorfile>
            <anchor>materialProperties-prop</anchor>
            <arglist></arglist>
        </member>
        <member kind="function" protection="public" virtualness="non" static="no">
            <type>Kuesa::Iro2GlassEquiRectProperties *</type>
            <name>materialProperties</name>
            <anchorfile>kuesa-iro2glassequirectmaterial.html</anchorfile>
            <anchor>materialProperties-prop</anchor>
            <arglist>() const const</arglist>
        </member>
        <member kind="function" protection="public" virtualness="non" static="no">
            <type>void</type>
            <name>setMaterialProperties</name>
            <anchorfile>kuesa-iro2glassequirectmaterial.html</anchorfile>
            <anchor>materialProperties-prop</anchor>
            <arglist>(Kuesa::Iro2GlassEquiRectProperties *materialProperties)</arglist>
        </member>
        <member kind="function" protection="public" virtualness="non" static="no">
            <type>void</type>
            <name>setMaterialProperties</name>
            <anchorfile>kuesa-iro2glassequirectmaterial.html</anchorfile>
            <anchor>materialProperties-prop</anchor>
            <arglist>(Kuesa::GLTF2MaterialProperties *materialProperties)</arglist>
        </member>
        <member kind="function" protection="public" virtualness="non" static="no">
            <type>void</type>
            <name>materialPropertiesChanged</name>
            <anchorfile>kuesa-iro2glassequirectmaterial.html</anchorfile>
            <anchor>materialProperties-prop</anchor>
            <arglist>(Kuesa::Iro2GlassEquiRectProperties *materialProperties)</arglist>
        </member>
    </compound>
    <compound kind="class">
        <name>Kuesa::Iro2GlassEquiRectProperties</name>
        <filename>kuesa-iro2glassequirectproperties.html</filename>
        <base>GLTF2MaterialProperties</base>
        <member kind="property" type="QVector3D">
            <name>glassInnerFilter</name>
            <anchorfile>kuesa-iro2glassequirectproperties.html</anchorfile>
            <anchor>glassInnerFilter-prop</anchor>
            <arglist></arglist>
        </member>
        <member kind="property" type="QVector3D">
            <name>glassOuterFilter</name>
            <anchorfile>kuesa-iro2glassequirectproperties.html</anchorfile>
            <anchor>glassOuterFilter-prop</anchor>
            <arglist></arglist>
        </member>
        <member kind="property" type="bool">
            <name>usesReflectionMap</name>
            <anchorfile>kuesa-iro2glassequirectproperties.html</anchorfile>
            <anchor>usesReflectionMap-prop</anchor>
            <arglist></arglist>
        </member>
        <member kind="property" type="float">
            <name>reflectionGain</name>
            <anchorfile>kuesa-iro2glassequirectproperties.html</anchorfile>
            <anchor>reflectionGain-prop</anchor>
            <arglist></arglist>
        </member>
        <member kind="property" type="QVector3D">
            <name>reflectionInnerFilter</name>
            <anchorfile>kuesa-iro2glassequirectproperties.html</anchorfile>
            <anchor>reflectionInnerFilter-prop</anchor>
            <arglist></arglist>
        </member>
        <member kind="property" type="QVector3D">
            <name>reflectionOuterFilter</name>
            <anchorfile>kuesa-iro2glassequirectproperties.html</anchorfile>
            <anchor>reflectionOuterFilter-prop</anchor>
            <arglist></arglist>
        </member>
        <member kind="property" type="bool">
            <name>usesNormalMap</name>
            <anchorfile>kuesa-iro2glassequirectproperties.html</anchorfile>
            <anchor>usesNormalMap-prop</anchor>
            <arglist></arglist>
        </member>
        <member kind="property" type="float">
            <name>normalMapGain</name>
            <anchorfile>kuesa-iro2glassequirectproperties.html</anchorfile>
            <anchor>normalMapGain-prop</anchor>
            <arglist></arglist>
        </member>
        <member kind="property" type="QVector3D">
            <name>normalScaling</name>
            <anchorfile>kuesa-iro2glassequirectproperties.html</anchorfile>
            <anchor>normalScaling-prop</anchor>
            <arglist></arglist>
        </member>
        <member kind="property" type="QVector2D">
            <name>normalDisturb</name>
            <anchorfile>kuesa-iro2glassequirectproperties.html</anchorfile>
            <anchor>normalDisturb-prop</anchor>
            <arglist></arglist>
        </member>
        <member kind="property" type="float">
            <name>postVertexColor</name>
            <anchorfile>kuesa-iro2glassequirectproperties.html</anchorfile>
            <anchor>postVertexColor-prop</anchor>
            <arglist></arglist>
        </member>
        <member kind="property" type="float">
            <name>postGain</name>
            <anchorfile>kuesa-iro2glassequirectproperties.html</anchorfile>
            <anchor>postGain-prop</anchor>
            <arglist></arglist>
        </member>
        <member kind="property" type="bool">
            <name>gltfYUp</name>
            <anchorfile>kuesa-iro2glassequirectproperties.html</anchorfile>
            <anchor>gltfYUp-prop</anchor>
            <arglist></arglist>
        </member>
        <member kind="function" protection="public" virtualness="non" static="no">
            <type>QVector3D</type>
            <name>glassInnerFilter</name>
            <anchorfile>kuesa-iro2glassequirectproperties.html</anchorfile>
            <anchor>glassInnerFilter-prop</anchor>
            <arglist>() const const</arglist>
        </member>
        <member kind="function" protection="public" virtualness="non" static="no">
            <type>QVector3D</type>
            <name>glassOuterFilter</name>
            <anchorfile>kuesa-iro2glassequirectproperties.html</anchorfile>
            <anchor>glassOuterFilter-prop</anchor>
            <arglist>() const const</arglist>
        </member>
        <member kind="function" protection="public" virtualness="non" static="no">
            <type>bool</type>
            <name>usesReflectionMap</name>
            <anchorfile>kuesa-iro2glassequirectproperties.html</anchorfile>
            <anchor>usesReflectionMap-prop</anchor>
            <arglist>() const const</arglist>
        </member>
        <member kind="function" protection="public" virtualness="non" static="no">
            <type>Qt3DRender::QAbstractTexture *</type>
            <name>reflectionMap</name>
            <anchorfile>kuesa-iro2glassequirectproperties.html</anchorfile>
            <anchor>reflectionMap-prop</anchor>
            <arglist>() const const</arglist>
        </member>
        <member kind="function" protection="public" virtualness="non" static="no">
            <type>float</type>
            <name>reflectionGain</name>
            <anchorfile>kuesa-iro2glassequirectproperties.html</anchorfile>
            <anchor>reflectionGain-prop</anchor>
            <arglist>() const const</arglist>
        </member>
        <member kind="function" protection="public" virtualness="non" static="no">
            <type>QVector3D</type>
            <name>reflectionInnerFilter</name>
            <anchorfile>kuesa-iro2glassequirectproperties.html</anchorfile>
            <anchor>reflectionInnerFilter-prop</anchor>
            <arglist>() const const</arglist>
        </member>
        <member kind="function" protection="public" virtualness="non" static="no">
            <type>QVector3D</type>
            <name>reflectionOuterFilter</name>
            <anchorfile>kuesa-iro2glassequirectproperties.html</anchorfile>
            <anchor>reflectionOuterFilter-prop</anchor>
            <arglist>() const const</arglist>
        </member>
        <member kind="function" protection="public" virtualness="non" static="no">
            <type>bool</type>
            <name>usesNormalMap</name>
            <anchorfile>kuesa-iro2glassequirectproperties.html</anchorfile>
            <anchor>usesNormalMap-prop</anchor>
            <arglist>() const const</arglist>
        </member>
        <member kind="function" protection="public" virtualness="non" static="no">
            <type>Qt3DRender::QAbstractTexture *</type>
            <name>normalMap</name>
            <anchorfile>kuesa-iro2glassequirectproperties.html</anchorfile>
            <anchor>normalMap-prop</anchor>
            <arglist>() const const</arglist>
        </member>
        <member kind="function" protection="public" virtualness="non" static="no">
            <type>float</type>
            <name>normalMapGain</name>
            <anchorfile>kuesa-iro2glassequirectproperties.html</anchorfile>
            <anchor>normalMapGain-prop</anchor>
            <arglist>() const const</arglist>
        </member>
        <member kind="function" protection="public" virtualness="non" static="no">
            <type>QVector3D</type>
            <name>normalScaling</name>
            <anchorfile>kuesa-iro2glassequirectproperties.html</anchorfile>
            <anchor>normalScaling-prop</anchor>
            <arglist>() const const</arglist>
        </member>
        <member kind="function" protection="public" virtualness="non" static="no">
            <type>QVector2D</type>
            <name>normalDisturb</name>
            <anchorfile>kuesa-iro2glassequirectproperties.html</anchorfile>
            <anchor>normalDisturb-prop</anchor>
            <arglist>() const const</arglist>
        </member>
        <member kind="function" protection="public" virtualness="non" static="no">
            <type>float</type>
            <name>postVertexColor</name>
            <anchorfile>kuesa-iro2glassequirectproperties.html</anchorfile>
            <anchor>postVertexColor-prop</anchor>
            <arglist>() const const</arglist>
        </member>
        <member kind="function" protection="public" virtualness="non" static="no">
            <type>float</type>
            <name>postGain</name>
            <anchorfile>kuesa-iro2glassequirectproperties.html</anchorfile>
            <anchor>postGain-prop</anchor>
            <arglist>() const const</arglist>
        </member>
        <member kind="function" protection="public" virtualness="non" static="no">
            <type>bool</type>
            <name>gltfYUp</name>
            <anchorfile>kuesa-iro2glassequirectproperties.html</anchorfile>
            <anchor>gltfYUp-prop</anchor>
            <arglist>() const const</arglist>
        </member>
        <member kind="function" protection="public" virtualness="non" static="no">
            <type>void</type>
            <name>setGlassInnerFilter</name>
            <anchorfile>kuesa-iro2glassequirectproperties.html</anchorfile>
            <anchor>glassInnerFilter-prop</anchor>
            <arglist>(const QVector3D &amp;glassInnerFilter)</arglist>
        </member>
        <member kind="function" protection="public" virtualness="non" static="no">
            <type>void</type>
            <name>setGlassOuterFilter</name>
            <anchorfile>kuesa-iro2glassequirectproperties.html</anchorfile>
            <anchor>glassOuterFilter-prop</anchor>
            <arglist>(const QVector3D &amp;glassOuterFilter)</arglist>
        </member>
        <member kind="function" protection="public" virtualness="non" static="no">
            <type>void</type>
            <name>setUsesReflectionMap</name>
            <anchorfile>kuesa-iro2glassequirectproperties.html</anchorfile>
            <anchor>usesReflectionMap-prop</anchor>
            <arglist>(bool usesReflectionMap)</arglist>
        </member>
        <member kind="function" protection="public" virtualness="non" static="no">
            <type>void</type>
            <name>setReflectionMap</name>
            <anchorfile>kuesa-iro2glassequirectproperties.html</anchorfile>
            <anchor>reflectionMap-prop</anchor>
            <arglist>(Qt3DRender::QAbstractTexture *reflectionMap)</arglist>
        </member>
        <member kind="function" protection="public" virtualness="non" static="no">
            <type>void</type>
            <name>setReflectionGain</name>
            <anchorfile>kuesa-iro2glassequirectproperties.html</anchorfile>
            <anchor>reflectionGain-prop</anchor>
            <arglist>(float reflectionGain)</arglist>
        </member>
        <member kind="function" protection="public" virtualness="non" static="no">
            <type>void</type>
            <name>setReflectionInnerFilter</name>
            <anchorfile>kuesa-iro2glassequirectproperties.html</anchorfile>
            <anchor>reflectionInnerFilter-prop</anchor>
            <arglist>(const QVector3D &amp;reflectionInnerFilter)</arglist>
        </member>
        <member kind="function" protection="public" virtualness="non" static="no">
            <type>void</type>
            <name>setReflectionOuterFilter</name>
            <anchorfile>kuesa-iro2glassequirectproperties.html</anchorfile>
            <anchor>reflectionOuterFilter-prop</anchor>
            <arglist>(const QVector3D &amp;reflectionOuterFilter)</arglist>
        </member>
        <member kind="function" protection="public" virtualness="non" static="no">
            <type>void</type>
            <name>setUsesNormalMap</name>
            <anchorfile>kuesa-iro2glassequirectproperties.html</anchorfile>
            <anchor>usesNormalMap-prop</anchor>
            <arglist>(bool usesNormalMap)</arglist>
        </member>
        <member kind="function" protection="public" virtualness="non" static="no">
            <type>void</type>
            <name>setNormalMap</name>
            <anchorfile>kuesa-iro2glassequirectproperties.html</anchorfile>
            <anchor>normalMap-prop</anchor>
            <arglist>(Qt3DRender::QAbstractTexture *normalMap)</arglist>
        </member>
        <member kind="function" protection="public" virtualness="non" static="no">
            <type>void</type>
            <name>setNormalMapGain</name>
            <anchorfile>kuesa-iro2glassequirectproperties.html</anchorfile>
            <anchor>normalMapGain-prop</anchor>
            <arglist>(float normalMapGain)</arglist>
        </member>
        <member kind="function" protection="public" virtualness="non" static="no">
            <type>void</type>
            <name>setNormalScaling</name>
            <anchorfile>kuesa-iro2glassequirectproperties.html</anchorfile>
            <anchor>normalScaling-prop</anchor>
            <arglist>(const QVector3D &amp;normalScaling)</arglist>
        </member>
        <member kind="function" protection="public" virtualness="non" static="no">
            <type>void</type>
            <name>setNormalDisturb</name>
            <anchorfile>kuesa-iro2glassequirectproperties.html</anchorfile>
            <anchor>normalDisturb-prop</anchor>
            <arglist>(const QVector2D &amp;normalDisturb)</arglist>
        </member>
        <member kind="function" protection="public" virtualness="non" static="no">
            <type>void</type>
            <name>setPostVertexColor</name>
            <anchorfile>kuesa-iro2glassequirectproperties.html</anchorfile>
            <anchor>postVertexColor-prop</anchor>
            <arglist>(float postVertexColor)</arglist>
        </member>
        <member kind="function" protection="public" virtualness="non" static="no">
            <type>void</type>
            <name>setPostGain</name>
            <anchorfile>kuesa-iro2glassequirectproperties.html</anchorfile>
            <anchor>postGain-prop</anchor>
            <arglist>(float postGain)</arglist>
        </member>
        <member kind="function" protection="public" virtualness="non" static="no">
            <type>void</type>
            <name>setGltfYUp</name>
            <anchorfile>kuesa-iro2glassequirectproperties.html</anchorfile>
            <anchor>gltfYUp-prop</anchor>
            <arglist>(bool gltfYUp)</arglist>
        </member>
        <member kind="function" protection="public" virtualness="non" static="no">
            <type>void</type>
            <name>glassInnerFilterChanged</name>
            <anchorfile>kuesa-iro2glassequirectproperties.html</anchorfile>
            <anchor>glassInnerFilter-prop</anchor>
            <arglist>(QVector3D )</arglist>
        </member>
        <member kind="function" protection="public" virtualness="non" static="no">
            <type>void</type>
            <name>glassOuterFilterChanged</name>
            <anchorfile>kuesa-iro2glassequirectproperties.html</anchorfile>
            <anchor>glassOuterFilter-prop</anchor>
            <arglist>(QVector3D )</arglist>
        </member>
        <member kind="function" protection="public" virtualness="non" static="no">
            <type>void</type>
            <name>usesReflectionMapChanged</name>
            <anchorfile>kuesa-iro2glassequirectproperties.html</anchorfile>
            <anchor>usesReflectionMap-prop</anchor>
            <arglist>(bool )</arglist>
        </member>
        <member kind="function" protection="public" virtualness="non" static="no">
            <type>void</type>
            <name>reflectionMapChanged</name>
            <anchorfile>kuesa-iro2glassequirectproperties.html</anchorfile>
            <anchor>reflectionMap-prop</anchor>
            <arglist>(Qt3DRender::QAbstractTexture *)</arglist>
        </member>
        <member kind="function" protection="public" virtualness="non" static="no">
            <type>void</type>
            <name>reflectionGainChanged</name>
            <anchorfile>kuesa-iro2glassequirectproperties.html</anchorfile>
            <anchor>reflectionGain-prop</anchor>
            <arglist>(float )</arglist>
        </member>
        <member kind="function" protection="public" virtualness="non" static="no">
            <type>void</type>
            <name>reflectionInnerFilterChanged</name>
            <anchorfile>kuesa-iro2glassequirectproperties.html</anchorfile>
            <anchor>reflectionInnerFilter-prop</anchor>
            <arglist>(QVector3D )</arglist>
        </member>
        <member kind="function" protection="public" virtualness="non" static="no">
            <type>void</type>
            <name>reflectionOuterFilterChanged</name>
            <anchorfile>kuesa-iro2glassequirectproperties.html</anchorfile>
            <anchor>reflectionOuterFilter-prop</anchor>
            <arglist>(QVector3D )</arglist>
        </member>
        <member kind="function" protection="public" virtualness="non" static="no">
            <type>void</type>
            <name>usesNormalMapChanged</name>
            <anchorfile>kuesa-iro2glassequirectproperties.html</anchorfile>
            <anchor>usesNormalMap-prop</anchor>
            <arglist>(bool )</arglist>
        </member>
        <member kind="function" protection="public" virtualness="non" static="no">
            <type>void</type>
            <name>normalMapChanged</name>
            <anchorfile>kuesa-iro2glassequirectproperties.html</anchorfile>
            <anchor>normalMap-prop</anchor>
            <arglist>(Qt3DRender::QAbstractTexture *)</arglist>
        </member>
        <member kind="function" protection="public" virtualness="non" static="no">
            <type>void</type>
            <name>normalMapGainChanged</name>
            <anchorfile>kuesa-iro2glassequirectproperties.html</anchorfile>
            <anchor>normalMapGain-prop</anchor>
            <arglist>(float )</arglist>
        </member>
        <member kind="function" protection="public" virtualness="non" static="no">
            <type>void</type>
            <name>normalScalingChanged</name>
            <anchorfile>kuesa-iro2glassequirectproperties.html</anchorfile>
            <anchor>normalScaling-prop</anchor>
            <arglist>(QVector3D )</arglist>
        </member>
        <member kind="function" protection="public" virtualness="non" static="no">
            <type>void</type>
            <name>normalDisturbChanged</name>
            <anchorfile>kuesa-iro2glassequirectproperties.html</anchorfile>
            <anchor>normalDisturb-prop</anchor>
            <arglist>(QVector2D )</arglist>
        </member>
        <member kind="function" protection="public" virtualness="non" static="no">
            <type>void</type>
            <name>postVertexColorChanged</name>
            <anchorfile>kuesa-iro2glassequirectproperties.html</anchorfile>
            <anchor>postVertexColor-prop</anchor>
            <arglist>(float )</arglist>
        </member>
        <member kind="function" protection="public" virtualness="non" static="no">
            <type>void</type>
            <name>postGainChanged</name>
            <anchorfile>kuesa-iro2glassequirectproperties.html</anchorfile>
            <anchor>postGain-prop</anchor>
            <arglist>(float )</arglist>
        </member>
        <member kind="function" protection="public" virtualness="non" static="no">
            <type>void</type>
            <name>gltfYUpChanged</name>
            <anchorfile>kuesa-iro2glassequirectproperties.html</anchorfile>
            <anchor>gltfYUp-prop</anchor>
            <arglist>(bool )</arglist>
        </member>
    </compound>
    <compound kind="class">
        <name>Kuesa::Iro2GlassSemEffect</name>
        <filename>kuesa-iro2glasssemeffect.html</filename>
        <base>GLTF2MaterialEffect</base>
    </compound>
    <compound kind="class">
        <name>Kuesa::Iro2GlassSemMaterial</name>
        <filename>kuesa-iro2glasssemmaterial.html</filename>
        <base>GLTF2Material</base>
        <member kind="property" type="Kuesa::Iro2GlassSemProperties*">
            <name>materialProperties</name>
            <anchorfile>kuesa-iro2glasssemmaterial.html</anchorfile>
            <anchor>materialProperties-prop</anchor>
            <arglist></arglist>
        </member>
        <member kind="function" protection="public" virtualness="non" static="no">
            <type>Kuesa::Iro2GlassSemProperties *</type>
            <name>materialProperties</name>
            <anchorfile>kuesa-iro2glasssemmaterial.html</anchorfile>
            <anchor>materialProperties-prop</anchor>
            <arglist>() const const</arglist>
        </member>
        <member kind="function" protection="public" virtualness="non" static="no">
            <type>void</type>
            <name>setMaterialProperties</name>
            <anchorfile>kuesa-iro2glasssemmaterial.html</anchorfile>
            <anchor>materialProperties-prop</anchor>
            <arglist>(Kuesa::Iro2GlassSemProperties *materialProperties)</arglist>
        </member>
        <member kind="function" protection="public" virtualness="non" static="no">
            <type>void</type>
            <name>setMaterialProperties</name>
            <anchorfile>kuesa-iro2glasssemmaterial.html</anchorfile>
            <anchor>materialProperties-prop</anchor>
            <arglist>(Kuesa::GLTF2MaterialProperties *materialProperties)</arglist>
        </member>
        <member kind="function" protection="public" virtualness="non" static="no">
            <type>void</type>
            <name>materialPropertiesChanged</name>
            <anchorfile>kuesa-iro2glasssemmaterial.html</anchorfile>
            <anchor>materialProperties-prop</anchor>
            <arglist>(Kuesa::Iro2GlassSemProperties *materialProperties)</arglist>
        </member>
    </compound>
    <compound kind="class">
        <name>Kuesa::Iro2GlassSemProperties</name>
        <filename>kuesa-iro2glasssemproperties.html</filename>
        <base>GLTF2MaterialProperties</base>
        <member kind="property" type="QVector3D">
            <name>glassInnerFilter</name>
            <anchorfile>kuesa-iro2glasssemproperties.html</anchorfile>
            <anchor>glassInnerFilter-prop</anchor>
            <arglist></arglist>
        </member>
        <member kind="property" type="QVector3D">
            <name>glassOuterFilter</name>
            <anchorfile>kuesa-iro2glasssemproperties.html</anchorfile>
            <anchor>glassOuterFilter-prop</anchor>
            <arglist></arglist>
        </member>
        <member kind="property" type="bool">
            <name>usesReflectionMap</name>
            <anchorfile>kuesa-iro2glasssemproperties.html</anchorfile>
            <anchor>usesReflectionMap-prop</anchor>
            <arglist></arglist>
        </member>
        <member kind="property" type="float">
            <name>reflectionGain</name>
            <anchorfile>kuesa-iro2glasssemproperties.html</anchorfile>
            <anchor>reflectionGain-prop</anchor>
            <arglist></arglist>
        </member>
        <member kind="property" type="QVector3D">
            <name>reflectionInnerFilter</name>
            <anchorfile>kuesa-iro2glasssemproperties.html</anchorfile>
            <anchor>reflectionInnerFilter-prop</anchor>
            <arglist></arglist>
        </member>
        <member kind="property" type="QVector3D">
            <name>reflectionOuterFilter</name>
            <anchorfile>kuesa-iro2glasssemproperties.html</anchorfile>
            <anchor>reflectionOuterFilter-prop</anchor>
            <arglist></arglist>
        </member>
        <member kind="property" type="bool">
            <name>usesNormalMap</name>
            <anchorfile>kuesa-iro2glasssemproperties.html</anchorfile>
            <anchor>usesNormalMap-prop</anchor>
            <arglist></arglist>
        </member>
        <member kind="property" type="float">
            <name>normalMapGain</name>
            <anchorfile>kuesa-iro2glasssemproperties.html</anchorfile>
            <anchor>normalMapGain-prop</anchor>
            <arglist></arglist>
        </member>
        <member kind="property" type="QVector3D">
            <name>normalScaling</name>
            <anchorfile>kuesa-iro2glasssemproperties.html</anchorfile>
            <anchor>normalScaling-prop</anchor>
            <arglist></arglist>
        </member>
        <member kind="property" type="QVector2D">
            <name>normalDisturb</name>
            <anchorfile>kuesa-iro2glasssemproperties.html</anchorfile>
            <anchor>normalDisturb-prop</anchor>
            <arglist></arglist>
        </member>
        <member kind="property" type="float">
            <name>postVertexColor</name>
            <anchorfile>kuesa-iro2glasssemproperties.html</anchorfile>
            <anchor>postVertexColor-prop</anchor>
            <arglist></arglist>
        </member>
        <member kind="property" type="float">
            <name>postGain</name>
            <anchorfile>kuesa-iro2glasssemproperties.html</anchorfile>
            <anchor>postGain-prop</anchor>
            <arglist></arglist>
        </member>
        <member kind="property" type="bool">
            <name>gltfYUp</name>
            <anchorfile>kuesa-iro2glasssemproperties.html</anchorfile>
            <anchor>gltfYUp-prop</anchor>
            <arglist></arglist>
        </member>
        <member kind="function" protection="public" virtualness="non" static="no">
            <type>QVector3D</type>
            <name>glassInnerFilter</name>
            <anchorfile>kuesa-iro2glasssemproperties.html</anchorfile>
            <anchor>glassInnerFilter-prop</anchor>
            <arglist>() const const</arglist>
        </member>
        <member kind="function" protection="public" virtualness="non" static="no">
            <type>QVector3D</type>
            <name>glassOuterFilter</name>
            <anchorfile>kuesa-iro2glasssemproperties.html</anchorfile>
            <anchor>glassOuterFilter-prop</anchor>
            <arglist>() const const</arglist>
        </member>
        <member kind="function" protection="public" virtualness="non" static="no">
            <type>bool</type>
            <name>usesReflectionMap</name>
            <anchorfile>kuesa-iro2glasssemproperties.html</anchorfile>
            <anchor>usesReflectionMap-prop</anchor>
            <arglist>() const const</arglist>
        </member>
        <member kind="function" protection="public" virtualness="non" static="no">
            <type>Qt3DRender::QAbstractTexture *</type>
            <name>reflectionMap</name>
            <anchorfile>kuesa-iro2glasssemproperties.html</anchorfile>
            <anchor>reflectionMap-prop</anchor>
            <arglist>() const const</arglist>
        </member>
        <member kind="function" protection="public" virtualness="non" static="no">
            <type>float</type>
            <name>reflectionGain</name>
            <anchorfile>kuesa-iro2glasssemproperties.html</anchorfile>
            <anchor>reflectionGain-prop</anchor>
            <arglist>() const const</arglist>
        </member>
        <member kind="function" protection="public" virtualness="non" static="no">
            <type>QVector3D</type>
            <name>reflectionInnerFilter</name>
            <anchorfile>kuesa-iro2glasssemproperties.html</anchorfile>
            <anchor>reflectionInnerFilter-prop</anchor>
            <arglist>() const const</arglist>
        </member>
        <member kind="function" protection="public" virtualness="non" static="no">
            <type>QVector3D</type>
            <name>reflectionOuterFilter</name>
            <anchorfile>kuesa-iro2glasssemproperties.html</anchorfile>
            <anchor>reflectionOuterFilter-prop</anchor>
            <arglist>() const const</arglist>
        </member>
        <member kind="function" protection="public" virtualness="non" static="no">
            <type>bool</type>
            <name>usesNormalMap</name>
            <anchorfile>kuesa-iro2glasssemproperties.html</anchorfile>
            <anchor>usesNormalMap-prop</anchor>
            <arglist>() const const</arglist>
        </member>
        <member kind="function" protection="public" virtualness="non" static="no">
            <type>Qt3DRender::QAbstractTexture *</type>
            <name>normalMap</name>
            <anchorfile>kuesa-iro2glasssemproperties.html</anchorfile>
            <anchor>normalMap-prop</anchor>
            <arglist>() const const</arglist>
        </member>
        <member kind="function" protection="public" virtualness="non" static="no">
            <type>float</type>
            <name>normalMapGain</name>
            <anchorfile>kuesa-iro2glasssemproperties.html</anchorfile>
            <anchor>normalMapGain-prop</anchor>
            <arglist>() const const</arglist>
        </member>
        <member kind="function" protection="public" virtualness="non" static="no">
            <type>QVector3D</type>
            <name>normalScaling</name>
            <anchorfile>kuesa-iro2glasssemproperties.html</anchorfile>
            <anchor>normalScaling-prop</anchor>
            <arglist>() const const</arglist>
        </member>
        <member kind="function" protection="public" virtualness="non" static="no">
            <type>QVector2D</type>
            <name>normalDisturb</name>
            <anchorfile>kuesa-iro2glasssemproperties.html</anchorfile>
            <anchor>normalDisturb-prop</anchor>
            <arglist>() const const</arglist>
        </member>
        <member kind="function" protection="public" virtualness="non" static="no">
            <type>float</type>
            <name>postVertexColor</name>
            <anchorfile>kuesa-iro2glasssemproperties.html</anchorfile>
            <anchor>postVertexColor-prop</anchor>
            <arglist>() const const</arglist>
        </member>
        <member kind="function" protection="public" virtualness="non" static="no">
            <type>float</type>
            <name>postGain</name>
            <anchorfile>kuesa-iro2glasssemproperties.html</anchorfile>
            <anchor>postGain-prop</anchor>
            <arglist>() const const</arglist>
        </member>
        <member kind="function" protection="public" virtualness="non" static="no">
            <type>bool</type>
            <name>gltfYUp</name>
            <anchorfile>kuesa-iro2glasssemproperties.html</anchorfile>
            <anchor>gltfYUp-prop</anchor>
            <arglist>() const const</arglist>
        </member>
        <member kind="function" protection="public" virtualness="non" static="no">
            <type>void</type>
            <name>setGlassInnerFilter</name>
            <anchorfile>kuesa-iro2glasssemproperties.html</anchorfile>
            <anchor>glassInnerFilter-prop</anchor>
            <arglist>(const QVector3D &amp;glassInnerFilter)</arglist>
        </member>
        <member kind="function" protection="public" virtualness="non" static="no">
            <type>void</type>
            <name>setGlassOuterFilter</name>
            <anchorfile>kuesa-iro2glasssemproperties.html</anchorfile>
            <anchor>glassOuterFilter-prop</anchor>
            <arglist>(const QVector3D &amp;glassOuterFilter)</arglist>
        </member>
        <member kind="function" protection="public" virtualness="non" static="no">
            <type>void</type>
            <name>setUsesReflectionMap</name>
            <anchorfile>kuesa-iro2glasssemproperties.html</anchorfile>
            <anchor>usesReflectionMap-prop</anchor>
            <arglist>(bool usesReflectionMap)</arglist>
        </member>
        <member kind="function" protection="public" virtualness="non" static="no">
            <type>void</type>
            <name>setReflectionMap</name>
            <anchorfile>kuesa-iro2glasssemproperties.html</anchorfile>
            <anchor>reflectionMap-prop</anchor>
            <arglist>(Qt3DRender::QAbstractTexture *reflectionMap)</arglist>
        </member>
        <member kind="function" protection="public" virtualness="non" static="no">
            <type>void</type>
            <name>setReflectionGain</name>
            <anchorfile>kuesa-iro2glasssemproperties.html</anchorfile>
            <anchor>reflectionGain-prop</anchor>
            <arglist>(float reflectionGain)</arglist>
        </member>
        <member kind="function" protection="public" virtualness="non" static="no">
            <type>void</type>
            <name>setReflectionInnerFilter</name>
            <anchorfile>kuesa-iro2glasssemproperties.html</anchorfile>
            <anchor>reflectionInnerFilter-prop</anchor>
            <arglist>(const QVector3D &amp;reflectionInnerFilter)</arglist>
        </member>
        <member kind="function" protection="public" virtualness="non" static="no">
            <type>void</type>
            <name>setReflectionOuterFilter</name>
            <anchorfile>kuesa-iro2glasssemproperties.html</anchorfile>
            <anchor>reflectionOuterFilter-prop</anchor>
            <arglist>(const QVector3D &amp;reflectionOuterFilter)</arglist>
        </member>
        <member kind="function" protection="public" virtualness="non" static="no">
            <type>void</type>
            <name>setUsesNormalMap</name>
            <anchorfile>kuesa-iro2glasssemproperties.html</anchorfile>
            <anchor>usesNormalMap-prop</anchor>
            <arglist>(bool usesNormalMap)</arglist>
        </member>
        <member kind="function" protection="public" virtualness="non" static="no">
            <type>void</type>
            <name>setNormalMap</name>
            <anchorfile>kuesa-iro2glasssemproperties.html</anchorfile>
            <anchor>normalMap-prop</anchor>
            <arglist>(Qt3DRender::QAbstractTexture *normalMap)</arglist>
        </member>
        <member kind="function" protection="public" virtualness="non" static="no">
            <type>void</type>
            <name>setNormalMapGain</name>
            <anchorfile>kuesa-iro2glasssemproperties.html</anchorfile>
            <anchor>normalMapGain-prop</anchor>
            <arglist>(float normalMapGain)</arglist>
        </member>
        <member kind="function" protection="public" virtualness="non" static="no">
            <type>void</type>
            <name>setNormalScaling</name>
            <anchorfile>kuesa-iro2glasssemproperties.html</anchorfile>
            <anchor>normalScaling-prop</anchor>
            <arglist>(const QVector3D &amp;normalScaling)</arglist>
        </member>
        <member kind="function" protection="public" virtualness="non" static="no">
            <type>void</type>
            <name>setNormalDisturb</name>
            <anchorfile>kuesa-iro2glasssemproperties.html</anchorfile>
            <anchor>normalDisturb-prop</anchor>
            <arglist>(const QVector2D &amp;normalDisturb)</arglist>
        </member>
        <member kind="function" protection="public" virtualness="non" static="no">
            <type>void</type>
            <name>setPostVertexColor</name>
            <anchorfile>kuesa-iro2glasssemproperties.html</anchorfile>
            <anchor>postVertexColor-prop</anchor>
            <arglist>(float postVertexColor)</arglist>
        </member>
        <member kind="function" protection="public" virtualness="non" static="no">
            <type>void</type>
            <name>setPostGain</name>
            <anchorfile>kuesa-iro2glasssemproperties.html</anchorfile>
            <anchor>postGain-prop</anchor>
            <arglist>(float postGain)</arglist>
        </member>
        <member kind="function" protection="public" virtualness="non" static="no">
            <type>void</type>
            <name>setGltfYUp</name>
            <anchorfile>kuesa-iro2glasssemproperties.html</anchorfile>
            <anchor>gltfYUp-prop</anchor>
            <arglist>(bool gltfYUp)</arglist>
        </member>
        <member kind="function" protection="public" virtualness="non" static="no">
            <type>void</type>
            <name>glassInnerFilterChanged</name>
            <anchorfile>kuesa-iro2glasssemproperties.html</anchorfile>
            <anchor>glassInnerFilter-prop</anchor>
            <arglist>(QVector3D )</arglist>
        </member>
        <member kind="function" protection="public" virtualness="non" static="no">
            <type>void</type>
            <name>glassOuterFilterChanged</name>
            <anchorfile>kuesa-iro2glasssemproperties.html</anchorfile>
            <anchor>glassOuterFilter-prop</anchor>
            <arglist>(QVector3D )</arglist>
        </member>
        <member kind="function" protection="public" virtualness="non" static="no">
            <type>void</type>
            <name>usesReflectionMapChanged</name>
            <anchorfile>kuesa-iro2glasssemproperties.html</anchorfile>
            <anchor>usesReflectionMap-prop</anchor>
            <arglist>(bool )</arglist>
        </member>
        <member kind="function" protection="public" virtualness="non" static="no">
            <type>void</type>
            <name>reflectionMapChanged</name>
            <anchorfile>kuesa-iro2glasssemproperties.html</anchorfile>
            <anchor>reflectionMap-prop</anchor>
            <arglist>(Qt3DRender::QAbstractTexture *)</arglist>
        </member>
        <member kind="function" protection="public" virtualness="non" static="no">
            <type>void</type>
            <name>reflectionGainChanged</name>
            <anchorfile>kuesa-iro2glasssemproperties.html</anchorfile>
            <anchor>reflectionGain-prop</anchor>
            <arglist>(float )</arglist>
        </member>
        <member kind="function" protection="public" virtualness="non" static="no">
            <type>void</type>
            <name>reflectionInnerFilterChanged</name>
            <anchorfile>kuesa-iro2glasssemproperties.html</anchorfile>
            <anchor>reflectionInnerFilter-prop</anchor>
            <arglist>(QVector3D )</arglist>
        </member>
        <member kind="function" protection="public" virtualness="non" static="no">
            <type>void</type>
            <name>reflectionOuterFilterChanged</name>
            <anchorfile>kuesa-iro2glasssemproperties.html</anchorfile>
            <anchor>reflectionOuterFilter-prop</anchor>
            <arglist>(QVector3D )</arglist>
        </member>
        <member kind="function" protection="public" virtualness="non" static="no">
            <type>void</type>
            <name>usesNormalMapChanged</name>
            <anchorfile>kuesa-iro2glasssemproperties.html</anchorfile>
            <anchor>usesNormalMap-prop</anchor>
            <arglist>(bool )</arglist>
        </member>
        <member kind="function" protection="public" virtualness="non" static="no">
            <type>void</type>
            <name>normalMapChanged</name>
            <anchorfile>kuesa-iro2glasssemproperties.html</anchorfile>
            <anchor>normalMap-prop</anchor>
            <arglist>(Qt3DRender::QAbstractTexture *)</arglist>
        </member>
        <member kind="function" protection="public" virtualness="non" static="no">
            <type>void</type>
            <name>normalMapGainChanged</name>
            <anchorfile>kuesa-iro2glasssemproperties.html</anchorfile>
            <anchor>normalMapGain-prop</anchor>
            <arglist>(float )</arglist>
        </member>
        <member kind="function" protection="public" virtualness="non" static="no">
            <type>void</type>
            <name>normalScalingChanged</name>
            <anchorfile>kuesa-iro2glasssemproperties.html</anchorfile>
            <anchor>normalScaling-prop</anchor>
            <arglist>(QVector3D )</arglist>
        </member>
        <member kind="function" protection="public" virtualness="non" static="no">
            <type>void</type>
            <name>normalDisturbChanged</name>
            <anchorfile>kuesa-iro2glasssemproperties.html</anchorfile>
            <anchor>normalDisturb-prop</anchor>
            <arglist>(QVector2D )</arglist>
        </member>
        <member kind="function" protection="public" virtualness="non" static="no">
            <type>void</type>
            <name>postVertexColorChanged</name>
            <anchorfile>kuesa-iro2glasssemproperties.html</anchorfile>
            <anchor>postVertexColor-prop</anchor>
            <arglist>(float )</arglist>
        </member>
        <member kind="function" protection="public" virtualness="non" static="no">
            <type>void</type>
            <name>postGainChanged</name>
            <anchorfile>kuesa-iro2glasssemproperties.html</anchorfile>
            <anchor>postGain-prop</anchor>
            <arglist>(float )</arglist>
        </member>
        <member kind="function" protection="public" virtualness="non" static="no">
            <type>void</type>
            <name>gltfYUpChanged</name>
            <anchorfile>kuesa-iro2glasssemproperties.html</anchorfile>
            <anchor>gltfYUp-prop</anchor>
            <arglist>(bool )</arglist>
        </member>
    </compound>
    <compound kind="class">
        <name>Kuesa::Iro2MatteAlphaEffect</name>
        <filename>kuesa-iro2mattealphaeffect.html</filename>
        <base>GLTF2MaterialEffect</base>
    </compound>
    <compound kind="class">
        <name>Kuesa::Iro2MatteAlphaMaterial</name>
        <filename>kuesa-iro2mattealphamaterial.html</filename>
        <base>GLTF2Material</base>
        <member kind="property" type="Kuesa::Iro2MatteAlphaProperties*">
            <name>materialProperties</name>
            <anchorfile>kuesa-iro2mattealphamaterial.html</anchorfile>
            <anchor>materialProperties-prop</anchor>
            <arglist></arglist>
        </member>
        <member kind="function" protection="public" virtualness="non" static="no">
            <type>Kuesa::Iro2MatteAlphaProperties *</type>
            <name>materialProperties</name>
            <anchorfile>kuesa-iro2mattealphamaterial.html</anchorfile>
            <anchor>materialProperties-prop</anchor>
            <arglist>() const const</arglist>
        </member>
        <member kind="function" protection="public" virtualness="non" static="no">
            <type>void</type>
            <name>setMaterialProperties</name>
            <anchorfile>kuesa-iro2mattealphamaterial.html</anchorfile>
            <anchor>materialProperties-prop</anchor>
            <arglist>(Kuesa::Iro2MatteAlphaProperties *materialProperties)</arglist>
        </member>
        <member kind="function" protection="public" virtualness="non" static="no">
            <type>void</type>
            <name>setMaterialProperties</name>
            <anchorfile>kuesa-iro2mattealphamaterial.html</anchorfile>
            <anchor>materialProperties-prop</anchor>
            <arglist>(Kuesa::GLTF2MaterialProperties *materialProperties)</arglist>
        </member>
        <member kind="function" protection="public" virtualness="non" static="no">
            <type>void</type>
            <name>materialPropertiesChanged</name>
            <anchorfile>kuesa-iro2mattealphamaterial.html</anchorfile>
            <anchor>materialProperties-prop</anchor>
            <arglist>(Kuesa::Iro2MatteAlphaProperties *materialProperties)</arglist>
        </member>
    </compound>
    <compound kind="class">
        <name>Kuesa::Iro2MatteAlphaProperties</name>
        <filename>kuesa-iro2mattealphaproperties.html</filename>
        <base>GLTF2MaterialProperties</base>
        <member kind="property" type="bool">
            <name>usesMatteMap</name>
            <anchorfile>kuesa-iro2mattealphaproperties.html</anchorfile>
            <anchor>usesMatteMap-prop</anchor>
            <arglist></arglist>
        </member>
        <member kind="property" type="float">
            <name>matteGain</name>
            <anchorfile>kuesa-iro2mattealphaproperties.html</anchorfile>
            <anchor>matteGain-prop</anchor>
            <arglist></arglist>
        </member>
        <member kind="property" type="QVector3D">
            <name>matteInnerFilter</name>
            <anchorfile>kuesa-iro2mattealphaproperties.html</anchorfile>
            <anchor>matteInnerFilter-prop</anchor>
            <arglist></arglist>
        </member>
        <member kind="property" type="QVector3D">
            <name>matteOuterFilter</name>
            <anchorfile>kuesa-iro2mattealphaproperties.html</anchorfile>
            <anchor>matteOuterFilter-prop</anchor>
            <arglist></arglist>
        </member>
        <member kind="property" type="QVector2D">
            <name>uvOffset</name>
            <anchorfile>kuesa-iro2mattealphaproperties.html</anchorfile>
            <anchor>uvOffset-prop</anchor>
            <arglist></arglist>
        </member>
        <member kind="property" type="float">
            <name>innerAlpha</name>
            <anchorfile>kuesa-iro2mattealphaproperties.html</anchorfile>
            <anchor>innerAlpha-prop</anchor>
            <arglist></arglist>
        </member>
        <member kind="property" type="float">
            <name>outerAlpha</name>
            <anchorfile>kuesa-iro2mattealphaproperties.html</anchorfile>
            <anchor>outerAlpha-prop</anchor>
            <arglist></arglist>
        </member>
        <member kind="property" type="float">
            <name>alphaGain</name>
            <anchorfile>kuesa-iro2mattealphaproperties.html</anchorfile>
            <anchor>alphaGain-prop</anchor>
            <arglist></arglist>
        </member>
        <member kind="property" type="bool">
            <name>usesNormalMap</name>
            <anchorfile>kuesa-iro2mattealphaproperties.html</anchorfile>
            <anchor>usesNormalMap-prop</anchor>
            <arglist></arglist>
        </member>
        <member kind="property" type="float">
            <name>normalMapGain</name>
            <anchorfile>kuesa-iro2mattealphaproperties.html</anchorfile>
            <anchor>normalMapGain-prop</anchor>
            <arglist></arglist>
        </member>
        <member kind="property" type="QVector3D">
            <name>normalScaling</name>
            <anchorfile>kuesa-iro2mattealphaproperties.html</anchorfile>
            <anchor>normalScaling-prop</anchor>
            <arglist></arglist>
        </member>
        <member kind="property" type="QVector2D">
            <name>normalDisturb</name>
            <anchorfile>kuesa-iro2mattealphaproperties.html</anchorfile>
            <anchor>normalDisturb-prop</anchor>
            <arglist></arglist>
        </member>
        <member kind="property" type="float">
            <name>postVertexColor</name>
            <anchorfile>kuesa-iro2mattealphaproperties.html</anchorfile>
            <anchor>postVertexColor-prop</anchor>
            <arglist></arglist>
        </member>
        <member kind="property" type="QVector3D">
            <name>postHemiFilter</name>
            <anchorfile>kuesa-iro2mattealphaproperties.html</anchorfile>
            <anchor>postHemiFilter-prop</anchor>
            <arglist></arglist>
        </member>
        <member kind="property" type="float">
            <name>postGain</name>
            <anchorfile>kuesa-iro2mattealphaproperties.html</anchorfile>
            <anchor>postGain-prop</anchor>
            <arglist></arglist>
        </member>
        <member kind="property" type="bool">
            <name>gltfYUp</name>
            <anchorfile>kuesa-iro2mattealphaproperties.html</anchorfile>
            <anchor>gltfYUp-prop</anchor>
            <arglist></arglist>
        </member>
        <member kind="function" protection="public" virtualness="non" static="no">
            <type>bool</type>
            <name>usesMatteMap</name>
            <anchorfile>kuesa-iro2mattealphaproperties.html</anchorfile>
            <anchor>usesMatteMap-prop</anchor>
            <arglist>() const const</arglist>
        </member>
        <member kind="function" protection="public" virtualness="non" static="no">
            <type>Qt3DRender::QAbstractTexture *</type>
            <name>matteMap</name>
            <anchorfile>kuesa-iro2mattealphaproperties.html</anchorfile>
            <anchor>matteMap-prop</anchor>
            <arglist>() const const</arglist>
        </member>
        <member kind="function" protection="public" virtualness="non" static="no">
            <type>float</type>
            <name>matteGain</name>
            <anchorfile>kuesa-iro2mattealphaproperties.html</anchorfile>
            <anchor>matteGain-prop</anchor>
            <arglist>() const const</arglist>
        </member>
        <member kind="function" protection="public" virtualness="non" static="no">
            <type>QVector3D</type>
            <name>matteInnerFilter</name>
            <anchorfile>kuesa-iro2mattealphaproperties.html</anchorfile>
            <anchor>matteInnerFilter-prop</anchor>
            <arglist>() const const</arglist>
        </member>
        <member kind="function" protection="public" virtualness="non" static="no">
            <type>QVector3D</type>
            <name>matteOuterFilter</name>
            <anchorfile>kuesa-iro2mattealphaproperties.html</anchorfile>
            <anchor>matteOuterFilter-prop</anchor>
            <arglist>() const const</arglist>
        </member>
        <member kind="function" protection="public" virtualness="non" static="no">
            <type>QVector2D</type>
            <name>uvOffset</name>
            <anchorfile>kuesa-iro2mattealphaproperties.html</anchorfile>
            <anchor>uvOffset-prop</anchor>
            <arglist>() const const</arglist>
        </member>
        <member kind="function" protection="public" virtualness="non" static="no">
            <type>float</type>
            <name>innerAlpha</name>
            <anchorfile>kuesa-iro2mattealphaproperties.html</anchorfile>
            <anchor>innerAlpha-prop</anchor>
            <arglist>() const const</arglist>
        </member>
        <member kind="function" protection="public" virtualness="non" static="no">
            <type>float</type>
            <name>outerAlpha</name>
            <anchorfile>kuesa-iro2mattealphaproperties.html</anchorfile>
            <anchor>outerAlpha-prop</anchor>
            <arglist>() const const</arglist>
        </member>
        <member kind="function" protection="public" virtualness="non" static="no">
            <type>float</type>
            <name>alphaGain</name>
            <anchorfile>kuesa-iro2mattealphaproperties.html</anchorfile>
            <anchor>alphaGain-prop</anchor>
            <arglist>() const const</arglist>
        </member>
        <member kind="function" protection="public" virtualness="non" static="no">
            <type>bool</type>
            <name>usesNormalMap</name>
            <anchorfile>kuesa-iro2mattealphaproperties.html</anchorfile>
            <anchor>usesNormalMap-prop</anchor>
            <arglist>() const const</arglist>
        </member>
        <member kind="function" protection="public" virtualness="non" static="no">
            <type>Qt3DRender::QAbstractTexture *</type>
            <name>normalMap</name>
            <anchorfile>kuesa-iro2mattealphaproperties.html</anchorfile>
            <anchor>normalMap-prop</anchor>
            <arglist>() const const</arglist>
        </member>
        <member kind="function" protection="public" virtualness="non" static="no">
            <type>float</type>
            <name>normalMapGain</name>
            <anchorfile>kuesa-iro2mattealphaproperties.html</anchorfile>
            <anchor>normalMapGain-prop</anchor>
            <arglist>() const const</arglist>
        </member>
        <member kind="function" protection="public" virtualness="non" static="no">
            <type>QVector3D</type>
            <name>normalScaling</name>
            <anchorfile>kuesa-iro2mattealphaproperties.html</anchorfile>
            <anchor>normalScaling-prop</anchor>
            <arglist>() const const</arglist>
        </member>
        <member kind="function" protection="public" virtualness="non" static="no">
            <type>QVector2D</type>
            <name>normalDisturb</name>
            <anchorfile>kuesa-iro2mattealphaproperties.html</anchorfile>
            <anchor>normalDisturb-prop</anchor>
            <arglist>() const const</arglist>
        </member>
        <member kind="function" protection="public" virtualness="non" static="no">
            <type>float</type>
            <name>postVertexColor</name>
            <anchorfile>kuesa-iro2mattealphaproperties.html</anchorfile>
            <anchor>postVertexColor-prop</anchor>
            <arglist>() const const</arglist>
        </member>
        <member kind="function" protection="public" virtualness="non" static="no">
            <type>QVector3D</type>
            <name>postHemiFilter</name>
            <anchorfile>kuesa-iro2mattealphaproperties.html</anchorfile>
            <anchor>postHemiFilter-prop</anchor>
            <arglist>() const const</arglist>
        </member>
        <member kind="function" protection="public" virtualness="non" static="no">
            <type>float</type>
            <name>postGain</name>
            <anchorfile>kuesa-iro2mattealphaproperties.html</anchorfile>
            <anchor>postGain-prop</anchor>
            <arglist>() const const</arglist>
        </member>
        <member kind="function" protection="public" virtualness="non" static="no">
            <type>bool</type>
            <name>gltfYUp</name>
            <anchorfile>kuesa-iro2mattealphaproperties.html</anchorfile>
            <anchor>gltfYUp-prop</anchor>
            <arglist>() const const</arglist>
        </member>
        <member kind="function" protection="public" virtualness="non" static="no">
            <type>void</type>
            <name>setUsesMatteMap</name>
            <anchorfile>kuesa-iro2mattealphaproperties.html</anchorfile>
            <anchor>usesMatteMap-prop</anchor>
            <arglist>(bool usesMatteMap)</arglist>
        </member>
        <member kind="function" protection="public" virtualness="non" static="no">
            <type>void</type>
            <name>setMatteMap</name>
            <anchorfile>kuesa-iro2mattealphaproperties.html</anchorfile>
            <anchor>matteMap-prop</anchor>
            <arglist>(Qt3DRender::QAbstractTexture *matteMap)</arglist>
        </member>
        <member kind="function" protection="public" virtualness="non" static="no">
            <type>void</type>
            <name>setMatteGain</name>
            <anchorfile>kuesa-iro2mattealphaproperties.html</anchorfile>
            <anchor>matteGain-prop</anchor>
            <arglist>(float matteGain)</arglist>
        </member>
        <member kind="function" protection="public" virtualness="non" static="no">
            <type>void</type>
            <name>setMatteInnerFilter</name>
            <anchorfile>kuesa-iro2mattealphaproperties.html</anchorfile>
            <anchor>matteInnerFilter-prop</anchor>
            <arglist>(const QVector3D &amp;matteInnerFilter)</arglist>
        </member>
        <member kind="function" protection="public" virtualness="non" static="no">
            <type>void</type>
            <name>setMatteOuterFilter</name>
            <anchorfile>kuesa-iro2mattealphaproperties.html</anchorfile>
            <anchor>matteOuterFilter-prop</anchor>
            <arglist>(const QVector3D &amp;matteOuterFilter)</arglist>
        </member>
        <member kind="function" protection="public" virtualness="non" static="no">
            <type>void</type>
            <name>setUvOffset</name>
            <anchorfile>kuesa-iro2mattealphaproperties.html</anchorfile>
            <anchor>uvOffset-prop</anchor>
            <arglist>(const QVector2D &amp;uvOffset)</arglist>
        </member>
        <member kind="function" protection="public" virtualness="non" static="no">
            <type>void</type>
            <name>setInnerAlpha</name>
            <anchorfile>kuesa-iro2mattealphaproperties.html</anchorfile>
            <anchor>innerAlpha-prop</anchor>
            <arglist>(float innerAlpha)</arglist>
        </member>
        <member kind="function" protection="public" virtualness="non" static="no">
            <type>void</type>
            <name>setOuterAlpha</name>
            <anchorfile>kuesa-iro2mattealphaproperties.html</anchorfile>
            <anchor>outerAlpha-prop</anchor>
            <arglist>(float outerAlpha)</arglist>
        </member>
        <member kind="function" protection="public" virtualness="non" static="no">
            <type>void</type>
            <name>setAlphaGain</name>
            <anchorfile>kuesa-iro2mattealphaproperties.html</anchorfile>
            <anchor>alphaGain-prop</anchor>
            <arglist>(float alphaGain)</arglist>
        </member>
        <member kind="function" protection="public" virtualness="non" static="no">
            <type>void</type>
            <name>setUsesNormalMap</name>
            <anchorfile>kuesa-iro2mattealphaproperties.html</anchorfile>
            <anchor>usesNormalMap-prop</anchor>
            <arglist>(bool usesNormalMap)</arglist>
        </member>
        <member kind="function" protection="public" virtualness="non" static="no">
            <type>void</type>
            <name>setNormalMap</name>
            <anchorfile>kuesa-iro2mattealphaproperties.html</anchorfile>
            <anchor>normalMap-prop</anchor>
            <arglist>(Qt3DRender::QAbstractTexture *normalMap)</arglist>
        </member>
        <member kind="function" protection="public" virtualness="non" static="no">
            <type>void</type>
            <name>setNormalMapGain</name>
            <anchorfile>kuesa-iro2mattealphaproperties.html</anchorfile>
            <anchor>normalMapGain-prop</anchor>
            <arglist>(float normalMapGain)</arglist>
        </member>
        <member kind="function" protection="public" virtualness="non" static="no">
            <type>void</type>
            <name>setNormalScaling</name>
            <anchorfile>kuesa-iro2mattealphaproperties.html</anchorfile>
            <anchor>normalScaling-prop</anchor>
            <arglist>(const QVector3D &amp;normalScaling)</arglist>
        </member>
        <member kind="function" protection="public" virtualness="non" static="no">
            <type>void</type>
            <name>setNormalDisturb</name>
            <anchorfile>kuesa-iro2mattealphaproperties.html</anchorfile>
            <anchor>normalDisturb-prop</anchor>
            <arglist>(const QVector2D &amp;normalDisturb)</arglist>
        </member>
        <member kind="function" protection="public" virtualness="non" static="no">
            <type>void</type>
            <name>setPostVertexColor</name>
            <anchorfile>kuesa-iro2mattealphaproperties.html</anchorfile>
            <anchor>postVertexColor-prop</anchor>
            <arglist>(float postVertexColor)</arglist>
        </member>
        <member kind="function" protection="public" virtualness="non" static="no">
            <type>void</type>
            <name>setPostHemiFilter</name>
            <anchorfile>kuesa-iro2mattealphaproperties.html</anchorfile>
            <anchor>postHemiFilter-prop</anchor>
            <arglist>(const QVector3D &amp;postHemiFilter)</arglist>
        </member>
        <member kind="function" protection="public" virtualness="non" static="no">
            <type>void</type>
            <name>setPostGain</name>
            <anchorfile>kuesa-iro2mattealphaproperties.html</anchorfile>
            <anchor>postGain-prop</anchor>
            <arglist>(float postGain)</arglist>
        </member>
        <member kind="function" protection="public" virtualness="non" static="no">
            <type>void</type>
            <name>setGltfYUp</name>
            <anchorfile>kuesa-iro2mattealphaproperties.html</anchorfile>
            <anchor>gltfYUp-prop</anchor>
            <arglist>(bool gltfYUp)</arglist>
        </member>
        <member kind="function" protection="public" virtualness="non" static="no">
            <type>void</type>
            <name>usesMatteMapChanged</name>
            <anchorfile>kuesa-iro2mattealphaproperties.html</anchorfile>
            <anchor>usesMatteMap-prop</anchor>
            <arglist>(bool )</arglist>
        </member>
        <member kind="function" protection="public" virtualness="non" static="no">
            <type>void</type>
            <name>matteMapChanged</name>
            <anchorfile>kuesa-iro2mattealphaproperties.html</anchorfile>
            <anchor>matteMap-prop</anchor>
            <arglist>(Qt3DRender::QAbstractTexture *)</arglist>
        </member>
        <member kind="function" protection="public" virtualness="non" static="no">
            <type>void</type>
            <name>matteGainChanged</name>
            <anchorfile>kuesa-iro2mattealphaproperties.html</anchorfile>
            <anchor>matteGain-prop</anchor>
            <arglist>(float )</arglist>
        </member>
        <member kind="function" protection="public" virtualness="non" static="no">
            <type>void</type>
            <name>matteInnerFilterChanged</name>
            <anchorfile>kuesa-iro2mattealphaproperties.html</anchorfile>
            <anchor>matteInnerFilter-prop</anchor>
            <arglist>(QVector3D )</arglist>
        </member>
        <member kind="function" protection="public" virtualness="non" static="no">
            <type>void</type>
            <name>matteOuterFilterChanged</name>
            <anchorfile>kuesa-iro2mattealphaproperties.html</anchorfile>
            <anchor>matteOuterFilter-prop</anchor>
            <arglist>(QVector3D )</arglist>
        </member>
        <member kind="function" protection="public" virtualness="non" static="no">
            <type>void</type>
            <name>uvOffsetChanged</name>
            <anchorfile>kuesa-iro2mattealphaproperties.html</anchorfile>
            <anchor>uvOffset-prop</anchor>
            <arglist>(QVector2D )</arglist>
        </member>
        <member kind="function" protection="public" virtualness="non" static="no">
            <type>void</type>
            <name>innerAlphaChanged</name>
            <anchorfile>kuesa-iro2mattealphaproperties.html</anchorfile>
            <anchor>innerAlpha-prop</anchor>
            <arglist>(float )</arglist>
        </member>
        <member kind="function" protection="public" virtualness="non" static="no">
            <type>void</type>
            <name>outerAlphaChanged</name>
            <anchorfile>kuesa-iro2mattealphaproperties.html</anchorfile>
            <anchor>outerAlpha-prop</anchor>
            <arglist>(float )</arglist>
        </member>
        <member kind="function" protection="public" virtualness="non" static="no">
            <type>void</type>
            <name>alphaGainChanged</name>
            <anchorfile>kuesa-iro2mattealphaproperties.html</anchorfile>
            <anchor>alphaGain-prop</anchor>
            <arglist>(float )</arglist>
        </member>
        <member kind="function" protection="public" virtualness="non" static="no">
            <type>void</type>
            <name>usesNormalMapChanged</name>
            <anchorfile>kuesa-iro2mattealphaproperties.html</anchorfile>
            <anchor>usesNormalMap-prop</anchor>
            <arglist>(bool )</arglist>
        </member>
        <member kind="function" protection="public" virtualness="non" static="no">
            <type>void</type>
            <name>normalMapChanged</name>
            <anchorfile>kuesa-iro2mattealphaproperties.html</anchorfile>
            <anchor>normalMap-prop</anchor>
            <arglist>(Qt3DRender::QAbstractTexture *)</arglist>
        </member>
        <member kind="function" protection="public" virtualness="non" static="no">
            <type>void</type>
            <name>normalMapGainChanged</name>
            <anchorfile>kuesa-iro2mattealphaproperties.html</anchorfile>
            <anchor>normalMapGain-prop</anchor>
            <arglist>(float )</arglist>
        </member>
        <member kind="function" protection="public" virtualness="non" static="no">
            <type>void</type>
            <name>normalScalingChanged</name>
            <anchorfile>kuesa-iro2mattealphaproperties.html</anchorfile>
            <anchor>normalScaling-prop</anchor>
            <arglist>(QVector3D )</arglist>
        </member>
        <member kind="function" protection="public" virtualness="non" static="no">
            <type>void</type>
            <name>normalDisturbChanged</name>
            <anchorfile>kuesa-iro2mattealphaproperties.html</anchorfile>
            <anchor>normalDisturb-prop</anchor>
            <arglist>(QVector2D )</arglist>
        </member>
        <member kind="function" protection="public" virtualness="non" static="no">
            <type>void</type>
            <name>postVertexColorChanged</name>
            <anchorfile>kuesa-iro2mattealphaproperties.html</anchorfile>
            <anchor>postVertexColor-prop</anchor>
            <arglist>(float )</arglist>
        </member>
        <member kind="function" protection="public" virtualness="non" static="no">
            <type>void</type>
            <name>postHemiFilterChanged</name>
            <anchorfile>kuesa-iro2mattealphaproperties.html</anchorfile>
            <anchor>postHemiFilter-prop</anchor>
            <arglist>(QVector3D )</arglist>
        </member>
        <member kind="function" protection="public" virtualness="non" static="no">
            <type>void</type>
            <name>postGainChanged</name>
            <anchorfile>kuesa-iro2mattealphaproperties.html</anchorfile>
            <anchor>postGain-prop</anchor>
            <arglist>(float )</arglist>
        </member>
        <member kind="function" protection="public" virtualness="non" static="no">
            <type>void</type>
            <name>gltfYUpChanged</name>
            <anchorfile>kuesa-iro2mattealphaproperties.html</anchorfile>
            <anchor>gltfYUp-prop</anchor>
            <arglist>(bool )</arglist>
        </member>
    </compound>
    <compound kind="class">
        <name>Kuesa::Iro2PlanarReflectionEquiRectEffect</name>
        <filename>kuesa-iro2planarreflectionequirecteffect.html</filename>
        <base>GLTF2MaterialEffect</base>
    </compound>
    <compound kind="class">
        <name>Kuesa::Iro2PlanarReflectionEquiRectMaterial</name>
        <filename>kuesa-iro2planarreflectionequirectmaterial.html</filename>
        <base>GLTF2Material</base>
        <member kind="property" type="Kuesa::Iro2PlanarReflectionEquiRectProperties*">
            <name>materialProperties</name>
            <anchorfile>kuesa-iro2planarreflectionequirectmaterial.html</anchorfile>
            <anchor>materialProperties-prop</anchor>
            <arglist></arglist>
        </member>
        <member kind="function" protection="public" virtualness="non" static="no">
            <type>Kuesa::Iro2PlanarReflectionEquiRectProperties *</type>
            <name>materialProperties</name>
            <anchorfile>kuesa-iro2planarreflectionequirectmaterial.html</anchorfile>
            <anchor>materialProperties-prop</anchor>
            <arglist>() const const</arglist>
        </member>
        <member kind="function" protection="public" virtualness="non" static="no">
            <type>void</type>
            <name>setMaterialProperties</name>
            <anchorfile>kuesa-iro2planarreflectionequirectmaterial.html</anchorfile>
            <anchor>materialProperties-prop</anchor>
            <arglist>(Kuesa::Iro2PlanarReflectionEquiRectProperties *materialProperties)</arglist>
        </member>
        <member kind="function" protection="public" virtualness="non" static="no">
            <type>void</type>
            <name>setMaterialProperties</name>
            <anchorfile>kuesa-iro2planarreflectionequirectmaterial.html</anchorfile>
            <anchor>materialProperties-prop</anchor>
            <arglist>(Kuesa::GLTF2MaterialProperties *materialProperties)</arglist>
        </member>
        <member kind="function" protection="public" virtualness="non" static="no">
            <type>void</type>
            <name>materialPropertiesChanged</name>
            <anchorfile>kuesa-iro2planarreflectionequirectmaterial.html</anchorfile>
            <anchor>materialProperties-prop</anchor>
            <arglist>(Kuesa::Iro2PlanarReflectionEquiRectProperties *materialProperties)</arglist>
        </member>
    </compound>
    <compound kind="class">
        <name>Kuesa::Iro2PlanarReflectionEquiRectProperties</name>
        <filename>kuesa-iro2planarreflectionequirectproperties.html</filename>
        <base>GLTF2MaterialProperties</base>
        <member kind="property" type="float">
            <name>reflectionGain</name>
            <anchorfile>kuesa-iro2planarreflectionequirectproperties.html</anchorfile>
            <anchor>reflectionGain-prop</anchor>
            <arglist></arglist>
        </member>
        <member kind="property" type="QVector3D">
            <name>reflectionInnerFilter</name>
            <anchorfile>kuesa-iro2planarreflectionequirectproperties.html</anchorfile>
            <anchor>reflectionInnerFilter-prop</anchor>
            <arglist></arglist>
        </member>
        <member kind="property" type="QVector3D">
            <name>reflectionOuterFilter</name>
            <anchorfile>kuesa-iro2planarreflectionequirectproperties.html</anchorfile>
            <anchor>reflectionOuterFilter-prop</anchor>
            <arglist></arglist>
        </member>
        <member kind="property" type="float">
            <name>innerAlpha</name>
            <anchorfile>kuesa-iro2planarreflectionequirectproperties.html</anchorfile>
            <anchor>innerAlpha-prop</anchor>
            <arglist></arglist>
        </member>
        <member kind="property" type="float">
            <name>outerAlpha</name>
            <anchorfile>kuesa-iro2planarreflectionequirectproperties.html</anchorfile>
            <anchor>outerAlpha-prop</anchor>
            <arglist></arglist>
        </member>
        <member kind="property" type="float">
            <name>alphaGain</name>
            <anchorfile>kuesa-iro2planarreflectionequirectproperties.html</anchorfile>
            <anchor>alphaGain-prop</anchor>
            <arglist></arglist>
        </member>
        <member kind="property" type="bool">
            <name>usesNormalMap</name>
            <anchorfile>kuesa-iro2planarreflectionequirectproperties.html</anchorfile>
            <anchor>usesNormalMap-prop</anchor>
            <arglist></arglist>
        </member>
        <member kind="property" type="float">
            <name>normalMapGain</name>
            <anchorfile>kuesa-iro2planarreflectionequirectproperties.html</anchorfile>
            <anchor>normalMapGain-prop</anchor>
            <arglist></arglist>
        </member>
        <member kind="property" type="QVector3D">
            <name>normalScaling</name>
            <anchorfile>kuesa-iro2planarreflectionequirectproperties.html</anchorfile>
            <anchor>normalScaling-prop</anchor>
            <arglist></arglist>
        </member>
        <member kind="property" type="QVector2D">
            <name>normalDisturb</name>
            <anchorfile>kuesa-iro2planarreflectionequirectproperties.html</anchorfile>
            <anchor>normalDisturb-prop</anchor>
            <arglist></arglist>
        </member>
        <member kind="property" type="float">
            <name>postVertexColor</name>
            <anchorfile>kuesa-iro2planarreflectionequirectproperties.html</anchorfile>
            <anchor>postVertexColor-prop</anchor>
            <arglist></arglist>
        </member>
        <member kind="property" type="float">
            <name>postGain</name>
            <anchorfile>kuesa-iro2planarreflectionequirectproperties.html</anchorfile>
            <anchor>postGain-prop</anchor>
            <arglist></arglist>
        </member>
        <member kind="property" type="bool">
            <name>gltfYUp</name>
            <anchorfile>kuesa-iro2planarreflectionequirectproperties.html</anchorfile>
            <anchor>gltfYUp-prop</anchor>
            <arglist></arglist>
        </member>
        <member kind="function" protection="public" virtualness="non" static="no">
            <type>float</type>
            <name>reflectionGain</name>
            <anchorfile>kuesa-iro2planarreflectionequirectproperties.html</anchorfile>
            <anchor>reflectionGain-prop</anchor>
            <arglist>() const const</arglist>
        </member>
        <member kind="function" protection="public" virtualness="non" static="no">
            <type>QVector3D</type>
            <name>reflectionInnerFilter</name>
            <anchorfile>kuesa-iro2planarreflectionequirectproperties.html</anchorfile>
            <anchor>reflectionInnerFilter-prop</anchor>
            <arglist>() const const</arglist>
        </member>
        <member kind="function" protection="public" virtualness="non" static="no">
            <type>QVector3D</type>
            <name>reflectionOuterFilter</name>
            <anchorfile>kuesa-iro2planarreflectionequirectproperties.html</anchorfile>
            <anchor>reflectionOuterFilter-prop</anchor>
            <arglist>() const const</arglist>
        </member>
        <member kind="function" protection="public" virtualness="non" static="no">
            <type>float</type>
            <name>innerAlpha</name>
            <anchorfile>kuesa-iro2planarreflectionequirectproperties.html</anchorfile>
            <anchor>innerAlpha-prop</anchor>
            <arglist>() const const</arglist>
        </member>
        <member kind="function" protection="public" virtualness="non" static="no">
            <type>float</type>
            <name>outerAlpha</name>
            <anchorfile>kuesa-iro2planarreflectionequirectproperties.html</anchorfile>
            <anchor>outerAlpha-prop</anchor>
            <arglist>() const const</arglist>
        </member>
        <member kind="function" protection="public" virtualness="non" static="no">
            <type>float</type>
            <name>alphaGain</name>
            <anchorfile>kuesa-iro2planarreflectionequirectproperties.html</anchorfile>
            <anchor>alphaGain-prop</anchor>
            <arglist>() const const</arglist>
        </member>
        <member kind="function" protection="public" virtualness="non" static="no">
            <type>bool</type>
            <name>usesNormalMap</name>
            <anchorfile>kuesa-iro2planarreflectionequirectproperties.html</anchorfile>
            <anchor>usesNormalMap-prop</anchor>
            <arglist>() const const</arglist>
        </member>
        <member kind="function" protection="public" virtualness="non" static="no">
            <type>Qt3DRender::QAbstractTexture *</type>
            <name>normalMap</name>
            <anchorfile>kuesa-iro2planarreflectionequirectproperties.html</anchorfile>
            <anchor>normalMap-prop</anchor>
            <arglist>() const const</arglist>
        </member>
        <member kind="function" protection="public" virtualness="non" static="no">
            <type>float</type>
            <name>normalMapGain</name>
            <anchorfile>kuesa-iro2planarreflectionequirectproperties.html</anchorfile>
            <anchor>normalMapGain-prop</anchor>
            <arglist>() const const</arglist>
        </member>
        <member kind="function" protection="public" virtualness="non" static="no">
            <type>QVector3D</type>
            <name>normalScaling</name>
            <anchorfile>kuesa-iro2planarreflectionequirectproperties.html</anchorfile>
            <anchor>normalScaling-prop</anchor>
            <arglist>() const const</arglist>
        </member>
        <member kind="function" protection="public" virtualness="non" static="no">
            <type>QVector2D</type>
            <name>normalDisturb</name>
            <anchorfile>kuesa-iro2planarreflectionequirectproperties.html</anchorfile>
            <anchor>normalDisturb-prop</anchor>
            <arglist>() const const</arglist>
        </member>
        <member kind="function" protection="public" virtualness="non" static="no">
            <type>float</type>
            <name>postVertexColor</name>
            <anchorfile>kuesa-iro2planarreflectionequirectproperties.html</anchorfile>
            <anchor>postVertexColor-prop</anchor>
            <arglist>() const const</arglist>
        </member>
        <member kind="function" protection="public" virtualness="non" static="no">
            <type>float</type>
            <name>postGain</name>
            <anchorfile>kuesa-iro2planarreflectionequirectproperties.html</anchorfile>
            <anchor>postGain-prop</anchor>
            <arglist>() const const</arglist>
        </member>
        <member kind="function" protection="public" virtualness="non" static="no">
            <type>bool</type>
            <name>gltfYUp</name>
            <anchorfile>kuesa-iro2planarreflectionequirectproperties.html</anchorfile>
            <anchor>gltfYUp-prop</anchor>
            <arglist>() const const</arglist>
        </member>
        <member kind="function" protection="public" virtualness="non" static="no">
            <type>void</type>
            <name>setReflectionGain</name>
            <anchorfile>kuesa-iro2planarreflectionequirectproperties.html</anchorfile>
            <anchor>reflectionGain-prop</anchor>
            <arglist>(float reflectionGain)</arglist>
        </member>
        <member kind="function" protection="public" virtualness="non" static="no">
            <type>void</type>
            <name>setReflectionInnerFilter</name>
            <anchorfile>kuesa-iro2planarreflectionequirectproperties.html</anchorfile>
            <anchor>reflectionInnerFilter-prop</anchor>
            <arglist>(const QVector3D &amp;reflectionInnerFilter)</arglist>
        </member>
        <member kind="function" protection="public" virtualness="non" static="no">
            <type>void</type>
            <name>setReflectionOuterFilter</name>
            <anchorfile>kuesa-iro2planarreflectionequirectproperties.html</anchorfile>
            <anchor>reflectionOuterFilter-prop</anchor>
            <arglist>(const QVector3D &amp;reflectionOuterFilter)</arglist>
        </member>
        <member kind="function" protection="public" virtualness="non" static="no">
            <type>void</type>
            <name>setInnerAlpha</name>
            <anchorfile>kuesa-iro2planarreflectionequirectproperties.html</anchorfile>
            <anchor>innerAlpha-prop</anchor>
            <arglist>(float innerAlpha)</arglist>
        </member>
        <member kind="function" protection="public" virtualness="non" static="no">
            <type>void</type>
            <name>setOuterAlpha</name>
            <anchorfile>kuesa-iro2planarreflectionequirectproperties.html</anchorfile>
            <anchor>outerAlpha-prop</anchor>
            <arglist>(float outerAlpha)</arglist>
        </member>
        <member kind="function" protection="public" virtualness="non" static="no">
            <type>void</type>
            <name>setAlphaGain</name>
            <anchorfile>kuesa-iro2planarreflectionequirectproperties.html</anchorfile>
            <anchor>alphaGain-prop</anchor>
            <arglist>(float alphaGain)</arglist>
        </member>
        <member kind="function" protection="public" virtualness="non" static="no">
            <type>void</type>
            <name>setUsesNormalMap</name>
            <anchorfile>kuesa-iro2planarreflectionequirectproperties.html</anchorfile>
            <anchor>usesNormalMap-prop</anchor>
            <arglist>(bool usesNormalMap)</arglist>
        </member>
        <member kind="function" protection="public" virtualness="non" static="no">
            <type>void</type>
            <name>setNormalMap</name>
            <anchorfile>kuesa-iro2planarreflectionequirectproperties.html</anchorfile>
            <anchor>normalMap-prop</anchor>
            <arglist>(Qt3DRender::QAbstractTexture *normalMap)</arglist>
        </member>
        <member kind="function" protection="public" virtualness="non" static="no">
            <type>void</type>
            <name>setNormalMapGain</name>
            <anchorfile>kuesa-iro2planarreflectionequirectproperties.html</anchorfile>
            <anchor>normalMapGain-prop</anchor>
            <arglist>(float normalMapGain)</arglist>
        </member>
        <member kind="function" protection="public" virtualness="non" static="no">
            <type>void</type>
            <name>setNormalScaling</name>
            <anchorfile>kuesa-iro2planarreflectionequirectproperties.html</anchorfile>
            <anchor>normalScaling-prop</anchor>
            <arglist>(const QVector3D &amp;normalScaling)</arglist>
        </member>
        <member kind="function" protection="public" virtualness="non" static="no">
            <type>void</type>
            <name>setNormalDisturb</name>
            <anchorfile>kuesa-iro2planarreflectionequirectproperties.html</anchorfile>
            <anchor>normalDisturb-prop</anchor>
            <arglist>(const QVector2D &amp;normalDisturb)</arglist>
        </member>
        <member kind="function" protection="public" virtualness="non" static="no">
            <type>void</type>
            <name>setPostVertexColor</name>
            <anchorfile>kuesa-iro2planarreflectionequirectproperties.html</anchorfile>
            <anchor>postVertexColor-prop</anchor>
            <arglist>(float postVertexColor)</arglist>
        </member>
        <member kind="function" protection="public" virtualness="non" static="no">
            <type>void</type>
            <name>setPostGain</name>
            <anchorfile>kuesa-iro2planarreflectionequirectproperties.html</anchorfile>
            <anchor>postGain-prop</anchor>
            <arglist>(float postGain)</arglist>
        </member>
        <member kind="function" protection="public" virtualness="non" static="no">
            <type>void</type>
            <name>setGltfYUp</name>
            <anchorfile>kuesa-iro2planarreflectionequirectproperties.html</anchorfile>
            <anchor>gltfYUp-prop</anchor>
            <arglist>(bool gltfYUp)</arglist>
        </member>
        <member kind="function" protection="public" virtualness="non" static="no">
            <type>void</type>
            <name>reflectionGainChanged</name>
            <anchorfile>kuesa-iro2planarreflectionequirectproperties.html</anchorfile>
            <anchor>reflectionGain-prop</anchor>
            <arglist>(float )</arglist>
        </member>
        <member kind="function" protection="public" virtualness="non" static="no">
            <type>void</type>
            <name>reflectionInnerFilterChanged</name>
            <anchorfile>kuesa-iro2planarreflectionequirectproperties.html</anchorfile>
            <anchor>reflectionInnerFilter-prop</anchor>
            <arglist>(QVector3D )</arglist>
        </member>
        <member kind="function" protection="public" virtualness="non" static="no">
            <type>void</type>
            <name>reflectionOuterFilterChanged</name>
            <anchorfile>kuesa-iro2planarreflectionequirectproperties.html</anchorfile>
            <anchor>reflectionOuterFilter-prop</anchor>
            <arglist>(QVector3D )</arglist>
        </member>
        <member kind="function" protection="public" virtualness="non" static="no">
            <type>void</type>
            <name>innerAlphaChanged</name>
            <anchorfile>kuesa-iro2planarreflectionequirectproperties.html</anchorfile>
            <anchor>innerAlpha-prop</anchor>
            <arglist>(float )</arglist>
        </member>
        <member kind="function" protection="public" virtualness="non" static="no">
            <type>void</type>
            <name>outerAlphaChanged</name>
            <anchorfile>kuesa-iro2planarreflectionequirectproperties.html</anchorfile>
            <anchor>outerAlpha-prop</anchor>
            <arglist>(float )</arglist>
        </member>
        <member kind="function" protection="public" virtualness="non" static="no">
            <type>void</type>
            <name>alphaGainChanged</name>
            <anchorfile>kuesa-iro2planarreflectionequirectproperties.html</anchorfile>
            <anchor>alphaGain-prop</anchor>
            <arglist>(float )</arglist>
        </member>
        <member kind="function" protection="public" virtualness="non" static="no">
            <type>void</type>
            <name>usesNormalMapChanged</name>
            <anchorfile>kuesa-iro2planarreflectionequirectproperties.html</anchorfile>
            <anchor>usesNormalMap-prop</anchor>
            <arglist>(bool )</arglist>
        </member>
        <member kind="function" protection="public" virtualness="non" static="no">
            <type>void</type>
            <name>normalMapChanged</name>
            <anchorfile>kuesa-iro2planarreflectionequirectproperties.html</anchorfile>
            <anchor>normalMap-prop</anchor>
            <arglist>(Qt3DRender::QAbstractTexture *)</arglist>
        </member>
        <member kind="function" protection="public" virtualness="non" static="no">
            <type>void</type>
            <name>normalMapGainChanged</name>
            <anchorfile>kuesa-iro2planarreflectionequirectproperties.html</anchorfile>
            <anchor>normalMapGain-prop</anchor>
            <arglist>(float )</arglist>
        </member>
        <member kind="function" protection="public" virtualness="non" static="no">
            <type>void</type>
            <name>normalScalingChanged</name>
            <anchorfile>kuesa-iro2planarreflectionequirectproperties.html</anchorfile>
            <anchor>normalScaling-prop</anchor>
            <arglist>(QVector3D )</arglist>
        </member>
        <member kind="function" protection="public" virtualness="non" static="no">
            <type>void</type>
            <name>normalDisturbChanged</name>
            <anchorfile>kuesa-iro2planarreflectionequirectproperties.html</anchorfile>
            <anchor>normalDisturb-prop</anchor>
            <arglist>(QVector2D )</arglist>
        </member>
        <member kind="function" protection="public" virtualness="non" static="no">
            <type>void</type>
            <name>postVertexColorChanged</name>
            <anchorfile>kuesa-iro2planarreflectionequirectproperties.html</anchorfile>
            <anchor>postVertexColor-prop</anchor>
            <arglist>(float )</arglist>
        </member>
        <member kind="function" protection="public" virtualness="non" static="no">
            <type>void</type>
            <name>postGainChanged</name>
            <anchorfile>kuesa-iro2planarreflectionequirectproperties.html</anchorfile>
            <anchor>postGain-prop</anchor>
            <arglist>(float )</arglist>
        </member>
        <member kind="function" protection="public" virtualness="non" static="no">
            <type>void</type>
            <name>gltfYUpChanged</name>
            <anchorfile>kuesa-iro2planarreflectionequirectproperties.html</anchorfile>
            <anchor>gltfYUp-prop</anchor>
            <arglist>(bool )</arglist>
        </member>
    </compound>
    <compound kind="class">
        <name>Kuesa::Iro2PlanarReflectionSemEffect</name>
        <filename>kuesa-iro2planarreflectionsemeffect.html</filename>
        <base>GLTF2MaterialEffect</base>
    </compound>
    <compound kind="class">
        <name>Kuesa::Iro2PlanarReflectionSemMaterial</name>
        <filename>kuesa-iro2planarreflectionsemmaterial.html</filename>
        <base>GLTF2Material</base>
        <member kind="property" type="Kuesa::Iro2PlanarReflectionSemProperties*">
            <name>materialProperties</name>
            <anchorfile>kuesa-iro2planarreflectionsemmaterial.html</anchorfile>
            <anchor>materialProperties-prop</anchor>
            <arglist></arglist>
        </member>
        <member kind="function" protection="public" virtualness="non" static="no">
            <type>Kuesa::Iro2PlanarReflectionSemProperties *</type>
            <name>materialProperties</name>
            <anchorfile>kuesa-iro2planarreflectionsemmaterial.html</anchorfile>
            <anchor>materialProperties-prop</anchor>
            <arglist>() const const</arglist>
        </member>
        <member kind="function" protection="public" virtualness="non" static="no">
            <type>void</type>
            <name>setMaterialProperties</name>
            <anchorfile>kuesa-iro2planarreflectionsemmaterial.html</anchorfile>
            <anchor>materialProperties-prop</anchor>
            <arglist>(Kuesa::Iro2PlanarReflectionSemProperties *materialProperties)</arglist>
        </member>
        <member kind="function" protection="public" virtualness="non" static="no">
            <type>void</type>
            <name>setMaterialProperties</name>
            <anchorfile>kuesa-iro2planarreflectionsemmaterial.html</anchorfile>
            <anchor>materialProperties-prop</anchor>
            <arglist>(Kuesa::GLTF2MaterialProperties *materialProperties)</arglist>
        </member>
        <member kind="function" protection="public" virtualness="non" static="no">
            <type>void</type>
            <name>materialPropertiesChanged</name>
            <anchorfile>kuesa-iro2planarreflectionsemmaterial.html</anchorfile>
            <anchor>materialProperties-prop</anchor>
            <arglist>(Kuesa::Iro2PlanarReflectionSemProperties *materialProperties)</arglist>
        </member>
    </compound>
    <compound kind="class">
        <name>Kuesa::Iro2PlanarReflectionSemProperties</name>
        <filename>kuesa-iro2planarreflectionsemproperties.html</filename>
        <base>GLTF2MaterialProperties</base>
        <member kind="property" type="float">
            <name>reflectionGain</name>
            <anchorfile>kuesa-iro2planarreflectionsemproperties.html</anchorfile>
            <anchor>reflectionGain-prop</anchor>
            <arglist></arglist>
        </member>
        <member kind="property" type="QVector3D">
            <name>reflectionInnerFilter</name>
            <anchorfile>kuesa-iro2planarreflectionsemproperties.html</anchorfile>
            <anchor>reflectionInnerFilter-prop</anchor>
            <arglist></arglist>
        </member>
        <member kind="property" type="QVector3D">
            <name>reflectionOuterFilter</name>
            <anchorfile>kuesa-iro2planarreflectionsemproperties.html</anchorfile>
            <anchor>reflectionOuterFilter-prop</anchor>
            <arglist></arglist>
        </member>
        <member kind="property" type="float">
            <name>innerAlpha</name>
            <anchorfile>kuesa-iro2planarreflectionsemproperties.html</anchorfile>
            <anchor>innerAlpha-prop</anchor>
            <arglist></arglist>
        </member>
        <member kind="property" type="float">
            <name>outerAlpha</name>
            <anchorfile>kuesa-iro2planarreflectionsemproperties.html</anchorfile>
            <anchor>outerAlpha-prop</anchor>
            <arglist></arglist>
        </member>
        <member kind="property" type="float">
            <name>alphaGain</name>
            <anchorfile>kuesa-iro2planarreflectionsemproperties.html</anchorfile>
            <anchor>alphaGain-prop</anchor>
            <arglist></arglist>
        </member>
        <member kind="property" type="bool">
            <name>usesNormalMap</name>
            <anchorfile>kuesa-iro2planarreflectionsemproperties.html</anchorfile>
            <anchor>usesNormalMap-prop</anchor>
            <arglist></arglist>
        </member>
        <member kind="property" type="float">
            <name>normalMapGain</name>
            <anchorfile>kuesa-iro2planarreflectionsemproperties.html</anchorfile>
            <anchor>normalMapGain-prop</anchor>
            <arglist></arglist>
        </member>
        <member kind="property" type="QVector3D">
            <name>normalScaling</name>
            <anchorfile>kuesa-iro2planarreflectionsemproperties.html</anchorfile>
            <anchor>normalScaling-prop</anchor>
            <arglist></arglist>
        </member>
        <member kind="property" type="QVector2D">
            <name>normalDisturb</name>
            <anchorfile>kuesa-iro2planarreflectionsemproperties.html</anchorfile>
            <anchor>normalDisturb-prop</anchor>
            <arglist></arglist>
        </member>
        <member kind="property" type="float">
            <name>postVertexColor</name>
            <anchorfile>kuesa-iro2planarreflectionsemproperties.html</anchorfile>
            <anchor>postVertexColor-prop</anchor>
            <arglist></arglist>
        </member>
        <member kind="property" type="float">
            <name>postGain</name>
            <anchorfile>kuesa-iro2planarreflectionsemproperties.html</anchorfile>
            <anchor>postGain-prop</anchor>
            <arglist></arglist>
        </member>
        <member kind="property" type="bool">
            <name>gltfYUp</name>
            <anchorfile>kuesa-iro2planarreflectionsemproperties.html</anchorfile>
            <anchor>gltfYUp-prop</anchor>
            <arglist></arglist>
        </member>
        <member kind="function" protection="public" virtualness="non" static="no">
            <type>float</type>
            <name>reflectionGain</name>
            <anchorfile>kuesa-iro2planarreflectionsemproperties.html</anchorfile>
            <anchor>reflectionGain-prop</anchor>
            <arglist>() const const</arglist>
        </member>
        <member kind="function" protection="public" virtualness="non" static="no">
            <type>QVector3D</type>
            <name>reflectionInnerFilter</name>
            <anchorfile>kuesa-iro2planarreflectionsemproperties.html</anchorfile>
            <anchor>reflectionInnerFilter-prop</anchor>
            <arglist>() const const</arglist>
        </member>
        <member kind="function" protection="public" virtualness="non" static="no">
            <type>QVector3D</type>
            <name>reflectionOuterFilter</name>
            <anchorfile>kuesa-iro2planarreflectionsemproperties.html</anchorfile>
            <anchor>reflectionOuterFilter-prop</anchor>
            <arglist>() const const</arglist>
        </member>
        <member kind="function" protection="public" virtualness="non" static="no">
            <type>float</type>
            <name>innerAlpha</name>
            <anchorfile>kuesa-iro2planarreflectionsemproperties.html</anchorfile>
            <anchor>innerAlpha-prop</anchor>
            <arglist>() const const</arglist>
        </member>
        <member kind="function" protection="public" virtualness="non" static="no">
            <type>float</type>
            <name>outerAlpha</name>
            <anchorfile>kuesa-iro2planarreflectionsemproperties.html</anchorfile>
            <anchor>outerAlpha-prop</anchor>
            <arglist>() const const</arglist>
        </member>
        <member kind="function" protection="public" virtualness="non" static="no">
            <type>float</type>
            <name>alphaGain</name>
            <anchorfile>kuesa-iro2planarreflectionsemproperties.html</anchorfile>
            <anchor>alphaGain-prop</anchor>
            <arglist>() const const</arglist>
        </member>
        <member kind="function" protection="public" virtualness="non" static="no">
            <type>bool</type>
            <name>usesNormalMap</name>
            <anchorfile>kuesa-iro2planarreflectionsemproperties.html</anchorfile>
            <anchor>usesNormalMap-prop</anchor>
            <arglist>() const const</arglist>
        </member>
        <member kind="function" protection="public" virtualness="non" static="no">
            <type>Qt3DRender::QAbstractTexture *</type>
            <name>normalMap</name>
            <anchorfile>kuesa-iro2planarreflectionsemproperties.html</anchorfile>
            <anchor>normalMap-prop</anchor>
            <arglist>() const const</arglist>
        </member>
        <member kind="function" protection="public" virtualness="non" static="no">
            <type>float</type>
            <name>normalMapGain</name>
            <anchorfile>kuesa-iro2planarreflectionsemproperties.html</anchorfile>
            <anchor>normalMapGain-prop</anchor>
            <arglist>() const const</arglist>
        </member>
        <member kind="function" protection="public" virtualness="non" static="no">
            <type>QVector3D</type>
            <name>normalScaling</name>
            <anchorfile>kuesa-iro2planarreflectionsemproperties.html</anchorfile>
            <anchor>normalScaling-prop</anchor>
            <arglist>() const const</arglist>
        </member>
        <member kind="function" protection="public" virtualness="non" static="no">
            <type>QVector2D</type>
            <name>normalDisturb</name>
            <anchorfile>kuesa-iro2planarreflectionsemproperties.html</anchorfile>
            <anchor>normalDisturb-prop</anchor>
            <arglist>() const const</arglist>
        </member>
        <member kind="function" protection="public" virtualness="non" static="no">
            <type>float</type>
            <name>postVertexColor</name>
            <anchorfile>kuesa-iro2planarreflectionsemproperties.html</anchorfile>
            <anchor>postVertexColor-prop</anchor>
            <arglist>() const const</arglist>
        </member>
        <member kind="function" protection="public" virtualness="non" static="no">
            <type>float</type>
            <name>postGain</name>
            <anchorfile>kuesa-iro2planarreflectionsemproperties.html</anchorfile>
            <anchor>postGain-prop</anchor>
            <arglist>() const const</arglist>
        </member>
        <member kind="function" protection="public" virtualness="non" static="no">
            <type>bool</type>
            <name>gltfYUp</name>
            <anchorfile>kuesa-iro2planarreflectionsemproperties.html</anchorfile>
            <anchor>gltfYUp-prop</anchor>
            <arglist>() const const</arglist>
        </member>
        <member kind="function" protection="public" virtualness="non" static="no">
            <type>void</type>
            <name>setReflectionGain</name>
            <anchorfile>kuesa-iro2planarreflectionsemproperties.html</anchorfile>
            <anchor>reflectionGain-prop</anchor>
            <arglist>(float reflectionGain)</arglist>
        </member>
        <member kind="function" protection="public" virtualness="non" static="no">
            <type>void</type>
            <name>setReflectionInnerFilter</name>
            <anchorfile>kuesa-iro2planarreflectionsemproperties.html</anchorfile>
            <anchor>reflectionInnerFilter-prop</anchor>
            <arglist>(const QVector3D &amp;reflectionInnerFilter)</arglist>
        </member>
        <member kind="function" protection="public" virtualness="non" static="no">
            <type>void</type>
            <name>setReflectionOuterFilter</name>
            <anchorfile>kuesa-iro2planarreflectionsemproperties.html</anchorfile>
            <anchor>reflectionOuterFilter-prop</anchor>
            <arglist>(const QVector3D &amp;reflectionOuterFilter)</arglist>
        </member>
        <member kind="function" protection="public" virtualness="non" static="no">
            <type>void</type>
            <name>setInnerAlpha</name>
            <anchorfile>kuesa-iro2planarreflectionsemproperties.html</anchorfile>
            <anchor>innerAlpha-prop</anchor>
            <arglist>(float innerAlpha)</arglist>
        </member>
        <member kind="function" protection="public" virtualness="non" static="no">
            <type>void</type>
            <name>setOuterAlpha</name>
            <anchorfile>kuesa-iro2planarreflectionsemproperties.html</anchorfile>
            <anchor>outerAlpha-prop</anchor>
            <arglist>(float outerAlpha)</arglist>
        </member>
        <member kind="function" protection="public" virtualness="non" static="no">
            <type>void</type>
            <name>setAlphaGain</name>
            <anchorfile>kuesa-iro2planarreflectionsemproperties.html</anchorfile>
            <anchor>alphaGain-prop</anchor>
            <arglist>(float alphaGain)</arglist>
        </member>
        <member kind="function" protection="public" virtualness="non" static="no">
            <type>void</type>
            <name>setUsesNormalMap</name>
            <anchorfile>kuesa-iro2planarreflectionsemproperties.html</anchorfile>
            <anchor>usesNormalMap-prop</anchor>
            <arglist>(bool usesNormalMap)</arglist>
        </member>
        <member kind="function" protection="public" virtualness="non" static="no">
            <type>void</type>
            <name>setNormalMap</name>
            <anchorfile>kuesa-iro2planarreflectionsemproperties.html</anchorfile>
            <anchor>normalMap-prop</anchor>
            <arglist>(Qt3DRender::QAbstractTexture *normalMap)</arglist>
        </member>
        <member kind="function" protection="public" virtualness="non" static="no">
            <type>void</type>
            <name>setNormalMapGain</name>
            <anchorfile>kuesa-iro2planarreflectionsemproperties.html</anchorfile>
            <anchor>normalMapGain-prop</anchor>
            <arglist>(float normalMapGain)</arglist>
        </member>
        <member kind="function" protection="public" virtualness="non" static="no">
            <type>void</type>
            <name>setNormalScaling</name>
            <anchorfile>kuesa-iro2planarreflectionsemproperties.html</anchorfile>
            <anchor>normalScaling-prop</anchor>
            <arglist>(const QVector3D &amp;normalScaling)</arglist>
        </member>
        <member kind="function" protection="public" virtualness="non" static="no">
            <type>void</type>
            <name>setNormalDisturb</name>
            <anchorfile>kuesa-iro2planarreflectionsemproperties.html</anchorfile>
            <anchor>normalDisturb-prop</anchor>
            <arglist>(const QVector2D &amp;normalDisturb)</arglist>
        </member>
        <member kind="function" protection="public" virtualness="non" static="no">
            <type>void</type>
            <name>setPostVertexColor</name>
            <anchorfile>kuesa-iro2planarreflectionsemproperties.html</anchorfile>
            <anchor>postVertexColor-prop</anchor>
            <arglist>(float postVertexColor)</arglist>
        </member>
        <member kind="function" protection="public" virtualness="non" static="no">
            <type>void</type>
            <name>setPostGain</name>
            <anchorfile>kuesa-iro2planarreflectionsemproperties.html</anchorfile>
            <anchor>postGain-prop</anchor>
            <arglist>(float postGain)</arglist>
        </member>
        <member kind="function" protection="public" virtualness="non" static="no">
            <type>void</type>
            <name>setGltfYUp</name>
            <anchorfile>kuesa-iro2planarreflectionsemproperties.html</anchorfile>
            <anchor>gltfYUp-prop</anchor>
            <arglist>(bool gltfYUp)</arglist>
        </member>
        <member kind="function" protection="public" virtualness="non" static="no">
            <type>void</type>
            <name>reflectionGainChanged</name>
            <anchorfile>kuesa-iro2planarreflectionsemproperties.html</anchorfile>
            <anchor>reflectionGain-prop</anchor>
            <arglist>(float )</arglist>
        </member>
        <member kind="function" protection="public" virtualness="non" static="no">
            <type>void</type>
            <name>reflectionInnerFilterChanged</name>
            <anchorfile>kuesa-iro2planarreflectionsemproperties.html</anchorfile>
            <anchor>reflectionInnerFilter-prop</anchor>
            <arglist>(QVector3D )</arglist>
        </member>
        <member kind="function" protection="public" virtualness="non" static="no">
            <type>void</type>
            <name>reflectionOuterFilterChanged</name>
            <anchorfile>kuesa-iro2planarreflectionsemproperties.html</anchorfile>
            <anchor>reflectionOuterFilter-prop</anchor>
            <arglist>(QVector3D )</arglist>
        </member>
        <member kind="function" protection="public" virtualness="non" static="no">
            <type>void</type>
            <name>innerAlphaChanged</name>
            <anchorfile>kuesa-iro2planarreflectionsemproperties.html</anchorfile>
            <anchor>innerAlpha-prop</anchor>
            <arglist>(float )</arglist>
        </member>
        <member kind="function" protection="public" virtualness="non" static="no">
            <type>void</type>
            <name>outerAlphaChanged</name>
            <anchorfile>kuesa-iro2planarreflectionsemproperties.html</anchorfile>
            <anchor>outerAlpha-prop</anchor>
            <arglist>(float )</arglist>
        </member>
        <member kind="function" protection="public" virtualness="non" static="no">
            <type>void</type>
            <name>alphaGainChanged</name>
            <anchorfile>kuesa-iro2planarreflectionsemproperties.html</anchorfile>
            <anchor>alphaGain-prop</anchor>
            <arglist>(float )</arglist>
        </member>
        <member kind="function" protection="public" virtualness="non" static="no">
            <type>void</type>
            <name>usesNormalMapChanged</name>
            <anchorfile>kuesa-iro2planarreflectionsemproperties.html</anchorfile>
            <anchor>usesNormalMap-prop</anchor>
            <arglist>(bool )</arglist>
        </member>
        <member kind="function" protection="public" virtualness="non" static="no">
            <type>void</type>
            <name>normalMapChanged</name>
            <anchorfile>kuesa-iro2planarreflectionsemproperties.html</anchorfile>
            <anchor>normalMap-prop</anchor>
            <arglist>(Qt3DRender::QAbstractTexture *)</arglist>
        </member>
        <member kind="function" protection="public" virtualness="non" static="no">
            <type>void</type>
            <name>normalMapGainChanged</name>
            <anchorfile>kuesa-iro2planarreflectionsemproperties.html</anchorfile>
            <anchor>normalMapGain-prop</anchor>
            <arglist>(float )</arglist>
        </member>
        <member kind="function" protection="public" virtualness="non" static="no">
            <type>void</type>
            <name>normalScalingChanged</name>
            <anchorfile>kuesa-iro2planarreflectionsemproperties.html</anchorfile>
            <anchor>normalScaling-prop</anchor>
            <arglist>(QVector3D )</arglist>
        </member>
        <member kind="function" protection="public" virtualness="non" static="no">
            <type>void</type>
            <name>normalDisturbChanged</name>
            <anchorfile>kuesa-iro2planarreflectionsemproperties.html</anchorfile>
            <anchor>normalDisturb-prop</anchor>
            <arglist>(QVector2D )</arglist>
        </member>
        <member kind="function" protection="public" virtualness="non" static="no">
            <type>void</type>
            <name>postVertexColorChanged</name>
            <anchorfile>kuesa-iro2planarreflectionsemproperties.html</anchorfile>
            <anchor>postVertexColor-prop</anchor>
            <arglist>(float )</arglist>
        </member>
        <member kind="function" protection="public" virtualness="non" static="no">
            <type>void</type>
            <name>postGainChanged</name>
            <anchorfile>kuesa-iro2planarreflectionsemproperties.html</anchorfile>
            <anchor>postGain-prop</anchor>
            <arglist>(float )</arglist>
        </member>
        <member kind="function" protection="public" virtualness="non" static="no">
            <type>void</type>
            <name>gltfYUpChanged</name>
            <anchorfile>kuesa-iro2planarreflectionsemproperties.html</anchorfile>
            <anchor>gltfYUp-prop</anchor>
            <arglist>(bool )</arglist>
        </member>
    </compound>
    <compound kind="class">
        <name>Kuesa::IroDiffuseAlphaEffect</name>
        <filename>kuesa-irodiffusealphaeffect.html</filename>
        <base>GLTF2MaterialEffect</base>
    </compound>
    <compound kind="class">
        <name>Kuesa::IroDiffuseAlphaMaterial</name>
        <filename>kuesa-irodiffusealphamaterial.html</filename>
        <base>GLTF2Material</base>
        <member kind="property" type="Kuesa::IroDiffuseAlphaProperties*">
            <name>materialProperties</name>
            <anchorfile>kuesa-irodiffusealphamaterial.html</anchorfile>
            <anchor>materialProperties-prop</anchor>
            <arglist></arglist>
        </member>
        <member kind="function" protection="public" virtualness="non" static="no">
            <type>Kuesa::IroDiffuseAlphaProperties *</type>
            <name>materialProperties</name>
            <anchorfile>kuesa-irodiffusealphamaterial.html</anchorfile>
            <anchor>materialProperties-prop</anchor>
            <arglist>() const const</arglist>
        </member>
        <member kind="function" protection="public" virtualness="non" static="no">
            <type>void</type>
            <name>setMaterialProperties</name>
            <anchorfile>kuesa-irodiffusealphamaterial.html</anchorfile>
            <anchor>materialProperties-prop</anchor>
            <arglist>(Kuesa::IroDiffuseAlphaProperties *materialProperties)</arglist>
        </member>
        <member kind="function" protection="public" virtualness="non" static="no">
            <type>void</type>
            <name>setMaterialProperties</name>
            <anchorfile>kuesa-irodiffusealphamaterial.html</anchorfile>
            <anchor>materialProperties-prop</anchor>
            <arglist>(Kuesa::GLTF2MaterialProperties *materialProperties)</arglist>
        </member>
        <member kind="function" protection="public" virtualness="non" static="no">
            <type>void</type>
            <name>materialPropertiesChanged</name>
            <anchorfile>kuesa-irodiffusealphamaterial.html</anchorfile>
            <anchor>materialProperties-prop</anchor>
            <arglist>(Kuesa::IroDiffuseAlphaProperties *materialProperties)</arglist>
        </member>
    </compound>
    <compound kind="class">
        <name>Kuesa::IroDiffuseAlphaProperties</name>
        <filename>kuesa-irodiffusealphaproperties.html</filename>
        <base>GLTF2MaterialProperties</base>
        <member kind="property" type="QVector3D">
            <name>normalScaling</name>
            <anchorfile>kuesa-irodiffusealphaproperties.html</anchorfile>
            <anchor>normalScaling-prop</anchor>
            <arglist></arglist>
        </member>
        <member kind="property" type="QVector2D">
            <name>normalDisturb</name>
            <anchorfile>kuesa-irodiffusealphaproperties.html</anchorfile>
            <anchor>normalDisturb-prop</anchor>
            <arglist></arglist>
        </member>
        <member kind="property" type="float">
            <name>postVertexColor</name>
            <anchorfile>kuesa-irodiffusealphaproperties.html</anchorfile>
            <anchor>postVertexColor-prop</anchor>
            <arglist></arglist>
        </member>
        <member kind="property" type="float">
            <name>postGain</name>
            <anchorfile>kuesa-irodiffusealphaproperties.html</anchorfile>
            <anchor>postGain-prop</anchor>
            <arglist></arglist>
        </member>
        <member kind="property" type="float">
            <name>reflectionGain</name>
            <anchorfile>kuesa-irodiffusealphaproperties.html</anchorfile>
            <anchor>reflectionGain-prop</anchor>
            <arglist></arglist>
        </member>
        <member kind="property" type="QVector3D">
            <name>reflectionInnerFilter</name>
            <anchorfile>kuesa-irodiffusealphaproperties.html</anchorfile>
            <anchor>reflectionInnerFilter-prop</anchor>
            <arglist></arglist>
        </member>
        <member kind="property" type="QVector3D">
            <name>reflectionOuterFilter</name>
            <anchorfile>kuesa-irodiffusealphaproperties.html</anchorfile>
            <anchor>reflectionOuterFilter-prop</anchor>
            <arglist></arglist>
        </member>
        <member kind="property" type="bool">
            <name>usesReflectionMap</name>
            <anchorfile>kuesa-irodiffusealphaproperties.html</anchorfile>
            <anchor>usesReflectionMap-prop</anchor>
            <arglist></arglist>
        </member>
        <member kind="property" type="bool">
            <name>projectReflectionMap</name>
            <anchorfile>kuesa-irodiffusealphaproperties.html</anchorfile>
            <anchor>projectReflectionMap-prop</anchor>
            <arglist></arglist>
        </member>
        <member kind="property" type="float">
            <name>reflectionInnerAlpha</name>
            <anchorfile>kuesa-irodiffusealphaproperties.html</anchorfile>
            <anchor>reflectionInnerAlpha-prop</anchor>
            <arglist></arglist>
        </member>
        <member kind="property" type="float">
            <name>reflectionOuterAlpha</name>
            <anchorfile>kuesa-irodiffusealphaproperties.html</anchorfile>
            <anchor>reflectionOuterAlpha-prop</anchor>
            <arglist></arglist>
        </member>
        <member kind="property" type="float">
            <name>alphaGain</name>
            <anchorfile>kuesa-irodiffusealphaproperties.html</anchorfile>
            <anchor>alphaGain-prop</anchor>
            <arglist></arglist>
        </member>
        <member kind="function" protection="public" virtualness="non" static="no">
            <type>QVector3D</type>
            <name>normalScaling</name>
            <anchorfile>kuesa-irodiffusealphaproperties.html</anchorfile>
            <anchor>normalScaling-prop</anchor>
            <arglist>() const const</arglist>
        </member>
        <member kind="function" protection="public" virtualness="non" static="no">
            <type>QVector2D</type>
            <name>normalDisturb</name>
            <anchorfile>kuesa-irodiffusealphaproperties.html</anchorfile>
            <anchor>normalDisturb-prop</anchor>
            <arglist>() const const</arglist>
        </member>
        <member kind="function" protection="public" virtualness="non" static="no">
            <type>float</type>
            <name>postVertexColor</name>
            <anchorfile>kuesa-irodiffusealphaproperties.html</anchorfile>
            <anchor>postVertexColor-prop</anchor>
            <arglist>() const const</arglist>
        </member>
        <member kind="function" protection="public" virtualness="non" static="no">
            <type>float</type>
            <name>postGain</name>
            <anchorfile>kuesa-irodiffusealphaproperties.html</anchorfile>
            <anchor>postGain-prop</anchor>
            <arglist>() const const</arglist>
        </member>
        <member kind="function" protection="public" virtualness="non" static="no">
            <type>float</type>
            <name>reflectionGain</name>
            <anchorfile>kuesa-irodiffusealphaproperties.html</anchorfile>
            <anchor>reflectionGain-prop</anchor>
            <arglist>() const const</arglist>
        </member>
        <member kind="function" protection="public" virtualness="non" static="no">
            <type>Qt3DRender::QAbstractTexture *</type>
            <name>reflectionMap</name>
            <anchorfile>kuesa-irodiffusealphaproperties.html</anchorfile>
            <anchor>reflectionMap-prop</anchor>
            <arglist>() const const</arglist>
        </member>
        <member kind="function" protection="public" virtualness="non" static="no">
            <type>QVector3D</type>
            <name>reflectionInnerFilter</name>
            <anchorfile>kuesa-irodiffusealphaproperties.html</anchorfile>
            <anchor>reflectionInnerFilter-prop</anchor>
            <arglist>() const const</arglist>
        </member>
        <member kind="function" protection="public" virtualness="non" static="no">
            <type>QVector3D</type>
            <name>reflectionOuterFilter</name>
            <anchorfile>kuesa-irodiffusealphaproperties.html</anchorfile>
            <anchor>reflectionOuterFilter-prop</anchor>
            <arglist>() const const</arglist>
        </member>
        <member kind="function" protection="public" virtualness="non" static="no">
            <type>bool</type>
            <name>usesReflectionMap</name>
            <anchorfile>kuesa-irodiffusealphaproperties.html</anchorfile>
            <anchor>usesReflectionMap-prop</anchor>
            <arglist>() const const</arglist>
        </member>
        <member kind="function" protection="public" virtualness="non" static="no">
            <type>bool</type>
            <name>projectReflectionMap</name>
            <anchorfile>kuesa-irodiffusealphaproperties.html</anchorfile>
            <anchor>projectReflectionMap-prop</anchor>
            <arglist>() const const</arglist>
        </member>
        <member kind="function" protection="public" virtualness="non" static="no">
            <type>float</type>
            <name>reflectionInnerAlpha</name>
            <anchorfile>kuesa-irodiffusealphaproperties.html</anchorfile>
            <anchor>reflectionInnerAlpha-prop</anchor>
            <arglist>() const const</arglist>
        </member>
        <member kind="function" protection="public" virtualness="non" static="no">
            <type>float</type>
            <name>reflectionOuterAlpha</name>
            <anchorfile>kuesa-irodiffusealphaproperties.html</anchorfile>
            <anchor>reflectionOuterAlpha-prop</anchor>
            <arglist>() const const</arglist>
        </member>
        <member kind="function" protection="public" virtualness="non" static="no">
            <type>float</type>
            <name>alphaGain</name>
            <anchorfile>kuesa-irodiffusealphaproperties.html</anchorfile>
            <anchor>alphaGain-prop</anchor>
            <arglist>() const const</arglist>
        </member>
        <member kind="function" protection="public" virtualness="non" static="no">
            <type>void</type>
            <name>setNormalScaling</name>
            <anchorfile>kuesa-irodiffusealphaproperties.html</anchorfile>
            <anchor>normalScaling-prop</anchor>
            <arglist>(const QVector3D &amp;normalScaling)</arglist>
        </member>
        <member kind="function" protection="public" virtualness="non" static="no">
            <type>void</type>
            <name>setNormalDisturb</name>
            <anchorfile>kuesa-irodiffusealphaproperties.html</anchorfile>
            <anchor>normalDisturb-prop</anchor>
            <arglist>(const QVector2D &amp;normalDisturb)</arglist>
        </member>
        <member kind="function" protection="public" virtualness="non" static="no">
            <type>void</type>
            <name>setPostVertexColor</name>
            <anchorfile>kuesa-irodiffusealphaproperties.html</anchorfile>
            <anchor>postVertexColor-prop</anchor>
            <arglist>(float postVertexColor)</arglist>
        </member>
        <member kind="function" protection="public" virtualness="non" static="no">
            <type>void</type>
            <name>setPostGain</name>
            <anchorfile>kuesa-irodiffusealphaproperties.html</anchorfile>
            <anchor>postGain-prop</anchor>
            <arglist>(float postGain)</arglist>
        </member>
        <member kind="function" protection="public" virtualness="non" static="no">
            <type>void</type>
            <name>setReflectionGain</name>
            <anchorfile>kuesa-irodiffusealphaproperties.html</anchorfile>
            <anchor>reflectionGain-prop</anchor>
            <arglist>(float reflectionGain)</arglist>
        </member>
        <member kind="function" protection="public" virtualness="non" static="no">
            <type>void</type>
            <name>setReflectionMap</name>
            <anchorfile>kuesa-irodiffusealphaproperties.html</anchorfile>
            <anchor>reflectionMap-prop</anchor>
            <arglist>(Qt3DRender::QAbstractTexture *reflectionMap)</arglist>
        </member>
        <member kind="function" protection="public" virtualness="non" static="no">
            <type>void</type>
            <name>setReflectionInnerFilter</name>
            <anchorfile>kuesa-irodiffusealphaproperties.html</anchorfile>
            <anchor>reflectionInnerFilter-prop</anchor>
            <arglist>(const QVector3D &amp;reflectionInnerFilter)</arglist>
        </member>
        <member kind="function" protection="public" virtualness="non" static="no">
            <type>void</type>
            <name>setReflectionOuterFilter</name>
            <anchorfile>kuesa-irodiffusealphaproperties.html</anchorfile>
            <anchor>reflectionOuterFilter-prop</anchor>
            <arglist>(const QVector3D &amp;reflectionOuterFilter)</arglist>
        </member>
        <member kind="function" protection="public" virtualness="non" static="no">
            <type>void</type>
            <name>setUsesReflectionMap</name>
            <anchorfile>kuesa-irodiffusealphaproperties.html</anchorfile>
            <anchor>usesReflectionMap-prop</anchor>
            <arglist>(bool usesReflectionMap)</arglist>
        </member>
        <member kind="function" protection="public" virtualness="non" static="no">
            <type>void</type>
            <name>setProjectReflectionMap</name>
            <anchorfile>kuesa-irodiffusealphaproperties.html</anchorfile>
            <anchor>projectReflectionMap-prop</anchor>
            <arglist>(bool projectReflectionMap)</arglist>
        </member>
        <member kind="function" protection="public" virtualness="non" static="no">
            <type>void</type>
            <name>setReflectionInnerAlpha</name>
            <anchorfile>kuesa-irodiffusealphaproperties.html</anchorfile>
            <anchor>reflectionInnerAlpha-prop</anchor>
            <arglist>(float reflectionInnerAlpha)</arglist>
        </member>
        <member kind="function" protection="public" virtualness="non" static="no">
            <type>void</type>
            <name>setReflectionOuterAlpha</name>
            <anchorfile>kuesa-irodiffusealphaproperties.html</anchorfile>
            <anchor>reflectionOuterAlpha-prop</anchor>
            <arglist>(float reflectionOuterAlpha)</arglist>
        </member>
        <member kind="function" protection="public" virtualness="non" static="no">
            <type>void</type>
            <name>setAlphaGain</name>
            <anchorfile>kuesa-irodiffusealphaproperties.html</anchorfile>
            <anchor>alphaGain-prop</anchor>
            <arglist>(float alphaGain)</arglist>
        </member>
        <member kind="function" protection="public" virtualness="non" static="no">
            <type>void</type>
            <name>normalScalingChanged</name>
            <anchorfile>kuesa-irodiffusealphaproperties.html</anchorfile>
            <anchor>normalScaling-prop</anchor>
            <arglist>(QVector3D )</arglist>
        </member>
        <member kind="function" protection="public" virtualness="non" static="no">
            <type>void</type>
            <name>normalDisturbChanged</name>
            <anchorfile>kuesa-irodiffusealphaproperties.html</anchorfile>
            <anchor>normalDisturb-prop</anchor>
            <arglist>(QVector2D )</arglist>
        </member>
        <member kind="function" protection="public" virtualness="non" static="no">
            <type>void</type>
            <name>postVertexColorChanged</name>
            <anchorfile>kuesa-irodiffusealphaproperties.html</anchorfile>
            <anchor>postVertexColor-prop</anchor>
            <arglist>(float )</arglist>
        </member>
        <member kind="function" protection="public" virtualness="non" static="no">
            <type>void</type>
            <name>postGainChanged</name>
            <anchorfile>kuesa-irodiffusealphaproperties.html</anchorfile>
            <anchor>postGain-prop</anchor>
            <arglist>(float )</arglist>
        </member>
        <member kind="function" protection="public" virtualness="non" static="no">
            <type>void</type>
            <name>reflectionGainChanged</name>
            <anchorfile>kuesa-irodiffusealphaproperties.html</anchorfile>
            <anchor>reflectionGain-prop</anchor>
            <arglist>(float )</arglist>
        </member>
        <member kind="function" protection="public" virtualness="non" static="no">
            <type>void</type>
            <name>reflectionMapChanged</name>
            <anchorfile>kuesa-irodiffusealphaproperties.html</anchorfile>
            <anchor>reflectionMap-prop</anchor>
            <arglist>(Qt3DRender::QAbstractTexture *)</arglist>
        </member>
        <member kind="function" protection="public" virtualness="non" static="no">
            <type>void</type>
            <name>reflectionInnerFilterChanged</name>
            <anchorfile>kuesa-irodiffusealphaproperties.html</anchorfile>
            <anchor>reflectionInnerFilter-prop</anchor>
            <arglist>(QVector3D )</arglist>
        </member>
        <member kind="function" protection="public" virtualness="non" static="no">
            <type>void</type>
            <name>reflectionOuterFilterChanged</name>
            <anchorfile>kuesa-irodiffusealphaproperties.html</anchorfile>
            <anchor>reflectionOuterFilter-prop</anchor>
            <arglist>(QVector3D )</arglist>
        </member>
        <member kind="function" protection="public" virtualness="non" static="no">
            <type>void</type>
            <name>usesReflectionMapChanged</name>
            <anchorfile>kuesa-irodiffusealphaproperties.html</anchorfile>
            <anchor>usesReflectionMap-prop</anchor>
            <arglist>(bool )</arglist>
        </member>
        <member kind="function" protection="public" virtualness="non" static="no">
            <type>void</type>
            <name>projectReflectionMapChanged</name>
            <anchorfile>kuesa-irodiffusealphaproperties.html</anchorfile>
            <anchor>projectReflectionMap-prop</anchor>
            <arglist>(bool )</arglist>
        </member>
        <member kind="function" protection="public" virtualness="non" static="no">
            <type>void</type>
            <name>reflectionInnerAlphaChanged</name>
            <anchorfile>kuesa-irodiffusealphaproperties.html</anchorfile>
            <anchor>reflectionInnerAlpha-prop</anchor>
            <arglist>(float )</arglist>
        </member>
        <member kind="function" protection="public" virtualness="non" static="no">
            <type>void</type>
            <name>reflectionOuterAlphaChanged</name>
            <anchorfile>kuesa-irodiffusealphaproperties.html</anchorfile>
            <anchor>reflectionOuterAlpha-prop</anchor>
            <arglist>(float )</arglist>
        </member>
        <member kind="function" protection="public" virtualness="non" static="no">
            <type>void</type>
            <name>alphaGainChanged</name>
            <anchorfile>kuesa-irodiffusealphaproperties.html</anchorfile>
            <anchor>alphaGain-prop</anchor>
            <arglist>(float )</arglist>
        </member>
    </compound>
    <compound kind="class">
        <name>Kuesa::IroDiffuseEffect</name>
        <filename>kuesa-irodiffuseeffect.html</filename>
        <base>GLTF2MaterialEffect</base>
    </compound>
    <compound kind="class">
        <name>Kuesa::IroDiffuseHemiEffect</name>
        <filename>kuesa-irodiffusehemieffect.html</filename>
        <base>GLTF2MaterialEffect</base>
    </compound>
    <compound kind="class">
        <name>Kuesa::IroDiffuseHemiMaterial</name>
        <filename>kuesa-irodiffusehemimaterial.html</filename>
        <base>GLTF2Material</base>
        <member kind="property" type="Kuesa::IroDiffuseHemiProperties*">
            <name>materialProperties</name>
            <anchorfile>kuesa-irodiffusehemimaterial.html</anchorfile>
            <anchor>materialProperties-prop</anchor>
            <arglist></arglist>
        </member>
        <member kind="function" protection="public" virtualness="non" static="no">
            <type>Kuesa::IroDiffuseHemiProperties *</type>
            <name>materialProperties</name>
            <anchorfile>kuesa-irodiffusehemimaterial.html</anchorfile>
            <anchor>materialProperties-prop</anchor>
            <arglist>() const const</arglist>
        </member>
        <member kind="function" protection="public" virtualness="non" static="no">
            <type>void</type>
            <name>setMaterialProperties</name>
            <anchorfile>kuesa-irodiffusehemimaterial.html</anchorfile>
            <anchor>materialProperties-prop</anchor>
            <arglist>(Kuesa::IroDiffuseHemiProperties *materialProperties)</arglist>
        </member>
        <member kind="function" protection="public" virtualness="non" static="no">
            <type>void</type>
            <name>setMaterialProperties</name>
            <anchorfile>kuesa-irodiffusehemimaterial.html</anchorfile>
            <anchor>materialProperties-prop</anchor>
            <arglist>(Kuesa::GLTF2MaterialProperties *materialProperties)</arglist>
        </member>
        <member kind="function" protection="public" virtualness="non" static="no">
            <type>void</type>
            <name>materialPropertiesChanged</name>
            <anchorfile>kuesa-irodiffusehemimaterial.html</anchorfile>
            <anchor>materialProperties-prop</anchor>
            <arglist>(Kuesa::IroDiffuseHemiProperties *materialProperties)</arglist>
        </member>
    </compound>
    <compound kind="class">
        <name>Kuesa::IroDiffuseHemiProperties</name>
        <filename>kuesa-irodiffusehemiproperties.html</filename>
        <base>GLTF2MaterialProperties</base>
        <member kind="property" type="QVector3D">
            <name>normalScaling</name>
            <anchorfile>kuesa-irodiffusehemiproperties.html</anchorfile>
            <anchor>normalScaling-prop</anchor>
            <arglist></arglist>
        </member>
        <member kind="property" type="QVector2D">
            <name>normalDisturb</name>
            <anchorfile>kuesa-irodiffusehemiproperties.html</anchorfile>
            <anchor>normalDisturb-prop</anchor>
            <arglist></arglist>
        </member>
        <member kind="property" type="float">
            <name>postVertexColor</name>
            <anchorfile>kuesa-irodiffusehemiproperties.html</anchorfile>
            <anchor>postVertexColor-prop</anchor>
            <arglist></arglist>
        </member>
        <member kind="property" type="QVector3D">
            <name>postHemiFilter</name>
            <anchorfile>kuesa-irodiffusehemiproperties.html</anchorfile>
            <anchor>postHemiFilter-prop</anchor>
            <arglist></arglist>
        </member>
        <member kind="property" type="float">
            <name>postGain</name>
            <anchorfile>kuesa-irodiffusehemiproperties.html</anchorfile>
            <anchor>postGain-prop</anchor>
            <arglist></arglist>
        </member>
        <member kind="property" type="float">
            <name>reflectionGain</name>
            <anchorfile>kuesa-irodiffusehemiproperties.html</anchorfile>
            <anchor>reflectionGain-prop</anchor>
            <arglist></arglist>
        </member>
        <member kind="property" type="QVector3D">
            <name>reflectionInnerFilter</name>
            <anchorfile>kuesa-irodiffusehemiproperties.html</anchorfile>
            <anchor>reflectionInnerFilter-prop</anchor>
            <arglist></arglist>
        </member>
        <member kind="property" type="QVector3D">
            <name>reflectionOuterFilter</name>
            <anchorfile>kuesa-irodiffusehemiproperties.html</anchorfile>
            <anchor>reflectionOuterFilter-prop</anchor>
            <arglist></arglist>
        </member>
        <member kind="property" type="bool">
            <name>usesReflectionMap</name>
            <anchorfile>kuesa-irodiffusehemiproperties.html</anchorfile>
            <anchor>usesReflectionMap-prop</anchor>
            <arglist></arglist>
        </member>
        <member kind="property" type="bool">
            <name>projectReflectionMap</name>
            <anchorfile>kuesa-irodiffusehemiproperties.html</anchorfile>
            <anchor>projectReflectionMap-prop</anchor>
            <arglist></arglist>
        </member>
        <member kind="property" type="QVector3D">
            <name>diffuseInnerFilter</name>
            <anchorfile>kuesa-irodiffusehemiproperties.html</anchorfile>
            <anchor>diffuseInnerFilter-prop</anchor>
            <arglist></arglist>
        </member>
        <member kind="property" type="QVector3D">
            <name>diffuseOuterFilter</name>
            <anchorfile>kuesa-irodiffusehemiproperties.html</anchorfile>
            <anchor>diffuseOuterFilter-prop</anchor>
            <arglist></arglist>
        </member>
        <member kind="property" type="float">
            <name>diffuseGain</name>
            <anchorfile>kuesa-irodiffusehemiproperties.html</anchorfile>
            <anchor>diffuseGain-prop</anchor>
            <arglist></arglist>
        </member>
        <member kind="property" type="bool">
            <name>usesDiffuseMap</name>
            <anchorfile>kuesa-irodiffusehemiproperties.html</anchorfile>
            <anchor>usesDiffuseMap-prop</anchor>
            <arglist></arglist>
        </member>
        <member kind="property" type="bool">
            <name>gltfYUp</name>
            <anchorfile>kuesa-irodiffusehemiproperties.html</anchorfile>
            <anchor>gltfYUp-prop</anchor>
            <arglist></arglist>
        </member>
        <member kind="function" protection="public" virtualness="non" static="no">
            <type>QVector3D</type>
            <name>normalScaling</name>
            <anchorfile>kuesa-irodiffusehemiproperties.html</anchorfile>
            <anchor>normalScaling-prop</anchor>
            <arglist>() const const</arglist>
        </member>
        <member kind="function" protection="public" virtualness="non" static="no">
            <type>QVector2D</type>
            <name>normalDisturb</name>
            <anchorfile>kuesa-irodiffusehemiproperties.html</anchorfile>
            <anchor>normalDisturb-prop</anchor>
            <arglist>() const const</arglist>
        </member>
        <member kind="function" protection="public" virtualness="non" static="no">
            <type>float</type>
            <name>postVertexColor</name>
            <anchorfile>kuesa-irodiffusehemiproperties.html</anchorfile>
            <anchor>postVertexColor-prop</anchor>
            <arglist>() const const</arglist>
        </member>
        <member kind="function" protection="public" virtualness="non" static="no">
            <type>QVector3D</type>
            <name>postHemiFilter</name>
            <anchorfile>kuesa-irodiffusehemiproperties.html</anchorfile>
            <anchor>postHemiFilter-prop</anchor>
            <arglist>() const const</arglist>
        </member>
        <member kind="function" protection="public" virtualness="non" static="no">
            <type>float</type>
            <name>postGain</name>
            <anchorfile>kuesa-irodiffusehemiproperties.html</anchorfile>
            <anchor>postGain-prop</anchor>
            <arglist>() const const</arglist>
        </member>
        <member kind="function" protection="public" virtualness="non" static="no">
            <type>Qt3DRender::QAbstractTexture *</type>
            <name>reflectionMap</name>
            <anchorfile>kuesa-irodiffusehemiproperties.html</anchorfile>
            <anchor>reflectionMap-prop</anchor>
            <arglist>() const const</arglist>
        </member>
        <member kind="function" protection="public" virtualness="non" static="no">
            <type>float</type>
            <name>reflectionGain</name>
            <anchorfile>kuesa-irodiffusehemiproperties.html</anchorfile>
            <anchor>reflectionGain-prop</anchor>
            <arglist>() const const</arglist>
        </member>
        <member kind="function" protection="public" virtualness="non" static="no">
            <type>QVector3D</type>
            <name>reflectionInnerFilter</name>
            <anchorfile>kuesa-irodiffusehemiproperties.html</anchorfile>
            <anchor>reflectionInnerFilter-prop</anchor>
            <arglist>() const const</arglist>
        </member>
        <member kind="function" protection="public" virtualness="non" static="no">
            <type>QVector3D</type>
            <name>reflectionOuterFilter</name>
            <anchorfile>kuesa-irodiffusehemiproperties.html</anchorfile>
            <anchor>reflectionOuterFilter-prop</anchor>
            <arglist>() const const</arglist>
        </member>
        <member kind="function" protection="public" virtualness="non" static="no">
            <type>bool</type>
            <name>usesReflectionMap</name>
            <anchorfile>kuesa-irodiffusehemiproperties.html</anchorfile>
            <anchor>usesReflectionMap-prop</anchor>
            <arglist>() const const</arglist>
        </member>
        <member kind="function" protection="public" virtualness="non" static="no">
            <type>bool</type>
            <name>projectReflectionMap</name>
            <anchorfile>kuesa-irodiffusehemiproperties.html</anchorfile>
            <anchor>projectReflectionMap-prop</anchor>
            <arglist>() const const</arglist>
        </member>
        <member kind="function" protection="public" virtualness="non" static="no">
            <type>QVector3D</type>
            <name>diffuseInnerFilter</name>
            <anchorfile>kuesa-irodiffusehemiproperties.html</anchorfile>
            <anchor>diffuseInnerFilter-prop</anchor>
            <arglist>() const const</arglist>
        </member>
        <member kind="function" protection="public" virtualness="non" static="no">
            <type>QVector3D</type>
            <name>diffuseOuterFilter</name>
            <anchorfile>kuesa-irodiffusehemiproperties.html</anchorfile>
            <anchor>diffuseOuterFilter-prop</anchor>
            <arglist>() const const</arglist>
        </member>
        <member kind="function" protection="public" virtualness="non" static="no">
            <type>Qt3DRender::QAbstractTexture *</type>
            <name>diffuseMap</name>
            <anchorfile>kuesa-irodiffusehemiproperties.html</anchorfile>
            <anchor>diffuseMap-prop</anchor>
            <arglist>() const const</arglist>
        </member>
        <member kind="function" protection="public" virtualness="non" static="no">
            <type>float</type>
            <name>diffuseGain</name>
            <anchorfile>kuesa-irodiffusehemiproperties.html</anchorfile>
            <anchor>diffuseGain-prop</anchor>
            <arglist>() const const</arglist>
        </member>
        <member kind="function" protection="public" virtualness="non" static="no">
            <type>bool</type>
            <name>usesDiffuseMap</name>
            <anchorfile>kuesa-irodiffusehemiproperties.html</anchorfile>
            <anchor>usesDiffuseMap-prop</anchor>
            <arglist>() const const</arglist>
        </member>
        <member kind="function" protection="public" virtualness="non" static="no">
            <type>bool</type>
            <name>gltfYUp</name>
            <anchorfile>kuesa-irodiffusehemiproperties.html</anchorfile>
            <anchor>gltfYUp-prop</anchor>
            <arglist>() const const</arglist>
        </member>
        <member kind="function" protection="public" virtualness="non" static="no">
            <type>void</type>
            <name>setNormalScaling</name>
            <anchorfile>kuesa-irodiffusehemiproperties.html</anchorfile>
            <anchor>normalScaling-prop</anchor>
            <arglist>(const QVector3D &amp;normalScaling)</arglist>
        </member>
        <member kind="function" protection="public" virtualness="non" static="no">
            <type>void</type>
            <name>setNormalDisturb</name>
            <anchorfile>kuesa-irodiffusehemiproperties.html</anchorfile>
            <anchor>normalDisturb-prop</anchor>
            <arglist>(const QVector2D &amp;normalDisturb)</arglist>
        </member>
        <member kind="function" protection="public" virtualness="non" static="no">
            <type>void</type>
            <name>setPostVertexColor</name>
            <anchorfile>kuesa-irodiffusehemiproperties.html</anchorfile>
            <anchor>postVertexColor-prop</anchor>
            <arglist>(float postVertexColor)</arglist>
        </member>
        <member kind="function" protection="public" virtualness="non" static="no">
            <type>void</type>
            <name>setPostHemiFilter</name>
            <anchorfile>kuesa-irodiffusehemiproperties.html</anchorfile>
            <anchor>postHemiFilter-prop</anchor>
            <arglist>(const QVector3D &amp;postHemiFilter)</arglist>
        </member>
        <member kind="function" protection="public" virtualness="non" static="no">
            <type>void</type>
            <name>setPostGain</name>
            <anchorfile>kuesa-irodiffusehemiproperties.html</anchorfile>
            <anchor>postGain-prop</anchor>
            <arglist>(float postGain)</arglist>
        </member>
        <member kind="function" protection="public" virtualness="non" static="no">
            <type>void</type>
            <name>setReflectionMap</name>
            <anchorfile>kuesa-irodiffusehemiproperties.html</anchorfile>
            <anchor>reflectionMap-prop</anchor>
            <arglist>(Qt3DRender::QAbstractTexture *reflectionMap)</arglist>
        </member>
        <member kind="function" protection="public" virtualness="non" static="no">
            <type>void</type>
            <name>setReflectionGain</name>
            <anchorfile>kuesa-irodiffusehemiproperties.html</anchorfile>
            <anchor>reflectionGain-prop</anchor>
            <arglist>(float reflectionGain)</arglist>
        </member>
        <member kind="function" protection="public" virtualness="non" static="no">
            <type>void</type>
            <name>setReflectionInnerFilter</name>
            <anchorfile>kuesa-irodiffusehemiproperties.html</anchorfile>
            <anchor>reflectionInnerFilter-prop</anchor>
            <arglist>(const QVector3D &amp;reflectionInnerFilter)</arglist>
        </member>
        <member kind="function" protection="public" virtualness="non" static="no">
            <type>void</type>
            <name>setReflectionOuterFilter</name>
            <anchorfile>kuesa-irodiffusehemiproperties.html</anchorfile>
            <anchor>reflectionOuterFilter-prop</anchor>
            <arglist>(const QVector3D &amp;reflectionOuterFilter)</arglist>
        </member>
        <member kind="function" protection="public" virtualness="non" static="no">
            <type>void</type>
            <name>setUsesReflectionMap</name>
            <anchorfile>kuesa-irodiffusehemiproperties.html</anchorfile>
            <anchor>usesReflectionMap-prop</anchor>
            <arglist>(bool usesReflectionMap)</arglist>
        </member>
        <member kind="function" protection="public" virtualness="non" static="no">
            <type>void</type>
            <name>setProjectReflectionMap</name>
            <anchorfile>kuesa-irodiffusehemiproperties.html</anchorfile>
            <anchor>projectReflectionMap-prop</anchor>
            <arglist>(bool projectReflectionMap)</arglist>
        </member>
        <member kind="function" protection="public" virtualness="non" static="no">
            <type>void</type>
            <name>setDiffuseInnerFilter</name>
            <anchorfile>kuesa-irodiffusehemiproperties.html</anchorfile>
            <anchor>diffuseInnerFilter-prop</anchor>
            <arglist>(const QVector3D &amp;diffuseInnerFilter)</arglist>
        </member>
        <member kind="function" protection="public" virtualness="non" static="no">
            <type>void</type>
            <name>setDiffuseOuterFilter</name>
            <anchorfile>kuesa-irodiffusehemiproperties.html</anchorfile>
            <anchor>diffuseOuterFilter-prop</anchor>
            <arglist>(const QVector3D &amp;diffuseOuterFilter)</arglist>
        </member>
        <member kind="function" protection="public" virtualness="non" static="no">
            <type>void</type>
            <name>setDiffuseMap</name>
            <anchorfile>kuesa-irodiffusehemiproperties.html</anchorfile>
            <anchor>diffuseMap-prop</anchor>
            <arglist>(Qt3DRender::QAbstractTexture *diffuseMap)</arglist>
        </member>
        <member kind="function" protection="public" virtualness="non" static="no">
            <type>void</type>
            <name>setDiffuseGain</name>
            <anchorfile>kuesa-irodiffusehemiproperties.html</anchorfile>
            <anchor>diffuseGain-prop</anchor>
            <arglist>(float diffuseGain)</arglist>
        </member>
        <member kind="function" protection="public" virtualness="non" static="no">
            <type>void</type>
            <name>setUsesDiffuseMap</name>
            <anchorfile>kuesa-irodiffusehemiproperties.html</anchorfile>
            <anchor>usesDiffuseMap-prop</anchor>
            <arglist>(bool usesDiffuseMap)</arglist>
        </member>
        <member kind="function" protection="public" virtualness="non" static="no">
            <type>void</type>
            <name>setGltfYUp</name>
            <anchorfile>kuesa-irodiffusehemiproperties.html</anchorfile>
            <anchor>gltfYUp-prop</anchor>
            <arglist>(bool gltfYUp)</arglist>
        </member>
        <member kind="function" protection="public" virtualness="non" static="no">
            <type>void</type>
            <name>normalScalingChanged</name>
            <anchorfile>kuesa-irodiffusehemiproperties.html</anchorfile>
            <anchor>normalScaling-prop</anchor>
            <arglist>(QVector3D )</arglist>
        </member>
        <member kind="function" protection="public" virtualness="non" static="no">
            <type>void</type>
            <name>normalDisturbChanged</name>
            <anchorfile>kuesa-irodiffusehemiproperties.html</anchorfile>
            <anchor>normalDisturb-prop</anchor>
            <arglist>(QVector2D )</arglist>
        </member>
        <member kind="function" protection="public" virtualness="non" static="no">
            <type>void</type>
            <name>postVertexColorChanged</name>
            <anchorfile>kuesa-irodiffusehemiproperties.html</anchorfile>
            <anchor>postVertexColor-prop</anchor>
            <arglist>(float )</arglist>
        </member>
        <member kind="function" protection="public" virtualness="non" static="no">
            <type>void</type>
            <name>postHemiFilterChanged</name>
            <anchorfile>kuesa-irodiffusehemiproperties.html</anchorfile>
            <anchor>postHemiFilter-prop</anchor>
            <arglist>(QVector3D )</arglist>
        </member>
        <member kind="function" protection="public" virtualness="non" static="no">
            <type>void</type>
            <name>postGainChanged</name>
            <anchorfile>kuesa-irodiffusehemiproperties.html</anchorfile>
            <anchor>postGain-prop</anchor>
            <arglist>(float )</arglist>
        </member>
        <member kind="function" protection="public" virtualness="non" static="no">
            <type>void</type>
            <name>reflectionMapChanged</name>
            <anchorfile>kuesa-irodiffusehemiproperties.html</anchorfile>
            <anchor>reflectionMap-prop</anchor>
            <arglist>(Qt3DRender::QAbstractTexture *)</arglist>
        </member>
        <member kind="function" protection="public" virtualness="non" static="no">
            <type>void</type>
            <name>reflectionGainChanged</name>
            <anchorfile>kuesa-irodiffusehemiproperties.html</anchorfile>
            <anchor>reflectionGain-prop</anchor>
            <arglist>(float )</arglist>
        </member>
        <member kind="function" protection="public" virtualness="non" static="no">
            <type>void</type>
            <name>reflectionInnerFilterChanged</name>
            <anchorfile>kuesa-irodiffusehemiproperties.html</anchorfile>
            <anchor>reflectionInnerFilter-prop</anchor>
            <arglist>(QVector3D )</arglist>
        </member>
        <member kind="function" protection="public" virtualness="non" static="no">
            <type>void</type>
            <name>reflectionOuterFilterChanged</name>
            <anchorfile>kuesa-irodiffusehemiproperties.html</anchorfile>
            <anchor>reflectionOuterFilter-prop</anchor>
            <arglist>(QVector3D )</arglist>
        </member>
        <member kind="function" protection="public" virtualness="non" static="no">
            <type>void</type>
            <name>usesReflectionMapChanged</name>
            <anchorfile>kuesa-irodiffusehemiproperties.html</anchorfile>
            <anchor>usesReflectionMap-prop</anchor>
            <arglist>(bool )</arglist>
        </member>
        <member kind="function" protection="public" virtualness="non" static="no">
            <type>void</type>
            <name>projectReflectionMapChanged</name>
            <anchorfile>kuesa-irodiffusehemiproperties.html</anchorfile>
            <anchor>projectReflectionMap-prop</anchor>
            <arglist>(bool )</arglist>
        </member>
        <member kind="function" protection="public" virtualness="non" static="no">
            <type>void</type>
            <name>diffuseInnerFilterChanged</name>
            <anchorfile>kuesa-irodiffusehemiproperties.html</anchorfile>
            <anchor>diffuseInnerFilter-prop</anchor>
            <arglist>(QVector3D )</arglist>
        </member>
        <member kind="function" protection="public" virtualness="non" static="no">
            <type>void</type>
            <name>diffuseOuterFilterChanged</name>
            <anchorfile>kuesa-irodiffusehemiproperties.html</anchorfile>
            <anchor>diffuseOuterFilter-prop</anchor>
            <arglist>(QVector3D )</arglist>
        </member>
        <member kind="function" protection="public" virtualness="non" static="no">
            <type>void</type>
            <name>diffuseMapChanged</name>
            <anchorfile>kuesa-irodiffusehemiproperties.html</anchorfile>
            <anchor>diffuseMap-prop</anchor>
            <arglist>(Qt3DRender::QAbstractTexture *)</arglist>
        </member>
        <member kind="function" protection="public" virtualness="non" static="no">
            <type>void</type>
            <name>diffuseGainChanged</name>
            <anchorfile>kuesa-irodiffusehemiproperties.html</anchorfile>
            <anchor>diffuseGain-prop</anchor>
            <arglist>(float )</arglist>
        </member>
        <member kind="function" protection="public" virtualness="non" static="no">
            <type>void</type>
            <name>usesDiffuseMapChanged</name>
            <anchorfile>kuesa-irodiffusehemiproperties.html</anchorfile>
            <anchor>usesDiffuseMap-prop</anchor>
            <arglist>(bool )</arglist>
        </member>
        <member kind="function" protection="public" virtualness="non" static="no">
            <type>void</type>
            <name>gltfYUpChanged</name>
            <anchorfile>kuesa-irodiffusehemiproperties.html</anchorfile>
            <anchor>gltfYUp-prop</anchor>
            <arglist>(bool )</arglist>
        </member>
    </compound>
    <compound kind="class">
        <name>Kuesa::IroDiffuseMaterial</name>
        <filename>kuesa-irodiffusematerial.html</filename>
        <base>GLTF2Material</base>
        <member kind="property" type="Kuesa::IroDiffuseProperties*">
            <name>materialProperties</name>
            <anchorfile>kuesa-irodiffusematerial.html</anchorfile>
            <anchor>materialProperties-prop</anchor>
            <arglist></arglist>
        </member>
        <member kind="function" protection="public" virtualness="non" static="no">
            <type>Kuesa::IroDiffuseProperties *</type>
            <name>materialProperties</name>
            <anchorfile>kuesa-irodiffusematerial.html</anchorfile>
            <anchor>materialProperties-prop</anchor>
            <arglist>() const const</arglist>
        </member>
        <member kind="function" protection="public" virtualness="non" static="no">
            <type>void</type>
            <name>setMaterialProperties</name>
            <anchorfile>kuesa-irodiffusematerial.html</anchorfile>
            <anchor>materialProperties-prop</anchor>
            <arglist>(Kuesa::IroDiffuseProperties *materialProperties)</arglist>
        </member>
        <member kind="function" protection="public" virtualness="non" static="no">
            <type>void</type>
            <name>setMaterialProperties</name>
            <anchorfile>kuesa-irodiffusematerial.html</anchorfile>
            <anchor>materialProperties-prop</anchor>
            <arglist>(Kuesa::GLTF2MaterialProperties *materialProperties)</arglist>
        </member>
        <member kind="function" protection="public" virtualness="non" static="no">
            <type>void</type>
            <name>materialPropertiesChanged</name>
            <anchorfile>kuesa-irodiffusematerial.html</anchorfile>
            <anchor>materialProperties-prop</anchor>
            <arglist>(Kuesa::IroDiffuseProperties *materialProperties)</arglist>
        </member>
    </compound>
    <compound kind="class">
        <name>Kuesa::IroDiffuseProperties</name>
        <filename>kuesa-irodiffuseproperties.html</filename>
        <base>GLTF2MaterialProperties</base>
        <member kind="property" type="QVector3D">
            <name>normalScaling</name>
            <anchorfile>kuesa-irodiffuseproperties.html</anchorfile>
            <anchor>normalScaling-prop</anchor>
            <arglist></arglist>
        </member>
        <member kind="property" type="QVector2D">
            <name>normalDisturb</name>
            <anchorfile>kuesa-irodiffuseproperties.html</anchorfile>
            <anchor>normalDisturb-prop</anchor>
            <arglist></arglist>
        </member>
        <member kind="property" type="float">
            <name>postVertexColor</name>
            <anchorfile>kuesa-irodiffuseproperties.html</anchorfile>
            <anchor>postVertexColor-prop</anchor>
            <arglist></arglist>
        </member>
        <member kind="property" type="float">
            <name>postGain</name>
            <anchorfile>kuesa-irodiffuseproperties.html</anchorfile>
            <anchor>postGain-prop</anchor>
            <arglist></arglist>
        </member>
        <member kind="property" type="float">
            <name>reflectionGain</name>
            <anchorfile>kuesa-irodiffuseproperties.html</anchorfile>
            <anchor>reflectionGain-prop</anchor>
            <arglist></arglist>
        </member>
        <member kind="property" type="QVector3D">
            <name>reflectionInnerFilter</name>
            <anchorfile>kuesa-irodiffuseproperties.html</anchorfile>
            <anchor>reflectionInnerFilter-prop</anchor>
            <arglist></arglist>
        </member>
        <member kind="property" type="QVector3D">
            <name>reflectionOuterFilter</name>
            <anchorfile>kuesa-irodiffuseproperties.html</anchorfile>
            <anchor>reflectionOuterFilter-prop</anchor>
            <arglist></arglist>
        </member>
        <member kind="property" type="bool">
            <name>usesReflectionMap</name>
            <anchorfile>kuesa-irodiffuseproperties.html</anchorfile>
            <anchor>usesReflectionMap-prop</anchor>
            <arglist></arglist>
        </member>
        <member kind="property" type="bool">
            <name>projectReflectionMap</name>
            <anchorfile>kuesa-irodiffuseproperties.html</anchorfile>
            <anchor>projectReflectionMap-prop</anchor>
            <arglist></arglist>
        </member>
        <member kind="property" type="QVector3D">
            <name>diffuseInnerFilter</name>
            <anchorfile>kuesa-irodiffuseproperties.html</anchorfile>
            <anchor>diffuseInnerFilter-prop</anchor>
            <arglist></arglist>
        </member>
        <member kind="property" type="QVector3D">
            <name>diffuseOuterFilter</name>
            <anchorfile>kuesa-irodiffuseproperties.html</anchorfile>
            <anchor>diffuseOuterFilter-prop</anchor>
            <arglist></arglist>
        </member>
        <member kind="property" type="float">
            <name>diffuseGain</name>
            <anchorfile>kuesa-irodiffuseproperties.html</anchorfile>
            <anchor>diffuseGain-prop</anchor>
            <arglist></arglist>
        </member>
        <member kind="property" type="bool">
            <name>usesDiffuseMap</name>
            <anchorfile>kuesa-irodiffuseproperties.html</anchorfile>
            <anchor>usesDiffuseMap-prop</anchor>
            <arglist></arglist>
        </member>
        <member kind="function" protection="public" virtualness="non" static="no">
            <type>QVector3D</type>
            <name>normalScaling</name>
            <anchorfile>kuesa-irodiffuseproperties.html</anchorfile>
            <anchor>normalScaling-prop</anchor>
            <arglist>() const const</arglist>
        </member>
        <member kind="function" protection="public" virtualness="non" static="no">
            <type>QVector2D</type>
            <name>normalDisturb</name>
            <anchorfile>kuesa-irodiffuseproperties.html</anchorfile>
            <anchor>normalDisturb-prop</anchor>
            <arglist>() const const</arglist>
        </member>
        <member kind="function" protection="public" virtualness="non" static="no">
            <type>float</type>
            <name>postVertexColor</name>
            <anchorfile>kuesa-irodiffuseproperties.html</anchorfile>
            <anchor>postVertexColor-prop</anchor>
            <arglist>() const const</arglist>
        </member>
        <member kind="function" protection="public" virtualness="non" static="no">
            <type>float</type>
            <name>postGain</name>
            <anchorfile>kuesa-irodiffuseproperties.html</anchorfile>
            <anchor>postGain-prop</anchor>
            <arglist>() const const</arglist>
        </member>
        <member kind="function" protection="public" virtualness="non" static="no">
            <type>float</type>
            <name>reflectionGain</name>
            <anchorfile>kuesa-irodiffuseproperties.html</anchorfile>
            <anchor>reflectionGain-prop</anchor>
            <arglist>() const const</arglist>
        </member>
        <member kind="function" protection="public" virtualness="non" static="no">
            <type>Qt3DRender::QAbstractTexture *</type>
            <name>reflectionMap</name>
            <anchorfile>kuesa-irodiffuseproperties.html</anchorfile>
            <anchor>reflectionMap-prop</anchor>
            <arglist>() const const</arglist>
        </member>
        <member kind="function" protection="public" virtualness="non" static="no">
            <type>QVector3D</type>
            <name>reflectionInnerFilter</name>
            <anchorfile>kuesa-irodiffuseproperties.html</anchorfile>
            <anchor>reflectionInnerFilter-prop</anchor>
            <arglist>() const const</arglist>
        </member>
        <member kind="function" protection="public" virtualness="non" static="no">
            <type>QVector3D</type>
            <name>reflectionOuterFilter</name>
            <anchorfile>kuesa-irodiffuseproperties.html</anchorfile>
            <anchor>reflectionOuterFilter-prop</anchor>
            <arglist>() const const</arglist>
        </member>
        <member kind="function" protection="public" virtualness="non" static="no">
            <type>bool</type>
            <name>usesReflectionMap</name>
            <anchorfile>kuesa-irodiffuseproperties.html</anchorfile>
            <anchor>usesReflectionMap-prop</anchor>
            <arglist>() const const</arglist>
        </member>
        <member kind="function" protection="public" virtualness="non" static="no">
            <type>bool</type>
            <name>projectReflectionMap</name>
            <anchorfile>kuesa-irodiffuseproperties.html</anchorfile>
            <anchor>projectReflectionMap-prop</anchor>
            <arglist>() const const</arglist>
        </member>
        <member kind="function" protection="public" virtualness="non" static="no">
            <type>QVector3D</type>
            <name>diffuseInnerFilter</name>
            <anchorfile>kuesa-irodiffuseproperties.html</anchorfile>
            <anchor>diffuseInnerFilter-prop</anchor>
            <arglist>() const const</arglist>
        </member>
        <member kind="function" protection="public" virtualness="non" static="no">
            <type>QVector3D</type>
            <name>diffuseOuterFilter</name>
            <anchorfile>kuesa-irodiffuseproperties.html</anchorfile>
            <anchor>diffuseOuterFilter-prop</anchor>
            <arglist>() const const</arglist>
        </member>
        <member kind="function" protection="public" virtualness="non" static="no">
            <type>Qt3DRender::QAbstractTexture *</type>
            <name>diffuseMap</name>
            <anchorfile>kuesa-irodiffuseproperties.html</anchorfile>
            <anchor>diffuseMap-prop</anchor>
            <arglist>() const const</arglist>
        </member>
        <member kind="function" protection="public" virtualness="non" static="no">
            <type>float</type>
            <name>diffuseGain</name>
            <anchorfile>kuesa-irodiffuseproperties.html</anchorfile>
            <anchor>diffuseGain-prop</anchor>
            <arglist>() const const</arglist>
        </member>
        <member kind="function" protection="public" virtualness="non" static="no">
            <type>bool</type>
            <name>usesDiffuseMap</name>
            <anchorfile>kuesa-irodiffuseproperties.html</anchorfile>
            <anchor>usesDiffuseMap-prop</anchor>
            <arglist>() const const</arglist>
        </member>
        <member kind="function" protection="public" virtualness="non" static="no">
            <type>void</type>
            <name>setNormalScaling</name>
            <anchorfile>kuesa-irodiffuseproperties.html</anchorfile>
            <anchor>normalScaling-prop</anchor>
            <arglist>(const QVector3D &amp;normalScaling)</arglist>
        </member>
        <member kind="function" protection="public" virtualness="non" static="no">
            <type>void</type>
            <name>setNormalDisturb</name>
            <anchorfile>kuesa-irodiffuseproperties.html</anchorfile>
            <anchor>normalDisturb-prop</anchor>
            <arglist>(const QVector2D &amp;normalDisturb)</arglist>
        </member>
        <member kind="function" protection="public" virtualness="non" static="no">
            <type>void</type>
            <name>setPostVertexColor</name>
            <anchorfile>kuesa-irodiffuseproperties.html</anchorfile>
            <anchor>postVertexColor-prop</anchor>
            <arglist>(float postVertexColor)</arglist>
        </member>
        <member kind="function" protection="public" virtualness="non" static="no">
            <type>void</type>
            <name>setPostGain</name>
            <anchorfile>kuesa-irodiffuseproperties.html</anchorfile>
            <anchor>postGain-prop</anchor>
            <arglist>(float postGain)</arglist>
        </member>
        <member kind="function" protection="public" virtualness="non" static="no">
            <type>void</type>
            <name>setReflectionGain</name>
            <anchorfile>kuesa-irodiffuseproperties.html</anchorfile>
            <anchor>reflectionGain-prop</anchor>
            <arglist>(float reflectionGain)</arglist>
        </member>
        <member kind="function" protection="public" virtualness="non" static="no">
            <type>void</type>
            <name>setReflectionMap</name>
            <anchorfile>kuesa-irodiffuseproperties.html</anchorfile>
            <anchor>reflectionMap-prop</anchor>
            <arglist>(Qt3DRender::QAbstractTexture *reflectionMap)</arglist>
        </member>
        <member kind="function" protection="public" virtualness="non" static="no">
            <type>void</type>
            <name>setReflectionInnerFilter</name>
            <anchorfile>kuesa-irodiffuseproperties.html</anchorfile>
            <anchor>reflectionInnerFilter-prop</anchor>
            <arglist>(const QVector3D &amp;reflectionInnerFilter)</arglist>
        </member>
        <member kind="function" protection="public" virtualness="non" static="no">
            <type>void</type>
            <name>setReflectionOuterFilter</name>
            <anchorfile>kuesa-irodiffuseproperties.html</anchorfile>
            <anchor>reflectionOuterFilter-prop</anchor>
            <arglist>(const QVector3D &amp;reflectionOuterFilter)</arglist>
        </member>
        <member kind="function" protection="public" virtualness="non" static="no">
            <type>void</type>
            <name>setUsesReflectionMap</name>
            <anchorfile>kuesa-irodiffuseproperties.html</anchorfile>
            <anchor>usesReflectionMap-prop</anchor>
            <arglist>(bool usesReflectionMap)</arglist>
        </member>
        <member kind="function" protection="public" virtualness="non" static="no">
            <type>void</type>
            <name>setProjectReflectionMap</name>
            <anchorfile>kuesa-irodiffuseproperties.html</anchorfile>
            <anchor>projectReflectionMap-prop</anchor>
            <arglist>(bool projectReflectionMap)</arglist>
        </member>
        <member kind="function" protection="public" virtualness="non" static="no">
            <type>void</type>
            <name>setDiffuseInnerFilter</name>
            <anchorfile>kuesa-irodiffuseproperties.html</anchorfile>
            <anchor>diffuseInnerFilter-prop</anchor>
            <arglist>(const QVector3D &amp;diffuseInnerFilter)</arglist>
        </member>
        <member kind="function" protection="public" virtualness="non" static="no">
            <type>void</type>
            <name>setDiffuseOuterFilter</name>
            <anchorfile>kuesa-irodiffuseproperties.html</anchorfile>
            <anchor>diffuseOuterFilter-prop</anchor>
            <arglist>(const QVector3D &amp;diffuseOuterFilter)</arglist>
        </member>
        <member kind="function" protection="public" virtualness="non" static="no">
            <type>void</type>
            <name>setDiffuseMap</name>
            <anchorfile>kuesa-irodiffuseproperties.html</anchorfile>
            <anchor>diffuseMap-prop</anchor>
            <arglist>(Qt3DRender::QAbstractTexture *diffuseMap)</arglist>
        </member>
        <member kind="function" protection="public" virtualness="non" static="no">
            <type>void</type>
            <name>setDiffuseGain</name>
            <anchorfile>kuesa-irodiffuseproperties.html</anchorfile>
            <anchor>diffuseGain-prop</anchor>
            <arglist>(float diffuseGain)</arglist>
        </member>
        <member kind="function" protection="public" virtualness="non" static="no">
            <type>void</type>
            <name>setUsesDiffuseMap</name>
            <anchorfile>kuesa-irodiffuseproperties.html</anchorfile>
            <anchor>usesDiffuseMap-prop</anchor>
            <arglist>(bool usesDiffuseMap)</arglist>
        </member>
        <member kind="function" protection="public" virtualness="non" static="no">
            <type>void</type>
            <name>normalScalingChanged</name>
            <anchorfile>kuesa-irodiffuseproperties.html</anchorfile>
            <anchor>normalScaling-prop</anchor>
            <arglist>(QVector3D )</arglist>
        </member>
        <member kind="function" protection="public" virtualness="non" static="no">
            <type>void</type>
            <name>normalDisturbChanged</name>
            <anchorfile>kuesa-irodiffuseproperties.html</anchorfile>
            <anchor>normalDisturb-prop</anchor>
            <arglist>(QVector2D )</arglist>
        </member>
        <member kind="function" protection="public" virtualness="non" static="no">
            <type>void</type>
            <name>postVertexColorChanged</name>
            <anchorfile>kuesa-irodiffuseproperties.html</anchorfile>
            <anchor>postVertexColor-prop</anchor>
            <arglist>(float )</arglist>
        </member>
        <member kind="function" protection="public" virtualness="non" static="no">
            <type>void</type>
            <name>postGainChanged</name>
            <anchorfile>kuesa-irodiffuseproperties.html</anchorfile>
            <anchor>postGain-prop</anchor>
            <arglist>(float )</arglist>
        </member>
        <member kind="function" protection="public" virtualness="non" static="no">
            <type>void</type>
            <name>reflectionGainChanged</name>
            <anchorfile>kuesa-irodiffuseproperties.html</anchorfile>
            <anchor>reflectionGain-prop</anchor>
            <arglist>(float )</arglist>
        </member>
        <member kind="function" protection="public" virtualness="non" static="no">
            <type>void</type>
            <name>reflectionMapChanged</name>
            <anchorfile>kuesa-irodiffuseproperties.html</anchorfile>
            <anchor>reflectionMap-prop</anchor>
            <arglist>(Qt3DRender::QAbstractTexture *)</arglist>
        </member>
        <member kind="function" protection="public" virtualness="non" static="no">
            <type>void</type>
            <name>reflectionInnerFilterChanged</name>
            <anchorfile>kuesa-irodiffuseproperties.html</anchorfile>
            <anchor>reflectionInnerFilter-prop</anchor>
            <arglist>(QVector3D )</arglist>
        </member>
        <member kind="function" protection="public" virtualness="non" static="no">
            <type>void</type>
            <name>reflectionOuterFilterChanged</name>
            <anchorfile>kuesa-irodiffuseproperties.html</anchorfile>
            <anchor>reflectionOuterFilter-prop</anchor>
            <arglist>(QVector3D )</arglist>
        </member>
        <member kind="function" protection="public" virtualness="non" static="no">
            <type>void</type>
            <name>usesReflectionMapChanged</name>
            <anchorfile>kuesa-irodiffuseproperties.html</anchorfile>
            <anchor>usesReflectionMap-prop</anchor>
            <arglist>(bool )</arglist>
        </member>
        <member kind="function" protection="public" virtualness="non" static="no">
            <type>void</type>
            <name>projectReflectionMapChanged</name>
            <anchorfile>kuesa-irodiffuseproperties.html</anchorfile>
            <anchor>projectReflectionMap-prop</anchor>
            <arglist>(bool )</arglist>
        </member>
        <member kind="function" protection="public" virtualness="non" static="no">
            <type>void</type>
            <name>diffuseInnerFilterChanged</name>
            <anchorfile>kuesa-irodiffuseproperties.html</anchorfile>
            <anchor>diffuseInnerFilter-prop</anchor>
            <arglist>(QVector3D )</arglist>
        </member>
        <member kind="function" protection="public" virtualness="non" static="no">
            <type>void</type>
            <name>diffuseOuterFilterChanged</name>
            <anchorfile>kuesa-irodiffuseproperties.html</anchorfile>
            <anchor>diffuseOuterFilter-prop</anchor>
            <arglist>(QVector3D )</arglist>
        </member>
        <member kind="function" protection="public" virtualness="non" static="no">
            <type>void</type>
            <name>diffuseMapChanged</name>
            <anchorfile>kuesa-irodiffuseproperties.html</anchorfile>
            <anchor>diffuseMap-prop</anchor>
            <arglist>(Qt3DRender::QAbstractTexture *)</arglist>
        </member>
        <member kind="function" protection="public" virtualness="non" static="no">
            <type>void</type>
            <name>diffuseGainChanged</name>
            <anchorfile>kuesa-irodiffuseproperties.html</anchorfile>
            <anchor>diffuseGain-prop</anchor>
            <arglist>(float )</arglist>
        </member>
        <member kind="function" protection="public" virtualness="non" static="no">
            <type>void</type>
            <name>usesDiffuseMapChanged</name>
            <anchorfile>kuesa-irodiffuseproperties.html</anchorfile>
            <anchor>usesDiffuseMap-prop</anchor>
            <arglist>(bool )</arglist>
        </member>
    </compound>
    <compound kind="class">
        <name>Kuesa::IroGlassAddEffect</name>
        <filename>kuesa-iroglassaddeffect.html</filename>
        <base>GLTF2MaterialEffect</base>
    </compound>
    <compound kind="class">
        <name>Kuesa::IroGlassAddMaterial</name>
        <filename>kuesa-iroglassaddmaterial.html</filename>
        <base>GLTF2Material</base>
        <member kind="property" type="Kuesa::IroGlassAddProperties*">
            <name>materialProperties</name>
            <anchorfile>kuesa-iroglassaddmaterial.html</anchorfile>
            <anchor>materialProperties-prop</anchor>
            <arglist></arglist>
        </member>
        <member kind="function" protection="public" virtualness="non" static="no">
            <type>Kuesa::IroGlassAddProperties *</type>
            <name>materialProperties</name>
            <anchorfile>kuesa-iroglassaddmaterial.html</anchorfile>
            <anchor>materialProperties-prop</anchor>
            <arglist>() const const</arglist>
        </member>
        <member kind="function" protection="public" virtualness="non" static="no">
            <type>void</type>
            <name>setMaterialProperties</name>
            <anchorfile>kuesa-iroglassaddmaterial.html</anchorfile>
            <anchor>materialProperties-prop</anchor>
            <arglist>(Kuesa::IroGlassAddProperties *materialProperties)</arglist>
        </member>
        <member kind="function" protection="public" virtualness="non" static="no">
            <type>void</type>
            <name>setMaterialProperties</name>
            <anchorfile>kuesa-iroglassaddmaterial.html</anchorfile>
            <anchor>materialProperties-prop</anchor>
            <arglist>(Kuesa::GLTF2MaterialProperties *materialProperties)</arglist>
        </member>
        <member kind="function" protection="public" virtualness="non" static="no">
            <type>void</type>
            <name>materialPropertiesChanged</name>
            <anchorfile>kuesa-iroglassaddmaterial.html</anchorfile>
            <anchor>materialProperties-prop</anchor>
            <arglist>(Kuesa::IroGlassAddProperties *materialProperties)</arglist>
        </member>
    </compound>
    <compound kind="class">
        <name>Kuesa::IroGlassAddProperties</name>
        <filename>kuesa-iroglassaddproperties.html</filename>
        <base>GLTF2MaterialProperties</base>
        <member kind="property" type="QVector3D">
            <name>normalScaling</name>
            <anchorfile>kuesa-iroglassaddproperties.html</anchorfile>
            <anchor>normalScaling-prop</anchor>
            <arglist></arglist>
        </member>
        <member kind="property" type="QVector2D">
            <name>normalDisturb</name>
            <anchorfile>kuesa-iroglassaddproperties.html</anchorfile>
            <anchor>normalDisturb-prop</anchor>
            <arglist></arglist>
        </member>
        <member kind="property" type="float">
            <name>postVertexColor</name>
            <anchorfile>kuesa-iroglassaddproperties.html</anchorfile>
            <anchor>postVertexColor-prop</anchor>
            <arglist></arglist>
        </member>
        <member kind="property" type="float">
            <name>postGain</name>
            <anchorfile>kuesa-iroglassaddproperties.html</anchorfile>
            <anchor>postGain-prop</anchor>
            <arglist></arglist>
        </member>
        <member kind="property" type="float">
            <name>reflectionGain</name>
            <anchorfile>kuesa-iroglassaddproperties.html</anchorfile>
            <anchor>reflectionGain-prop</anchor>
            <arglist></arglist>
        </member>
        <member kind="property" type="QVector3D">
            <name>reflectionInnerFilter</name>
            <anchorfile>kuesa-iroglassaddproperties.html</anchorfile>
            <anchor>reflectionInnerFilter-prop</anchor>
            <arglist></arglist>
        </member>
        <member kind="property" type="QVector3D">
            <name>reflectionOuterFilter</name>
            <anchorfile>kuesa-iroglassaddproperties.html</anchorfile>
            <anchor>reflectionOuterFilter-prop</anchor>
            <arglist></arglist>
        </member>
        <member kind="property" type="bool">
            <name>usesReflectionMap</name>
            <anchorfile>kuesa-iroglassaddproperties.html</anchorfile>
            <anchor>usesReflectionMap-prop</anchor>
            <arglist></arglist>
        </member>
        <member kind="property" type="bool">
            <name>projectReflectionMap</name>
            <anchorfile>kuesa-iroglassaddproperties.html</anchorfile>
            <anchor>projectReflectionMap-prop</anchor>
            <arglist></arglist>
        </member>
        <member kind="property" type="QVector3D">
            <name>glassInnerFilter</name>
            <anchorfile>kuesa-iroglassaddproperties.html</anchorfile>
            <anchor>glassInnerFilter-prop</anchor>
            <arglist></arglist>
        </member>
        <member kind="property" type="QVector3D">
            <name>glassOuterFilter</name>
            <anchorfile>kuesa-iroglassaddproperties.html</anchorfile>
            <anchor>glassOuterFilter-prop</anchor>
            <arglist></arglist>
        </member>
        <member kind="property" type="QVector3D">
            <name>diffuseInnerFilter</name>
            <anchorfile>kuesa-iroglassaddproperties.html</anchorfile>
            <anchor>diffuseInnerFilter-prop</anchor>
            <arglist></arglist>
        </member>
        <member kind="property" type="QVector3D">
            <name>diffuseOuterFilter</name>
            <anchorfile>kuesa-iroglassaddproperties.html</anchorfile>
            <anchor>diffuseOuterFilter-prop</anchor>
            <arglist></arglist>
        </member>
        <member kind="function" protection="public" virtualness="non" static="no">
            <type>QVector3D</type>
            <name>normalScaling</name>
            <anchorfile>kuesa-iroglassaddproperties.html</anchorfile>
            <anchor>normalScaling-prop</anchor>
            <arglist>() const const</arglist>
        </member>
        <member kind="function" protection="public" virtualness="non" static="no">
            <type>QVector2D</type>
            <name>normalDisturb</name>
            <anchorfile>kuesa-iroglassaddproperties.html</anchorfile>
            <anchor>normalDisturb-prop</anchor>
            <arglist>() const const</arglist>
        </member>
        <member kind="function" protection="public" virtualness="non" static="no">
            <type>float</type>
            <name>postVertexColor</name>
            <anchorfile>kuesa-iroglassaddproperties.html</anchorfile>
            <anchor>postVertexColor-prop</anchor>
            <arglist>() const const</arglist>
        </member>
        <member kind="function" protection="public" virtualness="non" static="no">
            <type>float</type>
            <name>postGain</name>
            <anchorfile>kuesa-iroglassaddproperties.html</anchorfile>
            <anchor>postGain-prop</anchor>
            <arglist>() const const</arglist>
        </member>
        <member kind="function" protection="public" virtualness="non" static="no">
            <type>float</type>
            <name>reflectionGain</name>
            <anchorfile>kuesa-iroglassaddproperties.html</anchorfile>
            <anchor>reflectionGain-prop</anchor>
            <arglist>() const const</arglist>
        </member>
        <member kind="function" protection="public" virtualness="non" static="no">
            <type>Qt3DRender::QAbstractTexture *</type>
            <name>reflectionMap</name>
            <anchorfile>kuesa-iroglassaddproperties.html</anchorfile>
            <anchor>reflectionMap-prop</anchor>
            <arglist>() const const</arglist>
        </member>
        <member kind="function" protection="public" virtualness="non" static="no">
            <type>QVector3D</type>
            <name>reflectionInnerFilter</name>
            <anchorfile>kuesa-iroglassaddproperties.html</anchorfile>
            <anchor>reflectionInnerFilter-prop</anchor>
            <arglist>() const const</arglist>
        </member>
        <member kind="function" protection="public" virtualness="non" static="no">
            <type>QVector3D</type>
            <name>reflectionOuterFilter</name>
            <anchorfile>kuesa-iroglassaddproperties.html</anchorfile>
            <anchor>reflectionOuterFilter-prop</anchor>
            <arglist>() const const</arglist>
        </member>
        <member kind="function" protection="public" virtualness="non" static="no">
            <type>bool</type>
            <name>usesReflectionMap</name>
            <anchorfile>kuesa-iroglassaddproperties.html</anchorfile>
            <anchor>usesReflectionMap-prop</anchor>
            <arglist>() const const</arglist>
        </member>
        <member kind="function" protection="public" virtualness="non" static="no">
            <type>bool</type>
            <name>projectReflectionMap</name>
            <anchorfile>kuesa-iroglassaddproperties.html</anchorfile>
            <anchor>projectReflectionMap-prop</anchor>
            <arglist>() const const</arglist>
        </member>
        <member kind="function" protection="public" virtualness="non" static="no">
            <type>QVector3D</type>
            <name>glassInnerFilter</name>
            <anchorfile>kuesa-iroglassaddproperties.html</anchorfile>
            <anchor>glassInnerFilter-prop</anchor>
            <arglist>() const const</arglist>
        </member>
        <member kind="function" protection="public" virtualness="non" static="no">
            <type>QVector3D</type>
            <name>glassOuterFilter</name>
            <anchorfile>kuesa-iroglassaddproperties.html</anchorfile>
            <anchor>glassOuterFilter-prop</anchor>
            <arglist>() const const</arglist>
        </member>
        <member kind="function" protection="public" virtualness="non" static="no">
            <type>QVector3D</type>
            <name>diffuseInnerFilter</name>
            <anchorfile>kuesa-iroglassaddproperties.html</anchorfile>
            <anchor>diffuseInnerFilter-prop</anchor>
            <arglist>() const const</arglist>
        </member>
        <member kind="function" protection="public" virtualness="non" static="no">
            <type>QVector3D</type>
            <name>diffuseOuterFilter</name>
            <anchorfile>kuesa-iroglassaddproperties.html</anchorfile>
            <anchor>diffuseOuterFilter-prop</anchor>
            <arglist>() const const</arglist>
        </member>
        <member kind="function" protection="public" virtualness="non" static="no">
            <type>void</type>
            <name>setNormalScaling</name>
            <anchorfile>kuesa-iroglassaddproperties.html</anchorfile>
            <anchor>normalScaling-prop</anchor>
            <arglist>(const QVector3D &amp;normalScaling)</arglist>
        </member>
        <member kind="function" protection="public" virtualness="non" static="no">
            <type>void</type>
            <name>setNormalDisturb</name>
            <anchorfile>kuesa-iroglassaddproperties.html</anchorfile>
            <anchor>normalDisturb-prop</anchor>
            <arglist>(const QVector2D &amp;normalDisturb)</arglist>
        </member>
        <member kind="function" protection="public" virtualness="non" static="no">
            <type>void</type>
            <name>setPostVertexColor</name>
            <anchorfile>kuesa-iroglassaddproperties.html</anchorfile>
            <anchor>postVertexColor-prop</anchor>
            <arglist>(float postVertexColor)</arglist>
        </member>
        <member kind="function" protection="public" virtualness="non" static="no">
            <type>void</type>
            <name>setPostGain</name>
            <anchorfile>kuesa-iroglassaddproperties.html</anchorfile>
            <anchor>postGain-prop</anchor>
            <arglist>(float postGain)</arglist>
        </member>
        <member kind="function" protection="public" virtualness="non" static="no">
            <type>void</type>
            <name>setReflectionGain</name>
            <anchorfile>kuesa-iroglassaddproperties.html</anchorfile>
            <anchor>reflectionGain-prop</anchor>
            <arglist>(float reflectionGain)</arglist>
        </member>
        <member kind="function" protection="public" virtualness="non" static="no">
            <type>void</type>
            <name>setReflectionMap</name>
            <anchorfile>kuesa-iroglassaddproperties.html</anchorfile>
            <anchor>reflectionMap-prop</anchor>
            <arglist>(Qt3DRender::QAbstractTexture *reflectionMap)</arglist>
        </member>
        <member kind="function" protection="public" virtualness="non" static="no">
            <type>void</type>
            <name>setReflectionInnerFilter</name>
            <anchorfile>kuesa-iroglassaddproperties.html</anchorfile>
            <anchor>reflectionInnerFilter-prop</anchor>
            <arglist>(const QVector3D &amp;reflectionInnerFilter)</arglist>
        </member>
        <member kind="function" protection="public" virtualness="non" static="no">
            <type>void</type>
            <name>setReflectionOuterFilter</name>
            <anchorfile>kuesa-iroglassaddproperties.html</anchorfile>
            <anchor>reflectionOuterFilter-prop</anchor>
            <arglist>(const QVector3D &amp;reflectionOuterFilter)</arglist>
        </member>
        <member kind="function" protection="public" virtualness="non" static="no">
            <type>void</type>
            <name>setUsesReflectionMap</name>
            <anchorfile>kuesa-iroglassaddproperties.html</anchorfile>
            <anchor>usesReflectionMap-prop</anchor>
            <arglist>(bool usesReflectionMap)</arglist>
        </member>
        <member kind="function" protection="public" virtualness="non" static="no">
            <type>void</type>
            <name>setProjectReflectionMap</name>
            <anchorfile>kuesa-iroglassaddproperties.html</anchorfile>
            <anchor>projectReflectionMap-prop</anchor>
            <arglist>(bool projectReflectionMap)</arglist>
        </member>
        <member kind="function" protection="public" virtualness="non" static="no">
            <type>void</type>
            <name>setGlassInnerFilter</name>
            <anchorfile>kuesa-iroglassaddproperties.html</anchorfile>
            <anchor>glassInnerFilter-prop</anchor>
            <arglist>(const QVector3D &amp;glassInnerFilter)</arglist>
        </member>
        <member kind="function" protection="public" virtualness="non" static="no">
            <type>void</type>
            <name>setGlassOuterFilter</name>
            <anchorfile>kuesa-iroglassaddproperties.html</anchorfile>
            <anchor>glassOuterFilter-prop</anchor>
            <arglist>(const QVector3D &amp;glassOuterFilter)</arglist>
        </member>
        <member kind="function" protection="public" virtualness="non" static="no">
            <type>void</type>
            <name>setDiffuseInnerFilter</name>
            <anchorfile>kuesa-iroglassaddproperties.html</anchorfile>
            <anchor>diffuseInnerFilter-prop</anchor>
            <arglist>(const QVector3D &amp;diffuseInnerFilter)</arglist>
        </member>
        <member kind="function" protection="public" virtualness="non" static="no">
            <type>void</type>
            <name>setDiffuseOuterFilter</name>
            <anchorfile>kuesa-iroglassaddproperties.html</anchorfile>
            <anchor>diffuseOuterFilter-prop</anchor>
            <arglist>(const QVector3D &amp;diffuseOuterFilter)</arglist>
        </member>
        <member kind="function" protection="public" virtualness="non" static="no">
            <type>void</type>
            <name>normalScalingChanged</name>
            <anchorfile>kuesa-iroglassaddproperties.html</anchorfile>
            <anchor>normalScaling-prop</anchor>
            <arglist>(QVector3D )</arglist>
        </member>
        <member kind="function" protection="public" virtualness="non" static="no">
            <type>void</type>
            <name>normalDisturbChanged</name>
            <anchorfile>kuesa-iroglassaddproperties.html</anchorfile>
            <anchor>normalDisturb-prop</anchor>
            <arglist>(QVector2D )</arglist>
        </member>
        <member kind="function" protection="public" virtualness="non" static="no">
            <type>void</type>
            <name>postVertexColorChanged</name>
            <anchorfile>kuesa-iroglassaddproperties.html</anchorfile>
            <anchor>postVertexColor-prop</anchor>
            <arglist>(float )</arglist>
        </member>
        <member kind="function" protection="public" virtualness="non" static="no">
            <type>void</type>
            <name>postGainChanged</name>
            <anchorfile>kuesa-iroglassaddproperties.html</anchorfile>
            <anchor>postGain-prop</anchor>
            <arglist>(float )</arglist>
        </member>
        <member kind="function" protection="public" virtualness="non" static="no">
            <type>void</type>
            <name>reflectionGainChanged</name>
            <anchorfile>kuesa-iroglassaddproperties.html</anchorfile>
            <anchor>reflectionGain-prop</anchor>
            <arglist>(float )</arglist>
        </member>
        <member kind="function" protection="public" virtualness="non" static="no">
            <type>void</type>
            <name>reflectionMapChanged</name>
            <anchorfile>kuesa-iroglassaddproperties.html</anchorfile>
            <anchor>reflectionMap-prop</anchor>
            <arglist>(Qt3DRender::QAbstractTexture *)</arglist>
        </member>
        <member kind="function" protection="public" virtualness="non" static="no">
            <type>void</type>
            <name>reflectionInnerFilterChanged</name>
            <anchorfile>kuesa-iroglassaddproperties.html</anchorfile>
            <anchor>reflectionInnerFilter-prop</anchor>
            <arglist>(QVector3D )</arglist>
        </member>
        <member kind="function" protection="public" virtualness="non" static="no">
            <type>void</type>
            <name>reflectionOuterFilterChanged</name>
            <anchorfile>kuesa-iroglassaddproperties.html</anchorfile>
            <anchor>reflectionOuterFilter-prop</anchor>
            <arglist>(QVector3D )</arglist>
        </member>
        <member kind="function" protection="public" virtualness="non" static="no">
            <type>void</type>
            <name>usesReflectionMapChanged</name>
            <anchorfile>kuesa-iroglassaddproperties.html</anchorfile>
            <anchor>usesReflectionMap-prop</anchor>
            <arglist>(bool )</arglist>
        </member>
        <member kind="function" protection="public" virtualness="non" static="no">
            <type>void</type>
            <name>projectReflectionMapChanged</name>
            <anchorfile>kuesa-iroglassaddproperties.html</anchorfile>
            <anchor>projectReflectionMap-prop</anchor>
            <arglist>(bool )</arglist>
        </member>
        <member kind="function" protection="public" virtualness="non" static="no">
            <type>void</type>
            <name>glassInnerFilterChanged</name>
            <anchorfile>kuesa-iroglassaddproperties.html</anchorfile>
            <anchor>glassInnerFilter-prop</anchor>
            <arglist>(QVector3D )</arglist>
        </member>
        <member kind="function" protection="public" virtualness="non" static="no">
            <type>void</type>
            <name>glassOuterFilterChanged</name>
            <anchorfile>kuesa-iroglassaddproperties.html</anchorfile>
            <anchor>glassOuterFilter-prop</anchor>
            <arglist>(QVector3D )</arglist>
        </member>
        <member kind="function" protection="public" virtualness="non" static="no">
            <type>void</type>
            <name>diffuseInnerFilterChanged</name>
            <anchorfile>kuesa-iroglassaddproperties.html</anchorfile>
            <anchor>diffuseInnerFilter-prop</anchor>
            <arglist>(QVector3D )</arglist>
        </member>
        <member kind="function" protection="public" virtualness="non" static="no">
            <type>void</type>
            <name>diffuseOuterFilterChanged</name>
            <anchorfile>kuesa-iroglassaddproperties.html</anchorfile>
            <anchor>diffuseOuterFilter-prop</anchor>
            <arglist>(QVector3D )</arglist>
        </member>
    </compound>
    <compound kind="class">
        <name>Kuesa::IroMatteAddEffect</name>
        <filename>kuesa-iromatteaddeffect.html</filename>
        <base>GLTF2MaterialEffect</base>
    </compound>
    <compound kind="class">
        <name>Kuesa::IroMatteAddMaterial</name>
        <filename>kuesa-iromatteaddmaterial.html</filename>
        <base>GLTF2Material</base>
        <member kind="property" type="Kuesa::IroMatteAddProperties*">
            <name>materialProperties</name>
            <anchorfile>kuesa-iromatteaddmaterial.html</anchorfile>
            <anchor>materialProperties-prop</anchor>
            <arglist></arglist>
        </member>
        <member kind="function" protection="public" virtualness="non" static="no">
            <type>Kuesa::IroMatteAddProperties *</type>
            <name>materialProperties</name>
            <anchorfile>kuesa-iromatteaddmaterial.html</anchorfile>
            <anchor>materialProperties-prop</anchor>
            <arglist>() const const</arglist>
        </member>
        <member kind="function" protection="public" virtualness="non" static="no">
            <type>void</type>
            <name>setMaterialProperties</name>
            <anchorfile>kuesa-iromatteaddmaterial.html</anchorfile>
            <anchor>materialProperties-prop</anchor>
            <arglist>(Kuesa::IroMatteAddProperties *materialProperties)</arglist>
        </member>
        <member kind="function" protection="public" virtualness="non" static="no">
            <type>void</type>
            <name>setMaterialProperties</name>
            <anchorfile>kuesa-iromatteaddmaterial.html</anchorfile>
            <anchor>materialProperties-prop</anchor>
            <arglist>(Kuesa::GLTF2MaterialProperties *materialProperties)</arglist>
        </member>
        <member kind="function" protection="public" virtualness="non" static="no">
            <type>void</type>
            <name>materialPropertiesChanged</name>
            <anchorfile>kuesa-iromatteaddmaterial.html</anchorfile>
            <anchor>materialProperties-prop</anchor>
            <arglist>(Kuesa::IroMatteAddProperties *materialProperties)</arglist>
        </member>
    </compound>
    <compound kind="class">
        <name>Kuesa::IroMatteAddProperties</name>
        <filename>kuesa-iromatteaddproperties.html</filename>
        <base>GLTF2MaterialProperties</base>
        <member kind="property" type="float">
            <name>postVertexColor</name>
            <anchorfile>kuesa-iromatteaddproperties.html</anchorfile>
            <anchor>postVertexColor-prop</anchor>
            <arglist></arglist>
        </member>
        <member kind="property" type="float">
            <name>postGain</name>
            <anchorfile>kuesa-iromatteaddproperties.html</anchorfile>
            <anchor>postGain-prop</anchor>
            <arglist></arglist>
        </member>
        <member kind="property" type="bool">
            <name>usesMatteMap</name>
            <anchorfile>kuesa-iromatteaddproperties.html</anchorfile>
            <anchor>usesMatteMap-prop</anchor>
            <arglist></arglist>
        </member>
        <member kind="property" type="QVector3D">
            <name>matteFilter</name>
            <anchorfile>kuesa-iromatteaddproperties.html</anchorfile>
            <anchor>matteFilter-prop</anchor>
            <arglist></arglist>
        </member>
        <member kind="property" type="float">
            <name>matteGain</name>
            <anchorfile>kuesa-iromatteaddproperties.html</anchorfile>
            <anchor>matteGain-prop</anchor>
            <arglist></arglist>
        </member>
        <member kind="property" type="QVector2D">
            <name>uvOffset</name>
            <anchorfile>kuesa-iromatteaddproperties.html</anchorfile>
            <anchor>uvOffset-prop</anchor>
            <arglist></arglist>
        </member>
        <member kind="function" protection="public" virtualness="non" static="no">
            <type>float</type>
            <name>postVertexColor</name>
            <anchorfile>kuesa-iromatteaddproperties.html</anchorfile>
            <anchor>postVertexColor-prop</anchor>
            <arglist>() const const</arglist>
        </member>
        <member kind="function" protection="public" virtualness="non" static="no">
            <type>float</type>
            <name>postGain</name>
            <anchorfile>kuesa-iromatteaddproperties.html</anchorfile>
            <anchor>postGain-prop</anchor>
            <arglist>() const const</arglist>
        </member>
        <member kind="function" protection="public" virtualness="non" static="no">
            <type>Qt3DRender::QAbstractTexture *</type>
            <name>matteMap</name>
            <anchorfile>kuesa-iromatteaddproperties.html</anchorfile>
            <anchor>matteMap-prop</anchor>
            <arglist>() const const</arglist>
        </member>
        <member kind="function" protection="public" virtualness="non" static="no">
            <type>bool</type>
            <name>usesMatteMap</name>
            <anchorfile>kuesa-iromatteaddproperties.html</anchorfile>
            <anchor>usesMatteMap-prop</anchor>
            <arglist>() const const</arglist>
        </member>
        <member kind="function" protection="public" virtualness="non" static="no">
            <type>QVector3D</type>
            <name>matteFilter</name>
            <anchorfile>kuesa-iromatteaddproperties.html</anchorfile>
            <anchor>matteFilter-prop</anchor>
            <arglist>() const const</arglist>
        </member>
        <member kind="function" protection="public" virtualness="non" static="no">
            <type>float</type>
            <name>matteGain</name>
            <anchorfile>kuesa-iromatteaddproperties.html</anchorfile>
            <anchor>matteGain-prop</anchor>
            <arglist>() const const</arglist>
        </member>
        <member kind="function" protection="public" virtualness="non" static="no">
            <type>QVector2D</type>
            <name>uvOffset</name>
            <anchorfile>kuesa-iromatteaddproperties.html</anchorfile>
            <anchor>uvOffset-prop</anchor>
            <arglist>() const const</arglist>
        </member>
        <member kind="function" protection="public" virtualness="non" static="no">
            <type>void</type>
            <name>setPostVertexColor</name>
            <anchorfile>kuesa-iromatteaddproperties.html</anchorfile>
            <anchor>postVertexColor-prop</anchor>
            <arglist>(float postVertexColor)</arglist>
        </member>
        <member kind="function" protection="public" virtualness="non" static="no">
            <type>void</type>
            <name>setPostGain</name>
            <anchorfile>kuesa-iromatteaddproperties.html</anchorfile>
            <anchor>postGain-prop</anchor>
            <arglist>(float postGain)</arglist>
        </member>
        <member kind="function" protection="public" virtualness="non" static="no">
            <type>void</type>
            <name>setMatteMap</name>
            <anchorfile>kuesa-iromatteaddproperties.html</anchorfile>
            <anchor>matteMap-prop</anchor>
            <arglist>(Qt3DRender::QAbstractTexture *matteMap)</arglist>
        </member>
        <member kind="function" protection="public" virtualness="non" static="no">
            <type>void</type>
            <name>setUsesMatteMap</name>
            <anchorfile>kuesa-iromatteaddproperties.html</anchorfile>
            <anchor>usesMatteMap-prop</anchor>
            <arglist>(bool usesMatteMap)</arglist>
        </member>
        <member kind="function" protection="public" virtualness="non" static="no">
            <type>void</type>
            <name>setMatteFilter</name>
            <anchorfile>kuesa-iromatteaddproperties.html</anchorfile>
            <anchor>matteFilter-prop</anchor>
            <arglist>(const QVector3D &amp;matteFilter)</arglist>
        </member>
        <member kind="function" protection="public" virtualness="non" static="no">
            <type>void</type>
            <name>setMatteGain</name>
            <anchorfile>kuesa-iromatteaddproperties.html</anchorfile>
            <anchor>matteGain-prop</anchor>
            <arglist>(float matteGain)</arglist>
        </member>
        <member kind="function" protection="public" virtualness="non" static="no">
            <type>void</type>
            <name>setUvOffset</name>
            <anchorfile>kuesa-iromatteaddproperties.html</anchorfile>
            <anchor>uvOffset-prop</anchor>
            <arglist>(const QVector2D &amp;uvOffset)</arglist>
        </member>
        <member kind="function" protection="public" virtualness="non" static="no">
            <type>void</type>
            <name>postVertexColorChanged</name>
            <anchorfile>kuesa-iromatteaddproperties.html</anchorfile>
            <anchor>postVertexColor-prop</anchor>
            <arglist>(float )</arglist>
        </member>
        <member kind="function" protection="public" virtualness="non" static="no">
            <type>void</type>
            <name>postGainChanged</name>
            <anchorfile>kuesa-iromatteaddproperties.html</anchorfile>
            <anchor>postGain-prop</anchor>
            <arglist>(float )</arglist>
        </member>
        <member kind="function" protection="public" virtualness="non" static="no">
            <type>void</type>
            <name>matteMapChanged</name>
            <anchorfile>kuesa-iromatteaddproperties.html</anchorfile>
            <anchor>matteMap-prop</anchor>
            <arglist>(Qt3DRender::QAbstractTexture *)</arglist>
        </member>
        <member kind="function" protection="public" virtualness="non" static="no">
            <type>void</type>
            <name>usesMatteMapChanged</name>
            <anchorfile>kuesa-iromatteaddproperties.html</anchorfile>
            <anchor>usesMatteMap-prop</anchor>
            <arglist>(bool )</arglist>
        </member>
        <member kind="function" protection="public" virtualness="non" static="no">
            <type>void</type>
            <name>matteFilterChanged</name>
            <anchorfile>kuesa-iromatteaddproperties.html</anchorfile>
            <anchor>matteFilter-prop</anchor>
            <arglist>(QVector3D )</arglist>
        </member>
        <member kind="function" protection="public" virtualness="non" static="no">
            <type>void</type>
            <name>matteGainChanged</name>
            <anchorfile>kuesa-iromatteaddproperties.html</anchorfile>
            <anchor>matteGain-prop</anchor>
            <arglist>(float )</arglist>
        </member>
        <member kind="function" protection="public" virtualness="non" static="no">
            <type>void</type>
            <name>uvOffsetChanged</name>
            <anchorfile>kuesa-iromatteaddproperties.html</anchorfile>
            <anchor>uvOffset-prop</anchor>
            <arglist>(QVector2D )</arglist>
        </member>
    </compound>
    <compound kind="class">
        <name>Kuesa::IroMatteAlphaEffect</name>
        <filename>kuesa-iromattealphaeffect.html</filename>
        <base>GLTF2MaterialEffect</base>
    </compound>
    <compound kind="class">
        <name>Kuesa::IroMatteAlphaMaterial</name>
        <filename>kuesa-iromattealphamaterial.html</filename>
        <base>GLTF2Material</base>
        <member kind="property" type="Kuesa::IroMatteAlphaProperties*">
            <name>materialProperties</name>
            <anchorfile>kuesa-iromattealphamaterial.html</anchorfile>
            <anchor>materialProperties-prop</anchor>
            <arglist></arglist>
        </member>
        <member kind="function" protection="public" virtualness="non" static="no">
            <type>Kuesa::IroMatteAlphaProperties *</type>
            <name>materialProperties</name>
            <anchorfile>kuesa-iromattealphamaterial.html</anchorfile>
            <anchor>materialProperties-prop</anchor>
            <arglist>() const const</arglist>
        </member>
        <member kind="function" protection="public" virtualness="non" static="no">
            <type>void</type>
            <name>setMaterialProperties</name>
            <anchorfile>kuesa-iromattealphamaterial.html</anchorfile>
            <anchor>materialProperties-prop</anchor>
            <arglist>(Kuesa::IroMatteAlphaProperties *materialProperties)</arglist>
        </member>
        <member kind="function" protection="public" virtualness="non" static="no">
            <type>void</type>
            <name>setMaterialProperties</name>
            <anchorfile>kuesa-iromattealphamaterial.html</anchorfile>
            <anchor>materialProperties-prop</anchor>
            <arglist>(Kuesa::GLTF2MaterialProperties *materialProperties)</arglist>
        </member>
        <member kind="function" protection="public" virtualness="non" static="no">
            <type>void</type>
            <name>materialPropertiesChanged</name>
            <anchorfile>kuesa-iromattealphamaterial.html</anchorfile>
            <anchor>materialProperties-prop</anchor>
            <arglist>(Kuesa::IroMatteAlphaProperties *materialProperties)</arglist>
        </member>
    </compound>
    <compound kind="class">
        <name>Kuesa::IroMatteAlphaProperties</name>
        <filename>kuesa-iromattealphaproperties.html</filename>
        <base>GLTF2MaterialProperties</base>
        <member kind="property" type="float">
            <name>postVertexColor</name>
            <anchorfile>kuesa-iromattealphaproperties.html</anchorfile>
            <anchor>postVertexColor-prop</anchor>
            <arglist></arglist>
        </member>
        <member kind="property" type="float">
            <name>postGain</name>
            <anchorfile>kuesa-iromattealphaproperties.html</anchorfile>
            <anchor>postGain-prop</anchor>
            <arglist></arglist>
        </member>
        <member kind="property" type="bool">
            <name>usesMatteMap</name>
            <anchorfile>kuesa-iromattealphaproperties.html</anchorfile>
            <anchor>usesMatteMap-prop</anchor>
            <arglist></arglist>
        </member>
        <member kind="property" type="QVector3D">
            <name>matteFilter</name>
            <anchorfile>kuesa-iromattealphaproperties.html</anchorfile>
            <anchor>matteFilter-prop</anchor>
            <arglist></arglist>
        </member>
        <member kind="property" type="float">
            <name>matteGain</name>
            <anchorfile>kuesa-iromattealphaproperties.html</anchorfile>
            <anchor>matteGain-prop</anchor>
            <arglist></arglist>
        </member>
        <member kind="property" type="float">
            <name>matteAlphaGain</name>
            <anchorfile>kuesa-iromattealphaproperties.html</anchorfile>
            <anchor>matteAlphaGain-prop</anchor>
            <arglist></arglist>
        </member>
        <member kind="property" type="QVector2D">
            <name>uvOffset</name>
            <anchorfile>kuesa-iromattealphaproperties.html</anchorfile>
            <anchor>uvOffset-prop</anchor>
            <arglist></arglist>
        </member>
        <member kind="function" protection="public" virtualness="non" static="no">
            <type>float</type>
            <name>postVertexColor</name>
            <anchorfile>kuesa-iromattealphaproperties.html</anchorfile>
            <anchor>postVertexColor-prop</anchor>
            <arglist>() const const</arglist>
        </member>
        <member kind="function" protection="public" virtualness="non" static="no">
            <type>float</type>
            <name>postGain</name>
            <anchorfile>kuesa-iromattealphaproperties.html</anchorfile>
            <anchor>postGain-prop</anchor>
            <arglist>() const const</arglist>
        </member>
        <member kind="function" protection="public" virtualness="non" static="no">
            <type>Qt3DRender::QAbstractTexture *</type>
            <name>matteMap</name>
            <anchorfile>kuesa-iromattealphaproperties.html</anchorfile>
            <anchor>matteMap-prop</anchor>
            <arglist>() const const</arglist>
        </member>
        <member kind="function" protection="public" virtualness="non" static="no">
            <type>bool</type>
            <name>usesMatteMap</name>
            <anchorfile>kuesa-iromattealphaproperties.html</anchorfile>
            <anchor>usesMatteMap-prop</anchor>
            <arglist>() const const</arglist>
        </member>
        <member kind="function" protection="public" virtualness="non" static="no">
            <type>QVector3D</type>
            <name>matteFilter</name>
            <anchorfile>kuesa-iromattealphaproperties.html</anchorfile>
            <anchor>matteFilter-prop</anchor>
            <arglist>() const const</arglist>
        </member>
        <member kind="function" protection="public" virtualness="non" static="no">
            <type>float</type>
            <name>matteGain</name>
            <anchorfile>kuesa-iromattealphaproperties.html</anchorfile>
            <anchor>matteGain-prop</anchor>
            <arglist>() const const</arglist>
        </member>
        <member kind="function" protection="public" virtualness="non" static="no">
            <type>float</type>
            <name>matteAlphaGain</name>
            <anchorfile>kuesa-iromattealphaproperties.html</anchorfile>
            <anchor>matteAlphaGain-prop</anchor>
            <arglist>() const const</arglist>
        </member>
        <member kind="function" protection="public" virtualness="non" static="no">
            <type>QVector2D</type>
            <name>uvOffset</name>
            <anchorfile>kuesa-iromattealphaproperties.html</anchorfile>
            <anchor>uvOffset-prop</anchor>
            <arglist>() const const</arglist>
        </member>
        <member kind="function" protection="public" virtualness="non" static="no">
            <type>void</type>
            <name>setPostVertexColor</name>
            <anchorfile>kuesa-iromattealphaproperties.html</anchorfile>
            <anchor>postVertexColor-prop</anchor>
            <arglist>(float postVertexColor)</arglist>
        </member>
        <member kind="function" protection="public" virtualness="non" static="no">
            <type>void</type>
            <name>setPostGain</name>
            <anchorfile>kuesa-iromattealphaproperties.html</anchorfile>
            <anchor>postGain-prop</anchor>
            <arglist>(float postGain)</arglist>
        </member>
        <member kind="function" protection="public" virtualness="non" static="no">
            <type>void</type>
            <name>setMatteMap</name>
            <anchorfile>kuesa-iromattealphaproperties.html</anchorfile>
            <anchor>matteMap-prop</anchor>
            <arglist>(Qt3DRender::QAbstractTexture *matteMap)</arglist>
        </member>
        <member kind="function" protection="public" virtualness="non" static="no">
            <type>void</type>
            <name>setUsesMatteMap</name>
            <anchorfile>kuesa-iromattealphaproperties.html</anchorfile>
            <anchor>usesMatteMap-prop</anchor>
            <arglist>(bool usesMatteMap)</arglist>
        </member>
        <member kind="function" protection="public" virtualness="non" static="no">
            <type>void</type>
            <name>setMatteFilter</name>
            <anchorfile>kuesa-iromattealphaproperties.html</anchorfile>
            <anchor>matteFilter-prop</anchor>
            <arglist>(const QVector3D &amp;matteFilter)</arglist>
        </member>
        <member kind="function" protection="public" virtualness="non" static="no">
            <type>void</type>
            <name>setMatteGain</name>
            <anchorfile>kuesa-iromattealphaproperties.html</anchorfile>
            <anchor>matteGain-prop</anchor>
            <arglist>(float matteGain)</arglist>
        </member>
        <member kind="function" protection="public" virtualness="non" static="no">
            <type>void</type>
            <name>setMatteAlphaGain</name>
            <anchorfile>kuesa-iromattealphaproperties.html</anchorfile>
            <anchor>matteAlphaGain-prop</anchor>
            <arglist>(float matteAlphaGain)</arglist>
        </member>
        <member kind="function" protection="public" virtualness="non" static="no">
            <type>void</type>
            <name>setUvOffset</name>
            <anchorfile>kuesa-iromattealphaproperties.html</anchorfile>
            <anchor>uvOffset-prop</anchor>
            <arglist>(const QVector2D &amp;uvOffset)</arglist>
        </member>
        <member kind="function" protection="public" virtualness="non" static="no">
            <type>void</type>
            <name>postVertexColorChanged</name>
            <anchorfile>kuesa-iromattealphaproperties.html</anchorfile>
            <anchor>postVertexColor-prop</anchor>
            <arglist>(float )</arglist>
        </member>
        <member kind="function" protection="public" virtualness="non" static="no">
            <type>void</type>
            <name>postGainChanged</name>
            <anchorfile>kuesa-iromattealphaproperties.html</anchorfile>
            <anchor>postGain-prop</anchor>
            <arglist>(float )</arglist>
        </member>
        <member kind="function" protection="public" virtualness="non" static="no">
            <type>void</type>
            <name>matteMapChanged</name>
            <anchorfile>kuesa-iromattealphaproperties.html</anchorfile>
            <anchor>matteMap-prop</anchor>
            <arglist>(Qt3DRender::QAbstractTexture *)</arglist>
        </member>
        <member kind="function" protection="public" virtualness="non" static="no">
            <type>void</type>
            <name>usesMatteMapChanged</name>
            <anchorfile>kuesa-iromattealphaproperties.html</anchorfile>
            <anchor>usesMatteMap-prop</anchor>
            <arglist>(bool )</arglist>
        </member>
        <member kind="function" protection="public" virtualness="non" static="no">
            <type>void</type>
            <name>matteFilterChanged</name>
            <anchorfile>kuesa-iromattealphaproperties.html</anchorfile>
            <anchor>matteFilter-prop</anchor>
            <arglist>(QVector3D )</arglist>
        </member>
        <member kind="function" protection="public" virtualness="non" static="no">
            <type>void</type>
            <name>matteGainChanged</name>
            <anchorfile>kuesa-iromattealphaproperties.html</anchorfile>
            <anchor>matteGain-prop</anchor>
            <arglist>(float )</arglist>
        </member>
        <member kind="function" protection="public" virtualness="non" static="no">
            <type>void</type>
            <name>matteAlphaGainChanged</name>
            <anchorfile>kuesa-iromattealphaproperties.html</anchorfile>
            <anchor>matteAlphaGain-prop</anchor>
            <arglist>(float )</arglist>
        </member>
        <member kind="function" protection="public" virtualness="non" static="no">
            <type>void</type>
            <name>uvOffsetChanged</name>
            <anchorfile>kuesa-iromattealphaproperties.html</anchorfile>
            <anchor>uvOffset-prop</anchor>
            <arglist>(QVector2D )</arglist>
        </member>
    </compound>
    <compound kind="class">
        <name>Kuesa::IroMatteBackgroundEffect</name>
        <filename>kuesa-iromattebackgroundeffect.html</filename>
        <base>GLTF2MaterialEffect</base>
    </compound>
    <compound kind="class">
        <name>Kuesa::IroMatteBackgroundMaterial</name>
        <filename>kuesa-iromattebackgroundmaterial.html</filename>
        <base>GLTF2Material</base>
        <member kind="property" type="Kuesa::IroMatteBackgroundProperties*">
            <name>materialProperties</name>
            <anchorfile>kuesa-iromattebackgroundmaterial.html</anchorfile>
            <anchor>materialProperties-prop</anchor>
            <arglist></arglist>
        </member>
        <member kind="function" protection="public" virtualness="non" static="no">
            <type>Kuesa::IroMatteBackgroundProperties *</type>
            <name>materialProperties</name>
            <anchorfile>kuesa-iromattebackgroundmaterial.html</anchorfile>
            <anchor>materialProperties-prop</anchor>
            <arglist>() const const</arglist>
        </member>
        <member kind="function" protection="public" virtualness="non" static="no">
            <type>void</type>
            <name>setMaterialProperties</name>
            <anchorfile>kuesa-iromattebackgroundmaterial.html</anchorfile>
            <anchor>materialProperties-prop</anchor>
            <arglist>(Kuesa::IroMatteBackgroundProperties *materialProperties)</arglist>
        </member>
        <member kind="function" protection="public" virtualness="non" static="no">
            <type>void</type>
            <name>setMaterialProperties</name>
            <anchorfile>kuesa-iromattebackgroundmaterial.html</anchorfile>
            <anchor>materialProperties-prop</anchor>
            <arglist>(Kuesa::GLTF2MaterialProperties *materialProperties)</arglist>
        </member>
        <member kind="function" protection="public" virtualness="non" static="no">
            <type>void</type>
            <name>materialPropertiesChanged</name>
            <anchorfile>kuesa-iromattebackgroundmaterial.html</anchorfile>
            <anchor>materialProperties-prop</anchor>
            <arglist>(Kuesa::IroMatteBackgroundProperties *materialProperties)</arglist>
        </member>
    </compound>
    <compound kind="class">
        <name>Kuesa::IroMatteBackgroundProperties</name>
        <filename>kuesa-iromattebackgroundproperties.html</filename>
        <base>GLTF2MaterialProperties</base>
        <member kind="property" type="float">
            <name>postVertexColor</name>
            <anchorfile>kuesa-iromattebackgroundproperties.html</anchorfile>
            <anchor>postVertexColor-prop</anchor>
            <arglist></arglist>
        </member>
        <member kind="property" type="float">
            <name>postGain</name>
            <anchorfile>kuesa-iromattebackgroundproperties.html</anchorfile>
            <anchor>postGain-prop</anchor>
            <arglist></arglist>
        </member>
        <member kind="property" type="bool">
            <name>usesMatteMap</name>
            <anchorfile>kuesa-iromattebackgroundproperties.html</anchorfile>
            <anchor>usesMatteMap-prop</anchor>
            <arglist></arglist>
        </member>
        <member kind="property" type="QVector3D">
            <name>matteFilter</name>
            <anchorfile>kuesa-iromattebackgroundproperties.html</anchorfile>
            <anchor>matteFilter-prop</anchor>
            <arglist></arglist>
        </member>
        <member kind="property" type="float">
            <name>matteGain</name>
            <anchorfile>kuesa-iromattebackgroundproperties.html</anchorfile>
            <anchor>matteGain-prop</anchor>
            <arglist></arglist>
        </member>
        <member kind="property" type="QVector2D">
            <name>uvOffset</name>
            <anchorfile>kuesa-iromattebackgroundproperties.html</anchorfile>
            <anchor>uvOffset-prop</anchor>
            <arglist></arglist>
        </member>
        <member kind="function" protection="public" virtualness="non" static="no">
            <type>float</type>
            <name>postVertexColor</name>
            <anchorfile>kuesa-iromattebackgroundproperties.html</anchorfile>
            <anchor>postVertexColor-prop</anchor>
            <arglist>() const const</arglist>
        </member>
        <member kind="function" protection="public" virtualness="non" static="no">
            <type>float</type>
            <name>postGain</name>
            <anchorfile>kuesa-iromattebackgroundproperties.html</anchorfile>
            <anchor>postGain-prop</anchor>
            <arglist>() const const</arglist>
        </member>
        <member kind="function" protection="public" virtualness="non" static="no">
            <type>Qt3DRender::QAbstractTexture *</type>
            <name>matteMap</name>
            <anchorfile>kuesa-iromattebackgroundproperties.html</anchorfile>
            <anchor>matteMap-prop</anchor>
            <arglist>() const const</arglist>
        </member>
        <member kind="function" protection="public" virtualness="non" static="no">
            <type>bool</type>
            <name>usesMatteMap</name>
            <anchorfile>kuesa-iromattebackgroundproperties.html</anchorfile>
            <anchor>usesMatteMap-prop</anchor>
            <arglist>() const const</arglist>
        </member>
        <member kind="function" protection="public" virtualness="non" static="no">
            <type>QVector3D</type>
            <name>matteFilter</name>
            <anchorfile>kuesa-iromattebackgroundproperties.html</anchorfile>
            <anchor>matteFilter-prop</anchor>
            <arglist>() const const</arglist>
        </member>
        <member kind="function" protection="public" virtualness="non" static="no">
            <type>float</type>
            <name>matteGain</name>
            <anchorfile>kuesa-iromattebackgroundproperties.html</anchorfile>
            <anchor>matteGain-prop</anchor>
            <arglist>() const const</arglist>
        </member>
        <member kind="function" protection="public" virtualness="non" static="no">
            <type>QVector2D</type>
            <name>uvOffset</name>
            <anchorfile>kuesa-iromattebackgroundproperties.html</anchorfile>
            <anchor>uvOffset-prop</anchor>
            <arglist>() const const</arglist>
        </member>
        <member kind="function" protection="public" virtualness="non" static="no">
            <type>void</type>
            <name>setPostVertexColor</name>
            <anchorfile>kuesa-iromattebackgroundproperties.html</anchorfile>
            <anchor>postVertexColor-prop</anchor>
            <arglist>(float postVertexColor)</arglist>
        </member>
        <member kind="function" protection="public" virtualness="non" static="no">
            <type>void</type>
            <name>setPostGain</name>
            <anchorfile>kuesa-iromattebackgroundproperties.html</anchorfile>
            <anchor>postGain-prop</anchor>
            <arglist>(float postGain)</arglist>
        </member>
        <member kind="function" protection="public" virtualness="non" static="no">
            <type>void</type>
            <name>setMatteMap</name>
            <anchorfile>kuesa-iromattebackgroundproperties.html</anchorfile>
            <anchor>matteMap-prop</anchor>
            <arglist>(Qt3DRender::QAbstractTexture *matteMap)</arglist>
        </member>
        <member kind="function" protection="public" virtualness="non" static="no">
            <type>void</type>
            <name>setUsesMatteMap</name>
            <anchorfile>kuesa-iromattebackgroundproperties.html</anchorfile>
            <anchor>usesMatteMap-prop</anchor>
            <arglist>(bool usesMatteMap)</arglist>
        </member>
        <member kind="function" protection="public" virtualness="non" static="no">
            <type>void</type>
            <name>setMatteFilter</name>
            <anchorfile>kuesa-iromattebackgroundproperties.html</anchorfile>
            <anchor>matteFilter-prop</anchor>
            <arglist>(const QVector3D &amp;matteFilter)</arglist>
        </member>
        <member kind="function" protection="public" virtualness="non" static="no">
            <type>void</type>
            <name>setMatteGain</name>
            <anchorfile>kuesa-iromattebackgroundproperties.html</anchorfile>
            <anchor>matteGain-prop</anchor>
            <arglist>(float matteGain)</arglist>
        </member>
        <member kind="function" protection="public" virtualness="non" static="no">
            <type>void</type>
            <name>setUvOffset</name>
            <anchorfile>kuesa-iromattebackgroundproperties.html</anchorfile>
            <anchor>uvOffset-prop</anchor>
            <arglist>(const QVector2D &amp;uvOffset)</arglist>
        </member>
        <member kind="function" protection="public" virtualness="non" static="no">
            <type>void</type>
            <name>postVertexColorChanged</name>
            <anchorfile>kuesa-iromattebackgroundproperties.html</anchorfile>
            <anchor>postVertexColor-prop</anchor>
            <arglist>(float )</arglist>
        </member>
        <member kind="function" protection="public" virtualness="non" static="no">
            <type>void</type>
            <name>postGainChanged</name>
            <anchorfile>kuesa-iromattebackgroundproperties.html</anchorfile>
            <anchor>postGain-prop</anchor>
            <arglist>(float )</arglist>
        </member>
        <member kind="function" protection="public" virtualness="non" static="no">
            <type>void</type>
            <name>matteMapChanged</name>
            <anchorfile>kuesa-iromattebackgroundproperties.html</anchorfile>
            <anchor>matteMap-prop</anchor>
            <arglist>(Qt3DRender::QAbstractTexture *)</arglist>
        </member>
        <member kind="function" protection="public" virtualness="non" static="no">
            <type>void</type>
            <name>usesMatteMapChanged</name>
            <anchorfile>kuesa-iromattebackgroundproperties.html</anchorfile>
            <anchor>usesMatteMap-prop</anchor>
            <arglist>(bool )</arglist>
        </member>
        <member kind="function" protection="public" virtualness="non" static="no">
            <type>void</type>
            <name>matteFilterChanged</name>
            <anchorfile>kuesa-iromattebackgroundproperties.html</anchorfile>
            <anchor>matteFilter-prop</anchor>
            <arglist>(QVector3D )</arglist>
        </member>
        <member kind="function" protection="public" virtualness="non" static="no">
            <type>void</type>
            <name>matteGainChanged</name>
            <anchorfile>kuesa-iromattebackgroundproperties.html</anchorfile>
            <anchor>matteGain-prop</anchor>
            <arglist>(float )</arglist>
        </member>
        <member kind="function" protection="public" virtualness="non" static="no">
            <type>void</type>
            <name>uvOffsetChanged</name>
            <anchorfile>kuesa-iromattebackgroundproperties.html</anchorfile>
            <anchor>uvOffset-prop</anchor>
            <arglist>(QVector2D )</arglist>
        </member>
    </compound>
    <compound kind="class">
        <name>Kuesa::IroMatteMultEffect</name>
        <filename>kuesa-iromattemulteffect.html</filename>
        <base>GLTF2MaterialEffect</base>
    </compound>
    <compound kind="class">
        <name>Kuesa::IroMatteMultMaterial</name>
        <filename>kuesa-iromattemultmaterial.html</filename>
        <base>GLTF2Material</base>
        <member kind="property" type="Kuesa::IroMatteMultProperties*">
            <name>materialProperties</name>
            <anchorfile>kuesa-iromattemultmaterial.html</anchorfile>
            <anchor>materialProperties-prop</anchor>
            <arglist></arglist>
        </member>
        <member kind="function" protection="public" virtualness="non" static="no">
            <type>Kuesa::IroMatteMultProperties *</type>
            <name>materialProperties</name>
            <anchorfile>kuesa-iromattemultmaterial.html</anchorfile>
            <anchor>materialProperties-prop</anchor>
            <arglist>() const const</arglist>
        </member>
        <member kind="function" protection="public" virtualness="non" static="no">
            <type>void</type>
            <name>setMaterialProperties</name>
            <anchorfile>kuesa-iromattemultmaterial.html</anchorfile>
            <anchor>materialProperties-prop</anchor>
            <arglist>(Kuesa::IroMatteMultProperties *materialProperties)</arglist>
        </member>
        <member kind="function" protection="public" virtualness="non" static="no">
            <type>void</type>
            <name>setMaterialProperties</name>
            <anchorfile>kuesa-iromattemultmaterial.html</anchorfile>
            <anchor>materialProperties-prop</anchor>
            <arglist>(Kuesa::GLTF2MaterialProperties *materialProperties)</arglist>
        </member>
        <member kind="function" protection="public" virtualness="non" static="no">
            <type>void</type>
            <name>materialPropertiesChanged</name>
            <anchorfile>kuesa-iromattemultmaterial.html</anchorfile>
            <anchor>materialProperties-prop</anchor>
            <arglist>(Kuesa::IroMatteMultProperties *materialProperties)</arglist>
        </member>
    </compound>
    <compound kind="class">
        <name>Kuesa::IroMatteMultProperties</name>
        <filename>kuesa-iromattemultproperties.html</filename>
        <base>GLTF2MaterialProperties</base>
        <member kind="property" type="float">
            <name>postVertexColor</name>
            <anchorfile>kuesa-iromattemultproperties.html</anchorfile>
            <anchor>postVertexColor-prop</anchor>
            <arglist></arglist>
        </member>
        <member kind="property" type="float">
            <name>postGain</name>
            <anchorfile>kuesa-iromattemultproperties.html</anchorfile>
            <anchor>postGain-prop</anchor>
            <arglist></arglist>
        </member>
        <member kind="property" type="bool">
            <name>usesMatteMap</name>
            <anchorfile>kuesa-iromattemultproperties.html</anchorfile>
            <anchor>usesMatteMap-prop</anchor>
            <arglist></arglist>
        </member>
        <member kind="property" type="QVector3D">
            <name>matteFilter</name>
            <anchorfile>kuesa-iromattemultproperties.html</anchorfile>
            <anchor>matteFilter-prop</anchor>
            <arglist></arglist>
        </member>
        <member kind="property" type="float">
            <name>matteGain</name>
            <anchorfile>kuesa-iromattemultproperties.html</anchorfile>
            <anchor>matteGain-prop</anchor>
            <arglist></arglist>
        </member>
        <member kind="property" type="QVector2D">
            <name>uvOffset</name>
            <anchorfile>kuesa-iromattemultproperties.html</anchorfile>
            <anchor>uvOffset-prop</anchor>
            <arglist></arglist>
        </member>
        <member kind="function" protection="public" virtualness="non" static="no">
            <type>float</type>
            <name>postVertexColor</name>
            <anchorfile>kuesa-iromattemultproperties.html</anchorfile>
            <anchor>postVertexColor-prop</anchor>
            <arglist>() const const</arglist>
        </member>
        <member kind="function" protection="public" virtualness="non" static="no">
            <type>float</type>
            <name>postGain</name>
            <anchorfile>kuesa-iromattemultproperties.html</anchorfile>
            <anchor>postGain-prop</anchor>
            <arglist>() const const</arglist>
        </member>
        <member kind="function" protection="public" virtualness="non" static="no">
            <type>Qt3DRender::QAbstractTexture *</type>
            <name>matteMap</name>
            <anchorfile>kuesa-iromattemultproperties.html</anchorfile>
            <anchor>matteMap-prop</anchor>
            <arglist>() const const</arglist>
        </member>
        <member kind="function" protection="public" virtualness="non" static="no">
            <type>bool</type>
            <name>usesMatteMap</name>
            <anchorfile>kuesa-iromattemultproperties.html</anchorfile>
            <anchor>usesMatteMap-prop</anchor>
            <arglist>() const const</arglist>
        </member>
        <member kind="function" protection="public" virtualness="non" static="no">
            <type>QVector3D</type>
            <name>matteFilter</name>
            <anchorfile>kuesa-iromattemultproperties.html</anchorfile>
            <anchor>matteFilter-prop</anchor>
            <arglist>() const const</arglist>
        </member>
        <member kind="function" protection="public" virtualness="non" static="no">
            <type>float</type>
            <name>matteGain</name>
            <anchorfile>kuesa-iromattemultproperties.html</anchorfile>
            <anchor>matteGain-prop</anchor>
            <arglist>() const const</arglist>
        </member>
        <member kind="function" protection="public" virtualness="non" static="no">
            <type>QVector2D</type>
            <name>uvOffset</name>
            <anchorfile>kuesa-iromattemultproperties.html</anchorfile>
            <anchor>uvOffset-prop</anchor>
            <arglist>() const const</arglist>
        </member>
        <member kind="function" protection="public" virtualness="non" static="no">
            <type>void</type>
            <name>setPostVertexColor</name>
            <anchorfile>kuesa-iromattemultproperties.html</anchorfile>
            <anchor>postVertexColor-prop</anchor>
            <arglist>(float postVertexColor)</arglist>
        </member>
        <member kind="function" protection="public" virtualness="non" static="no">
            <type>void</type>
            <name>setPostGain</name>
            <anchorfile>kuesa-iromattemultproperties.html</anchorfile>
            <anchor>postGain-prop</anchor>
            <arglist>(float postGain)</arglist>
        </member>
        <member kind="function" protection="public" virtualness="non" static="no">
            <type>void</type>
            <name>setMatteMap</name>
            <anchorfile>kuesa-iromattemultproperties.html</anchorfile>
            <anchor>matteMap-prop</anchor>
            <arglist>(Qt3DRender::QAbstractTexture *matteMap)</arglist>
        </member>
        <member kind="function" protection="public" virtualness="non" static="no">
            <type>void</type>
            <name>setUsesMatteMap</name>
            <anchorfile>kuesa-iromattemultproperties.html</anchorfile>
            <anchor>usesMatteMap-prop</anchor>
            <arglist>(bool usesMatteMap)</arglist>
        </member>
        <member kind="function" protection="public" virtualness="non" static="no">
            <type>void</type>
            <name>setMatteFilter</name>
            <anchorfile>kuesa-iromattemultproperties.html</anchorfile>
            <anchor>matteFilter-prop</anchor>
            <arglist>(const QVector3D &amp;matteFilter)</arglist>
        </member>
        <member kind="function" protection="public" virtualness="non" static="no">
            <type>void</type>
            <name>setMatteGain</name>
            <anchorfile>kuesa-iromattemultproperties.html</anchorfile>
            <anchor>matteGain-prop</anchor>
            <arglist>(float matteGain)</arglist>
        </member>
        <member kind="function" protection="public" virtualness="non" static="no">
            <type>void</type>
            <name>setUvOffset</name>
            <anchorfile>kuesa-iromattemultproperties.html</anchorfile>
            <anchor>uvOffset-prop</anchor>
            <arglist>(const QVector2D &amp;uvOffset)</arglist>
        </member>
        <member kind="function" protection="public" virtualness="non" static="no">
            <type>void</type>
            <name>postVertexColorChanged</name>
            <anchorfile>kuesa-iromattemultproperties.html</anchorfile>
            <anchor>postVertexColor-prop</anchor>
            <arglist>(float )</arglist>
        </member>
        <member kind="function" protection="public" virtualness="non" static="no">
            <type>void</type>
            <name>postGainChanged</name>
            <anchorfile>kuesa-iromattemultproperties.html</anchorfile>
            <anchor>postGain-prop</anchor>
            <arglist>(float )</arglist>
        </member>
        <member kind="function" protection="public" virtualness="non" static="no">
            <type>void</type>
            <name>matteMapChanged</name>
            <anchorfile>kuesa-iromattemultproperties.html</anchorfile>
            <anchor>matteMap-prop</anchor>
            <arglist>(Qt3DRender::QAbstractTexture *)</arglist>
        </member>
        <member kind="function" protection="public" virtualness="non" static="no">
            <type>void</type>
            <name>usesMatteMapChanged</name>
            <anchorfile>kuesa-iromattemultproperties.html</anchorfile>
            <anchor>usesMatteMap-prop</anchor>
            <arglist>(bool )</arglist>
        </member>
        <member kind="function" protection="public" virtualness="non" static="no">
            <type>void</type>
            <name>matteFilterChanged</name>
            <anchorfile>kuesa-iromattemultproperties.html</anchorfile>
            <anchor>matteFilter-prop</anchor>
            <arglist>(QVector3D )</arglist>
        </member>
        <member kind="function" protection="public" virtualness="non" static="no">
            <type>void</type>
            <name>matteGainChanged</name>
            <anchorfile>kuesa-iromattemultproperties.html</anchorfile>
            <anchor>matteGain-prop</anchor>
            <arglist>(float )</arglist>
        </member>
        <member kind="function" protection="public" virtualness="non" static="no">
            <type>void</type>
            <name>uvOffsetChanged</name>
            <anchorfile>kuesa-iromattemultproperties.html</anchorfile>
            <anchor>uvOffset-prop</anchor>
            <arglist>(QVector2D )</arglist>
        </member>
    </compound>
    <compound kind="class">
        <name>Kuesa::IroMatteOpaqueEffect</name>
        <filename>kuesa-iromatteopaqueeffect.html</filename>
        <base>GLTF2MaterialEffect</base>
    </compound>
    <compound kind="class">
        <name>Kuesa::IroMatteOpaqueMaterial</name>
        <filename>kuesa-iromatteopaquematerial.html</filename>
        <base>GLTF2Material</base>
        <member kind="property" type="Kuesa::IroMatteOpaqueProperties*">
            <name>materialProperties</name>
            <anchorfile>kuesa-iromatteopaquematerial.html</anchorfile>
            <anchor>materialProperties-prop</anchor>
            <arglist></arglist>
        </member>
        <member kind="function" protection="public" virtualness="non" static="no">
            <type>Kuesa::IroMatteOpaqueProperties *</type>
            <name>materialProperties</name>
            <anchorfile>kuesa-iromatteopaquematerial.html</anchorfile>
            <anchor>materialProperties-prop</anchor>
            <arglist>() const const</arglist>
        </member>
        <member kind="function" protection="public" virtualness="non" static="no">
            <type>void</type>
            <name>setMaterialProperties</name>
            <anchorfile>kuesa-iromatteopaquematerial.html</anchorfile>
            <anchor>materialProperties-prop</anchor>
            <arglist>(Kuesa::IroMatteOpaqueProperties *materialProperties)</arglist>
        </member>
        <member kind="function" protection="public" virtualness="non" static="no">
            <type>void</type>
            <name>setMaterialProperties</name>
            <anchorfile>kuesa-iromatteopaquematerial.html</anchorfile>
            <anchor>materialProperties-prop</anchor>
            <arglist>(Kuesa::GLTF2MaterialProperties *materialProperties)</arglist>
        </member>
        <member kind="function" protection="public" virtualness="non" static="no">
            <type>void</type>
            <name>materialPropertiesChanged</name>
            <anchorfile>kuesa-iromatteopaquematerial.html</anchorfile>
            <anchor>materialProperties-prop</anchor>
            <arglist>(Kuesa::IroMatteOpaqueProperties *materialProperties)</arglist>
        </member>
    </compound>
    <compound kind="class">
        <name>Kuesa::IroMatteOpaqueProperties</name>
        <filename>kuesa-iromatteopaqueproperties.html</filename>
        <base>GLTF2MaterialProperties</base>
        <member kind="property" type="float">
            <name>postVertexColor</name>
            <anchorfile>kuesa-iromatteopaqueproperties.html</anchorfile>
            <anchor>postVertexColor-prop</anchor>
            <arglist></arglist>
        </member>
        <member kind="property" type="float">
            <name>postGain</name>
            <anchorfile>kuesa-iromatteopaqueproperties.html</anchorfile>
            <anchor>postGain-prop</anchor>
            <arglist></arglist>
        </member>
        <member kind="property" type="bool">
            <name>usesMatteMap</name>
            <anchorfile>kuesa-iromatteopaqueproperties.html</anchorfile>
            <anchor>usesMatteMap-prop</anchor>
            <arglist></arglist>
        </member>
        <member kind="property" type="QVector3D">
            <name>matteFilter</name>
            <anchorfile>kuesa-iromatteopaqueproperties.html</anchorfile>
            <anchor>matteFilter-prop</anchor>
            <arglist></arglist>
        </member>
        <member kind="property" type="float">
            <name>matteGain</name>
            <anchorfile>kuesa-iromatteopaqueproperties.html</anchorfile>
            <anchor>matteGain-prop</anchor>
            <arglist></arglist>
        </member>
        <member kind="property" type="QVector2D">
            <name>uvOffset</name>
            <anchorfile>kuesa-iromatteopaqueproperties.html</anchorfile>
            <anchor>uvOffset-prop</anchor>
            <arglist></arglist>
        </member>
        <member kind="function" protection="public" virtualness="non" static="no">
            <type>float</type>
            <name>postVertexColor</name>
            <anchorfile>kuesa-iromatteopaqueproperties.html</anchorfile>
            <anchor>postVertexColor-prop</anchor>
            <arglist>() const const</arglist>
        </member>
        <member kind="function" protection="public" virtualness="non" static="no">
            <type>float</type>
            <name>postGain</name>
            <anchorfile>kuesa-iromatteopaqueproperties.html</anchorfile>
            <anchor>postGain-prop</anchor>
            <arglist>() const const</arglist>
        </member>
        <member kind="function" protection="public" virtualness="non" static="no">
            <type>Qt3DRender::QAbstractTexture *</type>
            <name>matteMap</name>
            <anchorfile>kuesa-iromatteopaqueproperties.html</anchorfile>
            <anchor>matteMap-prop</anchor>
            <arglist>() const const</arglist>
        </member>
        <member kind="function" protection="public" virtualness="non" static="no">
            <type>bool</type>
            <name>usesMatteMap</name>
            <anchorfile>kuesa-iromatteopaqueproperties.html</anchorfile>
            <anchor>usesMatteMap-prop</anchor>
            <arglist>() const const</arglist>
        </member>
        <member kind="function" protection="public" virtualness="non" static="no">
            <type>QVector3D</type>
            <name>matteFilter</name>
            <anchorfile>kuesa-iromatteopaqueproperties.html</anchorfile>
            <anchor>matteFilter-prop</anchor>
            <arglist>() const const</arglist>
        </member>
        <member kind="function" protection="public" virtualness="non" static="no">
            <type>float</type>
            <name>matteGain</name>
            <anchorfile>kuesa-iromatteopaqueproperties.html</anchorfile>
            <anchor>matteGain-prop</anchor>
            <arglist>() const const</arglist>
        </member>
        <member kind="function" protection="public" virtualness="non" static="no">
            <type>QVector2D</type>
            <name>uvOffset</name>
            <anchorfile>kuesa-iromatteopaqueproperties.html</anchorfile>
            <anchor>uvOffset-prop</anchor>
            <arglist>() const const</arglist>
        </member>
        <member kind="function" protection="public" virtualness="non" static="no">
            <type>void</type>
            <name>setPostVertexColor</name>
            <anchorfile>kuesa-iromatteopaqueproperties.html</anchorfile>
            <anchor>postVertexColor-prop</anchor>
            <arglist>(float postVertexColor)</arglist>
        </member>
        <member kind="function" protection="public" virtualness="non" static="no">
            <type>void</type>
            <name>setPostGain</name>
            <anchorfile>kuesa-iromatteopaqueproperties.html</anchorfile>
            <anchor>postGain-prop</anchor>
            <arglist>(float postGain)</arglist>
        </member>
        <member kind="function" protection="public" virtualness="non" static="no">
            <type>void</type>
            <name>setMatteMap</name>
            <anchorfile>kuesa-iromatteopaqueproperties.html</anchorfile>
            <anchor>matteMap-prop</anchor>
            <arglist>(Qt3DRender::QAbstractTexture *matteMap)</arglist>
        </member>
        <member kind="function" protection="public" virtualness="non" static="no">
            <type>void</type>
            <name>setUsesMatteMap</name>
            <anchorfile>kuesa-iromatteopaqueproperties.html</anchorfile>
            <anchor>usesMatteMap-prop</anchor>
            <arglist>(bool usesMatteMap)</arglist>
        </member>
        <member kind="function" protection="public" virtualness="non" static="no">
            <type>void</type>
            <name>setMatteFilter</name>
            <anchorfile>kuesa-iromatteopaqueproperties.html</anchorfile>
            <anchor>matteFilter-prop</anchor>
            <arglist>(const QVector3D &amp;matteFilter)</arglist>
        </member>
        <member kind="function" protection="public" virtualness="non" static="no">
            <type>void</type>
            <name>setMatteGain</name>
            <anchorfile>kuesa-iromatteopaqueproperties.html</anchorfile>
            <anchor>matteGain-prop</anchor>
            <arglist>(float matteGain)</arglist>
        </member>
        <member kind="function" protection="public" virtualness="non" static="no">
            <type>void</type>
            <name>setUvOffset</name>
            <anchorfile>kuesa-iromatteopaqueproperties.html</anchorfile>
            <anchor>uvOffset-prop</anchor>
            <arglist>(const QVector2D &amp;uvOffset)</arglist>
        </member>
        <member kind="function" protection="public" virtualness="non" static="no">
            <type>void</type>
            <name>postVertexColorChanged</name>
            <anchorfile>kuesa-iromatteopaqueproperties.html</anchorfile>
            <anchor>postVertexColor-prop</anchor>
            <arglist>(float )</arglist>
        </member>
        <member kind="function" protection="public" virtualness="non" static="no">
            <type>void</type>
            <name>postGainChanged</name>
            <anchorfile>kuesa-iromatteopaqueproperties.html</anchorfile>
            <anchor>postGain-prop</anchor>
            <arglist>(float )</arglist>
        </member>
        <member kind="function" protection="public" virtualness="non" static="no">
            <type>void</type>
            <name>matteMapChanged</name>
            <anchorfile>kuesa-iromatteopaqueproperties.html</anchorfile>
            <anchor>matteMap-prop</anchor>
            <arglist>(Qt3DRender::QAbstractTexture *)</arglist>
        </member>
        <member kind="function" protection="public" virtualness="non" static="no">
            <type>void</type>
            <name>usesMatteMapChanged</name>
            <anchorfile>kuesa-iromatteopaqueproperties.html</anchorfile>
            <anchor>usesMatteMap-prop</anchor>
            <arglist>(bool )</arglist>
        </member>
        <member kind="function" protection="public" virtualness="non" static="no">
            <type>void</type>
            <name>matteFilterChanged</name>
            <anchorfile>kuesa-iromatteopaqueproperties.html</anchorfile>
            <anchor>matteFilter-prop</anchor>
            <arglist>(QVector3D )</arglist>
        </member>
        <member kind="function" protection="public" virtualness="non" static="no">
            <type>void</type>
            <name>matteGainChanged</name>
            <anchorfile>kuesa-iromatteopaqueproperties.html</anchorfile>
            <anchor>matteGain-prop</anchor>
            <arglist>(float )</arglist>
        </member>
        <member kind="function" protection="public" virtualness="non" static="no">
            <type>void</type>
            <name>uvOffsetChanged</name>
            <anchorfile>kuesa-iromatteopaqueproperties.html</anchorfile>
            <anchor>uvOffset-prop</anchor>
            <arglist>(QVector2D )</arglist>
        </member>
    </compound>
    <compound kind="class">
        <name>Kuesa::IroMatteSkyboxEffect</name>
        <filename>kuesa-iromatteskyboxeffect.html</filename>
        <base>GLTF2MaterialEffect</base>
    </compound>
    <compound kind="class">
        <name>Kuesa::IroMatteSkyboxMaterial</name>
        <filename>kuesa-iromatteskyboxmaterial.html</filename>
        <base>GLTF2Material</base>
        <member kind="property" type="Kuesa::IroMatteSkyboxProperties*">
            <name>materialProperties</name>
            <anchorfile>kuesa-iromatteskyboxmaterial.html</anchorfile>
            <anchor>materialProperties-prop</anchor>
            <arglist></arglist>
        </member>
        <member kind="function" protection="public" virtualness="non" static="no">
            <type>Kuesa::IroMatteSkyboxProperties *</type>
            <name>materialProperties</name>
            <anchorfile>kuesa-iromatteskyboxmaterial.html</anchorfile>
            <anchor>materialProperties-prop</anchor>
            <arglist>() const const</arglist>
        </member>
        <member kind="function" protection="public" virtualness="non" static="no">
            <type>void</type>
            <name>setMaterialProperties</name>
            <anchorfile>kuesa-iromatteskyboxmaterial.html</anchorfile>
            <anchor>materialProperties-prop</anchor>
            <arglist>(Kuesa::IroMatteSkyboxProperties *materialProperties)</arglist>
        </member>
        <member kind="function" protection="public" virtualness="non" static="no">
            <type>void</type>
            <name>setMaterialProperties</name>
            <anchorfile>kuesa-iromatteskyboxmaterial.html</anchorfile>
            <anchor>materialProperties-prop</anchor>
            <arglist>(Kuesa::GLTF2MaterialProperties *materialProperties)</arglist>
        </member>
        <member kind="function" protection="public" virtualness="non" static="no">
            <type>void</type>
            <name>materialPropertiesChanged</name>
            <anchorfile>kuesa-iromatteskyboxmaterial.html</anchorfile>
            <anchor>materialProperties-prop</anchor>
            <arglist>(Kuesa::IroMatteSkyboxProperties *materialProperties)</arglist>
        </member>
    </compound>
    <compound kind="class">
        <name>Kuesa::IroMatteSkyboxProperties</name>
        <filename>kuesa-iromatteskyboxproperties.html</filename>
        <base>GLTF2MaterialProperties</base>
        <member kind="property" type="float">
            <name>postVertexColor</name>
            <anchorfile>kuesa-iromatteskyboxproperties.html</anchorfile>
            <anchor>postVertexColor-prop</anchor>
            <arglist></arglist>
        </member>
        <member kind="property" type="float">
            <name>postGain</name>
            <anchorfile>kuesa-iromatteskyboxproperties.html</anchorfile>
            <anchor>postGain-prop</anchor>
            <arglist></arglist>
        </member>
        <member kind="property" type="bool">
            <name>usesMatteMap</name>
            <anchorfile>kuesa-iromatteskyboxproperties.html</anchorfile>
            <anchor>usesMatteMap-prop</anchor>
            <arglist></arglist>
        </member>
        <member kind="property" type="QVector3D">
            <name>matteFilter</name>
            <anchorfile>kuesa-iromatteskyboxproperties.html</anchorfile>
            <anchor>matteFilter-prop</anchor>
            <arglist></arglist>
        </member>
        <member kind="property" type="float">
            <name>matteGain</name>
            <anchorfile>kuesa-iromatteskyboxproperties.html</anchorfile>
            <anchor>matteGain-prop</anchor>
            <arglist></arglist>
        </member>
        <member kind="property" type="QVector2D">
            <name>uvOffset</name>
            <anchorfile>kuesa-iromatteskyboxproperties.html</anchorfile>
            <anchor>uvOffset-prop</anchor>
            <arglist></arglist>
        </member>
        <member kind="function" protection="public" virtualness="non" static="no">
            <type>float</type>
            <name>postVertexColor</name>
            <anchorfile>kuesa-iromatteskyboxproperties.html</anchorfile>
            <anchor>postVertexColor-prop</anchor>
            <arglist>() const const</arglist>
        </member>
        <member kind="function" protection="public" virtualness="non" static="no">
            <type>float</type>
            <name>postGain</name>
            <anchorfile>kuesa-iromatteskyboxproperties.html</anchorfile>
            <anchor>postGain-prop</anchor>
            <arglist>() const const</arglist>
        </member>
        <member kind="function" protection="public" virtualness="non" static="no">
            <type>Qt3DRender::QAbstractTexture *</type>
            <name>matteMap</name>
            <anchorfile>kuesa-iromatteskyboxproperties.html</anchorfile>
            <anchor>matteMap-prop</anchor>
            <arglist>() const const</arglist>
        </member>
        <member kind="function" protection="public" virtualness="non" static="no">
            <type>bool</type>
            <name>usesMatteMap</name>
            <anchorfile>kuesa-iromatteskyboxproperties.html</anchorfile>
            <anchor>usesMatteMap-prop</anchor>
            <arglist>() const const</arglist>
        </member>
        <member kind="function" protection="public" virtualness="non" static="no">
            <type>QVector3D</type>
            <name>matteFilter</name>
            <anchorfile>kuesa-iromatteskyboxproperties.html</anchorfile>
            <anchor>matteFilter-prop</anchor>
            <arglist>() const const</arglist>
        </member>
        <member kind="function" protection="public" virtualness="non" static="no">
            <type>float</type>
            <name>matteGain</name>
            <anchorfile>kuesa-iromatteskyboxproperties.html</anchorfile>
            <anchor>matteGain-prop</anchor>
            <arglist>() const const</arglist>
        </member>
        <member kind="function" protection="public" virtualness="non" static="no">
            <type>QVector2D</type>
            <name>uvOffset</name>
            <anchorfile>kuesa-iromatteskyboxproperties.html</anchorfile>
            <anchor>uvOffset-prop</anchor>
            <arglist>() const const</arglist>
        </member>
        <member kind="function" protection="public" virtualness="non" static="no">
            <type>void</type>
            <name>setPostVertexColor</name>
            <anchorfile>kuesa-iromatteskyboxproperties.html</anchorfile>
            <anchor>postVertexColor-prop</anchor>
            <arglist>(float postVertexColor)</arglist>
        </member>
        <member kind="function" protection="public" virtualness="non" static="no">
            <type>void</type>
            <name>setPostGain</name>
            <anchorfile>kuesa-iromatteskyboxproperties.html</anchorfile>
            <anchor>postGain-prop</anchor>
            <arglist>(float postGain)</arglist>
        </member>
        <member kind="function" protection="public" virtualness="non" static="no">
            <type>void</type>
            <name>setMatteMap</name>
            <anchorfile>kuesa-iromatteskyboxproperties.html</anchorfile>
            <anchor>matteMap-prop</anchor>
            <arglist>(Qt3DRender::QAbstractTexture *matteMap)</arglist>
        </member>
        <member kind="function" protection="public" virtualness="non" static="no">
            <type>void</type>
            <name>setUsesMatteMap</name>
            <anchorfile>kuesa-iromatteskyboxproperties.html</anchorfile>
            <anchor>usesMatteMap-prop</anchor>
            <arglist>(bool usesMatteMap)</arglist>
        </member>
        <member kind="function" protection="public" virtualness="non" static="no">
            <type>void</type>
            <name>setMatteFilter</name>
            <anchorfile>kuesa-iromatteskyboxproperties.html</anchorfile>
            <anchor>matteFilter-prop</anchor>
            <arglist>(const QVector3D &amp;matteFilter)</arglist>
        </member>
        <member kind="function" protection="public" virtualness="non" static="no">
            <type>void</type>
            <name>setMatteGain</name>
            <anchorfile>kuesa-iromatteskyboxproperties.html</anchorfile>
            <anchor>matteGain-prop</anchor>
            <arglist>(float matteGain)</arglist>
        </member>
        <member kind="function" protection="public" virtualness="non" static="no">
            <type>void</type>
            <name>setUvOffset</name>
            <anchorfile>kuesa-iromatteskyboxproperties.html</anchorfile>
            <anchor>uvOffset-prop</anchor>
            <arglist>(const QVector2D &amp;uvOffset)</arglist>
        </member>
        <member kind="function" protection="public" virtualness="non" static="no">
            <type>void</type>
            <name>postVertexColorChanged</name>
            <anchorfile>kuesa-iromatteskyboxproperties.html</anchorfile>
            <anchor>postVertexColor-prop</anchor>
            <arglist>(float )</arglist>
        </member>
        <member kind="function" protection="public" virtualness="non" static="no">
            <type>void</type>
            <name>postGainChanged</name>
            <anchorfile>kuesa-iromatteskyboxproperties.html</anchorfile>
            <anchor>postGain-prop</anchor>
            <arglist>(float )</arglist>
        </member>
        <member kind="function" protection="public" virtualness="non" static="no">
            <type>void</type>
            <name>matteMapChanged</name>
            <anchorfile>kuesa-iromatteskyboxproperties.html</anchorfile>
            <anchor>matteMap-prop</anchor>
            <arglist>(Qt3DRender::QAbstractTexture *)</arglist>
        </member>
        <member kind="function" protection="public" virtualness="non" static="no">
            <type>void</type>
            <name>usesMatteMapChanged</name>
            <anchorfile>kuesa-iromatteskyboxproperties.html</anchorfile>
            <anchor>usesMatteMap-prop</anchor>
            <arglist>(bool )</arglist>
        </member>
        <member kind="function" protection="public" virtualness="non" static="no">
            <type>void</type>
            <name>matteFilterChanged</name>
            <anchorfile>kuesa-iromatteskyboxproperties.html</anchorfile>
            <anchor>matteFilter-prop</anchor>
            <arglist>(QVector3D )</arglist>
        </member>
        <member kind="function" protection="public" virtualness="non" static="no">
            <type>void</type>
            <name>matteGainChanged</name>
            <anchorfile>kuesa-iromatteskyboxproperties.html</anchorfile>
            <anchor>matteGain-prop</anchor>
            <arglist>(float )</arglist>
        </member>
        <member kind="function" protection="public" virtualness="non" static="no">
            <type>void</type>
            <name>uvOffsetChanged</name>
            <anchorfile>kuesa-iromatteskyboxproperties.html</anchorfile>
            <anchor>uvOffset-prop</anchor>
            <arglist>(QVector2D )</arglist>
        </member>
    </compound>
    <compound kind="class">
        <name>Kuesa::KuesaNode</name>
        <filename>kuesa-kuesanode.html</filename>
        <member kind="property" type="Kuesa::SceneEntity*">
            <name>sceneEntity</name>
            <anchorfile>kuesa-kuesanode.html</anchorfile>
            <anchor>sceneEntity-prop</anchor>
            <arglist></arglist>
        </member>
        <member kind="function" protection="public" virtualness="non" static="no">
            <type>Kuesa::SceneEntity *</type>
            <name>sceneEntity</name>
            <anchorfile>kuesa-kuesanode.html</anchorfile>
            <anchor>sceneEntity-prop</anchor>
            <arglist>() const const</arglist>
        </member>
        <member kind="function" protection="public" virtualness="non" static="no">
            <type>void</type>
            <name>setSceneEntity</name>
            <anchorfile>kuesa-kuesanode.html</anchorfile>
            <anchor>sceneEntity-prop</anchor>
            <arglist>(Kuesa::SceneEntity *sceneEntity)</arglist>
        </member>
        <member kind="function" protection="public" virtualness="non" static="no">
            <type>void</type>
            <name>sceneEntityChanged</name>
            <anchorfile>kuesa-kuesanode.html</anchorfile>
            <anchor>sceneEntity-prop</anchor>
            <arglist>(Kuesa::SceneEntity *sceneEntity)</arglist>
        </member>
    </compound>
    <compound kind="class">
        <name>Kuesa::LayerCollection</name>
        <filename>kuesa-layercollection.html</filename>
        <base>AbstractAssetCollection</base>
    </compound>
    <compound kind="class">
        <name>Kuesa::LightCollection</name>
        <filename>kuesa-lightcollection.html</filename>
        <base>AbstractAssetCollection</base>
    </compound>
    <compound kind="class">
        <name>Kuesa::MaterialCollection</name>
        <filename>kuesa-materialcollection.html</filename>
        <base>AbstractAssetCollection</base>
    </compound>
    <compound kind="class">
        <name>Kuesa::MeshCollection</name>
        <filename>kuesa-meshcollection.html</filename>
        <base>AbstractAssetCollection</base>
        <member kind="function" protection="public" virtualness="non" static="no">
            <type>Qt3DRender::QMesh *</type>
            <name>add</name>
            <anchorfile>kuesa-meshcollection.html</anchorfile>
            <anchor>add</anchor>
            <arglist>(const QString &amp;name, const QUrl &amp;source)</arglist>
        </member>
    </compound>
    <compound kind="class">
        <name>Kuesa::MorphController</name>
        <filename>kuesa-morphcontroller.html</filename>
        <member kind="property" type="int">
            <name>count</name>
            <anchorfile>kuesa-morphcontroller.html</anchorfile>
            <anchor>count-prop</anchor>
            <arglist></arglist>
        </member>
        <member kind="property" type="float">
            <name>weight0</name>
            <anchorfile>kuesa-morphcontroller.html</anchorfile>
            <anchor>weight0-prop</anchor>
            <arglist></arglist>
        </member>
        <member kind="property" type="float">
            <name>weight1</name>
            <anchorfile>kuesa-morphcontroller.html</anchorfile>
            <anchor>weight1-prop</anchor>
            <arglist></arglist>
        </member>
        <member kind="property" type="float">
            <name>weight2</name>
            <anchorfile>kuesa-morphcontroller.html</anchorfile>
            <anchor>weight2-prop</anchor>
            <arglist></arglist>
        </member>
        <member kind="property" type="float">
            <name>weight3</name>
            <anchorfile>kuesa-morphcontroller.html</anchorfile>
            <anchor>weight3-prop</anchor>
            <arglist></arglist>
        </member>
        <member kind="property" type="float">
            <name>weight4</name>
            <anchorfile>kuesa-morphcontroller.html</anchorfile>
            <anchor>weight4-prop</anchor>
            <arglist></arglist>
        </member>
        <member kind="property" type="float">
            <name>weight5</name>
            <anchorfile>kuesa-morphcontroller.html</anchorfile>
            <anchor>weight5-prop</anchor>
            <arglist></arglist>
        </member>
        <member kind="property" type="float">
            <name>weight6</name>
            <anchorfile>kuesa-morphcontroller.html</anchorfile>
            <anchor>weight6-prop</anchor>
            <arglist></arglist>
        </member>
        <member kind="property" type="float">
            <name>weight7</name>
            <anchorfile>kuesa-morphcontroller.html</anchorfile>
            <anchor>weight7-prop</anchor>
            <arglist></arglist>
        </member>
        <member kind="function" protection="public" virtualness="non" static="no">
            <type>float</type>
            <name>weight0</name>
            <anchorfile>kuesa-morphcontroller.html</anchorfile>
            <anchor>weight0-prop</anchor>
            <arglist>() const const</arglist>
        </member>
        <member kind="function" protection="public" virtualness="non" static="no">
            <type>float</type>
            <name>weight1</name>
            <anchorfile>kuesa-morphcontroller.html</anchorfile>
            <anchor>weight1-prop</anchor>
            <arglist>() const const</arglist>
        </member>
        <member kind="function" protection="public" virtualness="non" static="no">
            <type>float</type>
            <name>weight2</name>
            <anchorfile>kuesa-morphcontroller.html</anchorfile>
            <anchor>weight2-prop</anchor>
            <arglist>() const const</arglist>
        </member>
        <member kind="function" protection="public" virtualness="non" static="no">
            <type>float</type>
            <name>weight3</name>
            <anchorfile>kuesa-morphcontroller.html</anchorfile>
            <anchor>weight3-prop</anchor>
            <arglist>() const const</arglist>
        </member>
        <member kind="function" protection="public" virtualness="non" static="no">
            <type>float</type>
            <name>weight4</name>
            <anchorfile>kuesa-morphcontroller.html</anchorfile>
            <anchor>weight4-prop</anchor>
            <arglist>() const const</arglist>
        </member>
        <member kind="function" protection="public" virtualness="non" static="no">
            <type>float</type>
            <name>weight5</name>
            <anchorfile>kuesa-morphcontroller.html</anchorfile>
            <anchor>weight5-prop</anchor>
            <arglist>() const const</arglist>
        </member>
        <member kind="function" protection="public" virtualness="non" static="no">
            <type>float</type>
            <name>weight6</name>
            <anchorfile>kuesa-morphcontroller.html</anchorfile>
            <anchor>weight6-prop</anchor>
            <arglist>() const const</arglist>
        </member>
        <member kind="function" protection="public" virtualness="non" static="no">
            <type>float</type>
            <name>weight7</name>
            <anchorfile>kuesa-morphcontroller.html</anchorfile>
            <anchor>weight7-prop</anchor>
            <arglist>() const const</arglist>
        </member>
        <member kind="function" protection="public" virtualness="non" static="no">
            <type>int</type>
            <name>count</name>
            <anchorfile>kuesa-morphcontroller.html</anchorfile>
            <anchor>count-prop</anchor>
            <arglist>() const const</arglist>
        </member>
        <member kind="function" protection="public" virtualness="non" static="no">
            <type>void</type>
            <name>setWeight0</name>
            <anchorfile>kuesa-morphcontroller.html</anchorfile>
            <anchor>weight0-prop</anchor>
            <arglist>(float weight0)</arglist>
        </member>
        <member kind="function" protection="public" virtualness="non" static="no">
            <type>void</type>
            <name>setWeight1</name>
            <anchorfile>kuesa-morphcontroller.html</anchorfile>
            <anchor>weight1-prop</anchor>
            <arglist>(float weight1)</arglist>
        </member>
        <member kind="function" protection="public" virtualness="non" static="no">
            <type>void</type>
            <name>setWeight2</name>
            <anchorfile>kuesa-morphcontroller.html</anchorfile>
            <anchor>weight2-prop</anchor>
            <arglist>(float weight2)</arglist>
        </member>
        <member kind="function" protection="public" virtualness="non" static="no">
            <type>void</type>
            <name>setWeight3</name>
            <anchorfile>kuesa-morphcontroller.html</anchorfile>
            <anchor>weight3-prop</anchor>
            <arglist>(float weight3)</arglist>
        </member>
        <member kind="function" protection="public" virtualness="non" static="no">
            <type>void</type>
            <name>setWeight4</name>
            <anchorfile>kuesa-morphcontroller.html</anchorfile>
            <anchor>weight4-prop</anchor>
            <arglist>(float weight4)</arglist>
        </member>
        <member kind="function" protection="public" virtualness="non" static="no">
            <type>void</type>
            <name>setWeight5</name>
            <anchorfile>kuesa-morphcontroller.html</anchorfile>
            <anchor>weight5-prop</anchor>
            <arglist>(float weight5)</arglist>
        </member>
        <member kind="function" protection="public" virtualness="non" static="no">
            <type>void</type>
            <name>setWeight6</name>
            <anchorfile>kuesa-morphcontroller.html</anchorfile>
            <anchor>weight6-prop</anchor>
            <arglist>(float weight6)</arglist>
        </member>
        <member kind="function" protection="public" virtualness="non" static="no">
            <type>void</type>
            <name>setWeight7</name>
            <anchorfile>kuesa-morphcontroller.html</anchorfile>
            <anchor>weight7-prop</anchor>
            <arglist>(float weight7)</arglist>
        </member>
        <member kind="function" protection="public" virtualness="non" static="no">
            <type>void</type>
            <name>weight0Changed</name>
            <anchorfile>kuesa-morphcontroller.html</anchorfile>
            <anchor>weight0-prop</anchor>
            <arglist>(float weight0)</arglist>
        </member>
        <member kind="function" protection="public" virtualness="non" static="no">
            <type>void</type>
            <name>weight1Changed</name>
            <anchorfile>kuesa-morphcontroller.html</anchorfile>
            <anchor>weight1-prop</anchor>
            <arglist>(float weight1)</arglist>
        </member>
        <member kind="function" protection="public" virtualness="non" static="no">
            <type>void</type>
            <name>weight2Changed</name>
            <anchorfile>kuesa-morphcontroller.html</anchorfile>
            <anchor>weight2-prop</anchor>
            <arglist>(float weight2)</arglist>
        </member>
        <member kind="function" protection="public" virtualness="non" static="no">
            <type>void</type>
            <name>weight3Changed</name>
            <anchorfile>kuesa-morphcontroller.html</anchorfile>
            <anchor>weight3-prop</anchor>
            <arglist>(float weight3)</arglist>
        </member>
        <member kind="function" protection="public" virtualness="non" static="no">
            <type>void</type>
            <name>weight4Changed</name>
            <anchorfile>kuesa-morphcontroller.html</anchorfile>
            <anchor>weight4-prop</anchor>
            <arglist>(float weight4)</arglist>
        </member>
        <member kind="function" protection="public" virtualness="non" static="no">
            <type>void</type>
            <name>weight5Changed</name>
            <anchorfile>kuesa-morphcontroller.html</anchorfile>
            <anchor>weight5-prop</anchor>
            <arglist>(float weight5)</arglist>
        </member>
        <member kind="function" protection="public" virtualness="non" static="no">
            <type>void</type>
            <name>weight6Changed</name>
            <anchorfile>kuesa-morphcontroller.html</anchorfile>
            <anchor>weight6-prop</anchor>
            <arglist>(float weight6)</arglist>
        </member>
        <member kind="function" protection="public" virtualness="non" static="no">
            <type>void</type>
            <name>weight7Changed</name>
            <anchorfile>kuesa-morphcontroller.html</anchorfile>
            <anchor>weight7-prop</anchor>
            <arglist>(float weight7)</arglist>
        </member>
        <member kind="function" protection="public" virtualness="non" static="no">
            <type>void</type>
            <name>countChanged</name>
            <anchorfile>kuesa-morphcontroller.html</anchorfile>
            <anchor>count-prop</anchor>
            <arglist>(int count)</arglist>
        </member>
    </compound>
    <compound kind="class">
        <name>Kuesa::Placeholder</name>
        <filename>kuesa-placeholder.html</filename>
    </compound>
    <compound kind="class">
        <name>Kuesa::PlaceholderCollection</name>
        <filename>kuesa-placeholdercollection.html</filename>
        <base>AbstractAssetCollection</base>
    </compound>
    <compound kind="class">
        <name>Kuesa::ReflectionPlane</name>
        <filename>kuesa-reflectionplane.html</filename>
        <member kind="property" type="QVector4D">
            <name>equation</name>
            <anchorfile>kuesa-reflectionplane.html</anchorfile>
            <anchor>equation-prop</anchor>
            <arglist></arglist>
        </member>
        <member kind="function" protection="public" virtualness="non" static="no">
            <type>void</type>
            <name>setEquation</name>
            <anchorfile>kuesa-reflectionplane.html</anchorfile>
            <anchor>equation-prop</anchor>
            <arglist>(const QVector4D &amp;equation)</arglist>
        </member>
        <member kind="function" protection="public" virtualness="non" static="no">
            <type>QVector4D</type>
            <name>equation</name>
            <anchorfile>kuesa-reflectionplane.html</anchorfile>
            <anchor>equation-prop</anchor>
            <arglist>() const const</arglist>
        </member>
        <member kind="function" protection="public" virtualness="non" static="no">
            <type>const std::vector&lt;Qt3DRender::QLayer *&gt; &amp;</type>
            <name>layers</name>
            <anchorfile>kuesa-reflectionplane.html</anchorfile>
            <anchor>layers</anchor>
            <arglist>() const const</arglist>
        </member>
        <member kind="function" protection="public" virtualness="non" static="no">
            <type>void</type>
            <name>equationChanged</name>
            <anchorfile>kuesa-reflectionplane.html</anchorfile>
            <anchor>equation-prop</anchor>
            <arglist>(const QVector4D &amp;equation)</arglist>
        </member>
    </compound>
    <compound kind="class">
        <name>Kuesa::ReflectionPlaneCollection</name>
        <filename>kuesa-reflectionplanecollection.html</filename>
        <base>AbstractAssetCollection</base>
    </compound>
    <compound kind="class">
        <name>Kuesa::ShadowCastingLight</name>
        <filename>kuesa-shadowcastinglight.html</filename>
        <member kind="property" type="bool">
            <name>castsShadows</name>
            <anchorfile>kuesa-shadowcastinglight.html</anchorfile>
            <anchor>castsShadows-prop</anchor>
            <arglist></arglist>
        </member>
        <member kind="property" type="bool">
            <name>softShadows</name>
            <anchorfile>kuesa-shadowcastinglight.html</anchorfile>
            <anchor>softShadows-prop</anchor>
            <arglist></arglist>
        </member>
        <member kind="property" type="QSize">
            <name>textureSize</name>
            <anchorfile>kuesa-shadowcastinglight.html</anchorfile>
            <anchor>textureSize-prop</anchor>
            <arglist></arglist>
        </member>
        <member kind="property" type="float">
            <name>shadowMapBias</name>
            <anchorfile>kuesa-shadowcastinglight.html</anchorfile>
            <anchor>shadowMapBias-prop</anchor>
            <arglist></arglist>
        </member>
        <member kind="property" type="float">
            <name>nearPlane</name>
            <anchorfile>kuesa-shadowcastinglight.html</anchorfile>
            <anchor>nearPlane-prop</anchor>
            <arglist></arglist>
        </member>
        <member kind="function" protection="public" virtualness="non" static="no">
            <type>bool</type>
            <name>castsShadows</name>
            <anchorfile>kuesa-shadowcastinglight.html</anchorfile>
            <anchor>castsShadows-prop</anchor>
            <arglist>() const const</arglist>
        </member>
        <member kind="function" protection="public" virtualness="non" static="no">
            <type>QSize</type>
            <name>textureSize</name>
            <anchorfile>kuesa-shadowcastinglight.html</anchorfile>
            <anchor>textureSize-prop</anchor>
            <arglist>() const const</arglist>
        </member>
        <member kind="function" protection="public" virtualness="non" static="no">
            <type>float</type>
            <name>shadowMapBias</name>
            <anchorfile>kuesa-shadowcastinglight.html</anchorfile>
            <anchor>shadowMapBias-prop</anchor>
            <arglist>() const const</arglist>
        </member>
        <member kind="function" protection="public" virtualness="non" static="no">
            <type>float</type>
            <name>nearPlane</name>
            <anchorfile>kuesa-shadowcastinglight.html</anchorfile>
            <anchor>nearPlane-prop</anchor>
            <arglist>() const const</arglist>
        </member>
        <member kind="function" protection="public" virtualness="non" static="no">
            <type>bool</type>
            <name>softShadows</name>
            <anchorfile>kuesa-shadowcastinglight.html</anchorfile>
            <anchor>softShadows-prop</anchor>
            <arglist>() const const</arglist>
        </member>
        <member kind="function" protection="public" virtualness="non" static="no">
            <type>void</type>
            <name>setCastsShadows</name>
            <anchorfile>kuesa-shadowcastinglight.html</anchorfile>
            <anchor>castsShadows-prop</anchor>
            <arglist>(bool castsShadows)</arglist>
        </member>
        <member kind="function" protection="public" virtualness="non" static="no">
            <type>void</type>
            <name>setTextureSize</name>
            <anchorfile>kuesa-shadowcastinglight.html</anchorfile>
            <anchor>textureSize-prop</anchor>
            <arglist>(const QSize &amp;textureSize)</arglist>
        </member>
        <member kind="function" protection="public" virtualness="non" static="no">
            <type>void</type>
            <name>setShadowMapBias</name>
            <anchorfile>kuesa-shadowcastinglight.html</anchorfile>
            <anchor>shadowMapBias-prop</anchor>
            <arglist>(float bias)</arglist>
        </member>
        <member kind="function" protection="public" virtualness="non" static="no">
            <type>void</type>
            <name>setNearPlane</name>
            <anchorfile>kuesa-shadowcastinglight.html</anchorfile>
            <anchor>nearPlane-prop</anchor>
            <arglist>(float nearPlane)</arglist>
        </member>
        <member kind="function" protection="public" virtualness="non" static="no">
            <type>void</type>
            <name>setSoftShadows</name>
            <anchorfile>kuesa-shadowcastinglight.html</anchorfile>
            <anchor>softShadows-prop</anchor>
            <arglist>(bool softShadows)</arglist>
        </member>
        <member kind="function" protection="public" virtualness="non" static="no">
            <type>void</type>
            <name>castsShadowsChanged</name>
            <anchorfile>kuesa-shadowcastinglight.html</anchorfile>
            <anchor>castsShadows-prop</anchor>
            <arglist>(bool castsShadows)</arglist>
        </member>
        <member kind="function" protection="public" virtualness="non" static="no">
            <type>void</type>
            <name>textureSizeChanged</name>
            <anchorfile>kuesa-shadowcastinglight.html</anchorfile>
            <anchor>textureSize-prop</anchor>
            <arglist>(const QSize &amp;textureSize)</arglist>
        </member>
        <member kind="function" protection="public" virtualness="non" static="no">
            <type>void</type>
            <name>biasChanged</name>
            <anchorfile>kuesa-shadowcastinglight.html</anchorfile>
            <anchor>shadowMapBias-prop</anchor>
            <arglist>(float bias)</arglist>
        </member>
        <member kind="function" protection="public" virtualness="non" static="no">
            <type>void</type>
            <name>nearPlaneChanged</name>
            <anchorfile>kuesa-shadowcastinglight.html</anchorfile>
            <anchor>nearPlane-prop</anchor>
            <arglist>(float nearPlane)</arglist>
        </member>
        <member kind="function" protection="public" virtualness="non" static="no">
            <type>void</type>
            <name>softShadowsChanged</name>
            <anchorfile>kuesa-shadowcastinglight.html</anchorfile>
            <anchor>softShadows-prop</anchor>
            <arglist>(bool softShadows)</arglist>
        </member>
    </compound>
    <compound kind="class">
        <name>Kuesa::SkeletonCollection</name>
        <filename>kuesa-skeletoncollection.html</filename>
        <base>AbstractAssetCollection</base>
        <member kind="function" protection="public" virtualness="non" static="no">
            <type>Qt3DCore::QSkeletonLoader *</type>
            <name>add</name>
            <anchorfile>kuesa-skeletoncollection.html</anchorfile>
            <anchor>add</anchor>
            <arglist>(const QString &amp;name, const QUrl &amp;source)</arglist>
        </member>
    </compound>
    <compound kind="class">
        <name>Kuesa::TextureCollection</name>
        <filename>kuesa-texturecollection.html</filename>
        <base>AbstractAssetCollection</base>
        <member kind="function" protection="public" virtualness="non" static="no">
            <type>Qt3DRender::QTextureLoader *</type>
            <name>add</name>
            <anchorfile>kuesa-texturecollection.html</anchorfile>
            <anchor>add</anchor>
            <arglist>(const QString &amp;name, const QUrl &amp;source)</arglist>
        </member>
    </compound>
    <compound kind="class">
        <name>Kuesa::TextureImageCollection</name>
        <filename>kuesa-textureimagecollection.html</filename>
        <base>AbstractAssetCollection</base>
        <member kind="function" protection="public" virtualness="non" static="no">
            <type>Qt3DRender::QTextureImage *</type>
            <name>add</name>
            <anchorfile>kuesa-textureimagecollection.html</anchorfile>
            <anchor>add</anchor>
            <arglist>(const QString &amp;name, const QUrl &amp;source)</arglist>
        </member>
    </compound>
    <compound kind="class">
        <name>Kuesa::TextureTransform</name>
        <filename>kuesa-texturetransform.html</filename>
        <member kind="property" type="QVector2D">
            <name>offset</name>
            <anchorfile>kuesa-texturetransform.html</anchorfile>
            <anchor>offset-prop</anchor>
            <arglist></arglist>
        </member>
        <member kind="property" type="QVector2D">
            <name>scale</name>
            <anchorfile>kuesa-texturetransform.html</anchorfile>
            <anchor>scale-prop</anchor>
            <arglist></arglist>
        </member>
        <member kind="property" type="float">
            <name>rotation</name>
            <anchorfile>kuesa-texturetransform.html</anchorfile>
            <anchor>rotation-prop</anchor>
            <arglist></arglist>
        </member>
        <member kind="property" type="QMatrix3x3">
            <name>matrix</name>
            <anchorfile>kuesa-texturetransform.html</anchorfile>
            <anchor>matrix-prop</anchor>
            <arglist></arglist>
        </member>
        <member kind="function" protection="public" virtualness="non" static="no">
            <type>const QVector2D &amp;</type>
            <name>offset</name>
            <anchorfile>kuesa-texturetransform.html</anchorfile>
            <anchor>offset-prop</anchor>
            <arglist>() const const</arglist>
        </member>
        <member kind="function" protection="public" virtualness="non" static="no">
            <type>const QVector2D &amp;</type>
            <name>scale</name>
            <anchorfile>kuesa-texturetransform.html</anchorfile>
            <anchor>scale-prop</anchor>
            <arglist>() const const</arglist>
        </member>
        <member kind="function" protection="public" virtualness="non" static="no">
            <type>float</type>
            <name>rotation</name>
            <anchorfile>kuesa-texturetransform.html</anchorfile>
            <anchor>rotation-prop</anchor>
            <arglist>() const const</arglist>
        </member>
        <member kind="function" protection="public" virtualness="non" static="no">
            <type>QMatrix3x3</type>
            <name>matrix</name>
            <anchorfile>kuesa-texturetransform.html</anchorfile>
            <anchor>matrix-prop</anchor>
            <arglist>() const const</arglist>
        </member>
        <member kind="function" protection="public" virtualness="non" static="no">
            <type>void</type>
            <name>setOffset</name>
            <anchorfile>kuesa-texturetransform.html</anchorfile>
            <anchor>offset-prop</anchor>
            <arglist>(const QVector2D &amp;offset)</arglist>
        </member>
        <member kind="function" protection="public" virtualness="non" static="no">
            <type>void</type>
            <name>setScale</name>
            <anchorfile>kuesa-texturetransform.html</anchorfile>
            <anchor>scale-prop</anchor>
            <arglist>(const QVector2D &amp;scale)</arglist>
        </member>
        <member kind="function" protection="public" virtualness="non" static="no">
            <type>void</type>
            <name>setRotation</name>
            <anchorfile>kuesa-texturetransform.html</anchorfile>
            <anchor>rotation-prop</anchor>
            <arglist>(float rotation)</arglist>
        </member>
        <member kind="function" protection="public" virtualness="non" static="no">
            <type>void</type>
            <name>offsetChanged</name>
            <anchorfile>kuesa-texturetransform.html</anchorfile>
            <anchor>offset-prop</anchor>
            <arglist>(const QVector2D &amp;offset)</arglist>
        </member>
        <member kind="function" protection="public" virtualness="non" static="no">
            <type>void</type>
            <name>scaleChanged</name>
            <anchorfile>kuesa-texturetransform.html</anchorfile>
            <anchor>scale-prop</anchor>
            <arglist>(const QVector2D &amp;scale)</arglist>
        </member>
        <member kind="function" protection="public" virtualness="non" static="no">
            <type>void</type>
            <name>rotationChanged</name>
            <anchorfile>kuesa-texturetransform.html</anchorfile>
            <anchor>rotation-prop</anchor>
            <arglist>(float rotation)</arglist>
        </member>
    </compound>
    <compound kind="class">
        <name>Kuesa::ToneMappingAndGammaCorrectionEffect</name>
        <filename>kuesa-tonemappingandgammacorrectioneffect.html</filename>
        <base>AbstractPostProcessingEffect</base>
        <member kind="property" type="float">
            <name>exposure</name>
            <anchorfile>kuesa-tonemappingandgammacorrectioneffect.html</anchorfile>
            <anchor>exposure-prop</anchor>
            <arglist></arglist>
        </member>
        <member kind="property" type="float">
            <name>gamma</name>
            <anchorfile>kuesa-tonemappingandgammacorrectioneffect.html</anchorfile>
            <anchor>gamma-prop</anchor>
            <arglist></arglist>
        </member>
        <member kind="property" type="Kuesa::ToneMappingAndGammaCorrectionEffect::ToneMapping">
            <name>toneMappingAlgorithm</name>
            <anchorfile>kuesa-tonemappingandgammacorrectioneffect.html</anchorfile>
            <anchor>toneMappingAlgorithm-prop</anchor>
            <arglist></arglist>
        </member>
        <member kind="enumeration">
            <name>ToneMapping</name>
            <anchorfile>kuesa-tonemappingandgammacorrectioneffect.html</anchorfile>
            <anchor>ToneMapping-enum</anchor>
        </member>
        <member kind="enumvalue">
            <name>None</name>
            <anchorfile>kuesa-tonemappingandgammacorrectioneffect.html</anchorfile>
            <anchor>ToneMapping-enum</anchor>
            <arglist></arglist>
        </member>
        <member kind="enumvalue">
            <name>Reinhard</name>
            <anchorfile>kuesa-tonemappingandgammacorrectioneffect.html</anchorfile>
            <anchor>ToneMapping-enum</anchor>
            <arglist></arglist>
        </member>
        <member kind="enumvalue">
            <name>Filmic</name>
            <anchorfile>kuesa-tonemappingandgammacorrectioneffect.html</anchorfile>
            <anchor>ToneMapping-enum</anchor>
            <arglist></arglist>
        </member>
        <member kind="enumvalue">
            <name>Uncharted</name>
            <anchorfile>kuesa-tonemappingandgammacorrectioneffect.html</anchorfile>
            <anchor>ToneMapping-enum</anchor>
            <arglist></arglist>
        </member>
        <member kind="function" protection="public" virtualness="non" static="no">
            <type>float</type>
            <name>exposure</name>
            <anchorfile>kuesa-tonemappingandgammacorrectioneffect.html</anchorfile>
            <anchor>exposure-prop</anchor>
            <arglist>() const const</arglist>
        </member>
        <member kind="function" protection="public" virtualness="non" static="no">
            <type>float</type>
            <name>gamma</name>
            <anchorfile>kuesa-tonemappingandgammacorrectioneffect.html</anchorfile>
            <anchor>gamma-prop</anchor>
            <arglist>() const const</arglist>
        </member>
        <member kind="function" protection="public" virtualness="non" static="no">
            <type>Kuesa::ToneMappingAndGammaCorrectionEffect::ToneMapping</type>
            <name>toneMappingAlgorithm</name>
            <anchorfile>kuesa-tonemappingandgammacorrectioneffect.html</anchorfile>
            <anchor>toneMappingAlgorithm</anchor>
            <arglist>() const const</arglist>
        </member>
        <member kind="function" protection="public" virtualness="non" static="no">
            <type>void</type>
            <name>setExposure</name>
            <anchorfile>kuesa-tonemappingandgammacorrectioneffect.html</anchorfile>
            <anchor>exposure-prop</anchor>
            <arglist>(float exposure)</arglist>
        </member>
        <member kind="function" protection="public" virtualness="non" static="no">
            <type>void</type>
            <name>setGamma</name>
            <anchorfile>kuesa-tonemappingandgammacorrectioneffect.html</anchorfile>
            <anchor>gamma-prop</anchor>
            <arglist>(float gamma)</arglist>
        </member>
        <member kind="function" protection="public" virtualness="non" static="no">
            <type>void</type>
            <name>setToneMappingAlgorithm</name>
            <anchorfile>kuesa-tonemappingandgammacorrectioneffect.html</anchorfile>
            <anchor>setToneMappingAlgorithm</anchor>
            <arglist>(Kuesa::ToneMappingAndGammaCorrectionEffect::ToneMapping algorithm)</arglist>
        </member>
        <member kind="function" protection="public" virtualness="non" static="no">
            <type>void</type>
            <name>exposureChanged</name>
            <anchorfile>kuesa-tonemappingandgammacorrectioneffect.html</anchorfile>
            <anchor>exposure-prop</anchor>
            <arglist>(float exposure)</arglist>
        </member>
        <member kind="function" protection="public" virtualness="non" static="no">
            <type>void</type>
            <name>gammaChanged</name>
            <anchorfile>kuesa-tonemappingandgammacorrectioneffect.html</anchorfile>
            <anchor>gamma-prop</anchor>
            <arglist>(float gamma)</arglist>
        </member>
        <member kind="function" protection="public" virtualness="non" static="no">
            <type>void</type>
            <name>toneMappingAlgorithmChanged</name>
            <anchorfile>kuesa-tonemappingandgammacorrectioneffect.html</anchorfile>
            <anchor>toneMappingAlgorithm-prop</anchor>
            <arglist>(Kuesa::ToneMappingAndGammaCorrectionEffect::ToneMapping toneMappingAlgorithm)</arglist>
        </member>
    </compound>
    <compound kind="class">
        <name>Kuesa::TransformCollection</name>
        <filename>kuesa-transformcollection.html</filename>
        <base>AbstractAssetCollection</base>
    </compound>
    <compound kind="class">
        <name>Kuesa::View</name>
        <filename>kuesa-view.html</filename>
        <member kind="property" type="QRectF">
            <name>viewportRect</name>
            <anchorfile>kuesa-view.html</anchorfile>
            <anchor>viewportRect-prop</anchor>
            <arglist></arglist>
        </member>
        <member kind="property" type="Qt3DCore::QEntity*">
            <name>camera</name>
            <anchorfile>kuesa-view.html</anchorfile>
            <anchor>camera-prop</anchor>
            <arglist></arglist>
        </member>
        <member kind="property" type="bool">
            <name>frustumCulling</name>
            <anchorfile>kuesa-view.html</anchorfile>
            <anchor>frustumCulling-prop</anchor>
            <arglist></arglist>
        </member>
        <member kind="property" type="bool">
            <name>skinning</name>
            <anchorfile>kuesa-view.html</anchorfile>
            <anchor>skinning-prop</anchor>
            <arglist></arglist>
        </member>
        <member kind="property" type="bool">
            <name>backToFrontSorting</name>
            <anchorfile>kuesa-view.html</anchorfile>
            <anchor>backToFrontSorting-prop</anchor>
            <arglist></arglist>
        </member>
        <member kind="property" type="bool">
            <name>zFilling</name>
            <anchorfile>kuesa-view.html</anchorfile>
            <anchor>zFilling-prop</anchor>
            <arglist></arglist>
        </member>
        <member kind="property" type="bool">
            <name>particlesEnabled</name>
            <anchorfile>kuesa-view.html</anchorfile>
            <anchor>particlesEnabled-prop</anchor>
            <arglist></arglist>
        </member>
        <member kind="property" type="Qt3DRender::QAbstractTexture*">
            <name>reflectionTexture</name>
            <anchorfile>kuesa-view.html</anchorfile>
            <anchor>reflectionTexture-prop</anchor>
            <arglist></arglist>
        </member>
        <member kind="property" type="QSize">
            <name>reflectionTextureSize</name>
            <anchorfile>kuesa-view.html</anchorfile>
            <anchor>reflectionTextureSize-prop</anchor>
            <arglist></arglist>
        </member>
        <member kind="property" type="ToneMappingAndGammaCorrectionEffect::ToneMapping">
            <name>toneMappingAlgorithm</name>
            <anchorfile>kuesa-view.html</anchorfile>
            <anchor>toneMappingAlgorithm-prop</anchor>
            <arglist></arglist>
        </member>
        <member kind="property" type="bool">
            <name>usesStencilMask</name>
            <anchorfile>kuesa-view.html</anchorfile>
            <anchor>usesStencilMask-prop</anchor>
            <arglist></arglist>
        </member>
        <member kind="property" type="float">
            <name>exposure</name>
            <anchorfile>kuesa-view.html</anchorfile>
            <anchor>exposure-prop</anchor>
            <arglist></arglist>
        </member>
        <member kind="property" type="float">
            <name>gamma</name>
            <anchorfile>kuesa-view.html</anchorfile>
            <anchor>gamma-prop</anchor>
            <arglist></arglist>
        </member>
        <member kind="property" type="QColor">
            <name>clearColor</name>
            <anchorfile>kuesa-view.html</anchorfile>
            <anchor>clearColor-prop</anchor>
            <arglist></arglist>
        </member>
        <member kind="function" protection="public" virtualness="non" static="no">
            <type>QRectF</type>
            <name>viewportRect</name>
            <anchorfile>kuesa-view.html</anchorfile>
            <anchor>viewportRect-prop</anchor>
            <arglist>() const const</arglist>
        </member>
        <member kind="function" protection="public" virtualness="non" static="no">
            <type>Qt3DCore::QEntity *</type>
            <name>camera</name>
            <anchorfile>kuesa-view.html</anchorfile>
            <anchor>camera-prop</anchor>
            <arglist>() const const</arglist>
        </member>
        <member kind="function" protection="public" virtualness="non" static="no">
            <type>bool</type>
            <name>frustumCulling</name>
            <anchorfile>kuesa-view.html</anchorfile>
            <anchor>frustumCulling-prop</anchor>
            <arglist>() const const</arglist>
        </member>
        <member kind="function" protection="public" virtualness="non" static="no">
            <type>bool</type>
            <name>skinning</name>
            <anchorfile>kuesa-view.html</anchorfile>
            <anchor>skinning-prop</anchor>
            <arglist>() const const</arglist>
        </member>
        <member kind="function" protection="public" virtualness="non" static="no">
            <type>bool</type>
            <name>backToFrontSorting</name>
            <anchorfile>kuesa-view.html</anchorfile>
            <anchor>backToFrontSorting-prop</anchor>
            <arglist>() const const</arglist>
        </member>
        <member kind="function" protection="public" virtualness="non" static="no">
            <type>bool</type>
            <name>zFilling</name>
            <anchorfile>kuesa-view.html</anchorfile>
            <anchor>zFilling-prop</anchor>
            <arglist>() const const</arglist>
        </member>
        <member kind="function" protection="public" virtualness="non" static="no">
            <type>bool</type>
            <name>particlesEnabled</name>
            <anchorfile>kuesa-view.html</anchorfile>
            <anchor>particlesEnabled-prop</anchor>
            <arglist>() const const</arglist>
        </member>
        <member kind="function" protection="public" virtualness="non" static="no">
            <type>Qt3DRender::QAbstractTexture *</type>
            <name>reflectionTexture</name>
            <anchorfile>kuesa-view.html</anchorfile>
            <anchor>reflectionTexture-prop</anchor>
            <arglist>() const const</arglist>
        </member>
        <member kind="function" protection="public" virtualness="non" static="no">
            <type>QSize</type>
            <name>reflectionTextureSize</name>
            <anchorfile>kuesa-view.html</anchorfile>
            <anchor>reflectionTextureSize-prop</anchor>
            <arglist>() const const</arglist>
        </member>
        <member kind="function" protection="public" virtualness="non" static="no">
            <type>QColor</type>
            <name>clearColor</name>
            <anchorfile>kuesa-view.html</anchorfile>
            <anchor>clearColor</anchor>
            <arglist>() const const</arglist>
        </member>
        <member kind="function" protection="public" virtualness="non" static="no">
            <type>float</type>
            <name>exposure</name>
            <anchorfile>kuesa-view.html</anchorfile>
            <anchor>exposure</anchor>
            <arglist>() const const</arglist>
        </member>
        <member kind="function" protection="public" virtualness="non" static="no">
            <type>float</type>
            <name>gamma</name>
            <anchorfile>kuesa-view.html</anchorfile>
            <anchor>gamma</anchor>
            <arglist>() const const</arglist>
        </member>
        <member kind="function" protection="public" virtualness="non" static="no">
            <type>ToneMappingAndGammaCorrectionEffect::ToneMapping</type>
            <name>toneMappingAlgorithm</name>
            <anchorfile>kuesa-view.html</anchorfile>
            <anchor>toneMappingAlgorithm</anchor>
            <arglist>() const const</arglist>
        </member>
        <member kind="function" protection="public" virtualness="non" static="no">
            <type>bool</type>
            <name>usesStencilMask</name>
            <anchorfile>kuesa-view.html</anchorfile>
            <anchor>usesStencilMask-prop</anchor>
            <arglist>() const const</arglist>
        </member>
        <member kind="function" protection="public" virtualness="non" static="no">
            <type>const std::vector&lt;Qt3DRender::QLayer *&gt; &amp;</type>
            <name>layers</name>
            <anchorfile>kuesa-view.html</anchorfile>
            <anchor>layers</anchor>
            <arglist>() const const</arglist>
        </member>
        <member kind="function" protection="public" virtualness="non" static="no">
            <type>void</type>
            <name>setViewportRect</name>
            <anchorfile>kuesa-view.html</anchorfile>
            <anchor>viewportRect-prop</anchor>
            <arglist>(const QRectF &amp;viewportRect)</arglist>
        </member>
        <member kind="function" protection="public" virtualness="non" static="no">
            <type>void</type>
            <name>setCamera</name>
            <anchorfile>kuesa-view.html</anchorfile>
            <anchor>camera-prop</anchor>
            <arglist>(Qt3DCore::QEntity *camera)</arglist>
        </member>
        <member kind="function" protection="public" virtualness="non" static="no">
            <type>void</type>
            <name>setFrustumCulling</name>
            <anchorfile>kuesa-view.html</anchorfile>
            <anchor>frustumCulling-prop</anchor>
            <arglist>(bool frustumCulling)</arglist>
        </member>
        <member kind="function" protection="public" virtualness="non" static="no">
            <type>void</type>
            <name>setSkinning</name>
            <anchorfile>kuesa-view.html</anchorfile>
            <anchor>skinning-prop</anchor>
            <arglist>(bool frustumCulling)</arglist>
        </member>
        <member kind="function" protection="public" virtualness="non" static="no">
            <type>void</type>
            <name>setBackToFrontSorting</name>
            <anchorfile>kuesa-view.html</anchorfile>
            <anchor>backToFrontSorting-prop</anchor>
            <arglist>(bool backToFrontSorting)</arglist>
        </member>
        <member kind="function" protection="public" virtualness="non" static="no">
            <type>void</type>
            <name>setZFilling</name>
            <anchorfile>kuesa-view.html</anchorfile>
            <anchor>zFilling-prop</anchor>
            <arglist>(bool zfilling)</arglist>
        </member>
        <member kind="function" protection="public" virtualness="non" static="no">
            <type>void</type>
            <name>setParticlesEnabled</name>
            <anchorfile>kuesa-view.html</anchorfile>
            <anchor>particlesEnabled-prop</anchor>
            <arglist>(bool enabled)</arglist>
        </member>
        <member kind="function" protection="public" virtualness="non" static="no">
            <type>void</type>
            <name>setReflectionTextureSize</name>
            <anchorfile>kuesa-view.html</anchorfile>
            <anchor>reflectionTextureSize-prop</anchor>
            <arglist>(const QSize &amp;reflectionTextureSize)</arglist>
        </member>
        <member kind="function" protection="public" virtualness="non" static="no">
            <type>void</type>
            <name>setClearColor</name>
            <anchorfile>kuesa-view.html</anchorfile>
            <anchor>setClearColor</anchor>
            <arglist>(const QColor &amp;clearColor)</arglist>
        </member>
        <member kind="function" protection="public" virtualness="non" static="no">
            <type>void</type>
            <name>setGamma</name>
            <anchorfile>kuesa-view.html</anchorfile>
            <anchor>setGamma</anchor>
            <arglist>(float gamma)</arglist>
        </member>
        <member kind="function" protection="public" virtualness="non" static="no">
            <type>void</type>
            <name>setExposure</name>
            <anchorfile>kuesa-view.html</anchorfile>
            <anchor>setExposure</anchor>
            <arglist>(float exposure)</arglist>
        </member>
        <member kind="function" protection="public" virtualness="non" static="no">
            <type>void</type>
            <name>setToneMappingAlgorithm</name>
            <anchorfile>kuesa-view.html</anchorfile>
            <anchor>setToneMappingAlgorithm</anchor>
            <arglist>(ToneMappingAndGammaCorrectionEffect::ToneMapping toneMappingAlgorithm)</arglist>
        </member>
        <member kind="function" protection="public" virtualness="non" static="no">
            <type>void</type>
            <name>setUsesStencilMask</name>
            <anchorfile>kuesa-view.html</anchorfile>
            <anchor>setUsesStencilMask</anchor>
            <arglist>(bool usesStencilMask)</arglist>
        </member>
        <member kind="function" protection="public" virtualness="non" static="no">
            <type>void</type>
            <name>addPostProcessingEffect</name>
            <anchorfile>kuesa-view.html</anchorfile>
            <anchor>addPostProcessingEffect</anchor>
            <arglist>(Kuesa::AbstractPostProcessingEffect *effect)</arglist>
        </member>
        <member kind="function" protection="public" virtualness="non" static="no">
            <type>void</type>
            <name>removePostProcessingEffect</name>
            <anchorfile>kuesa-view.html</anchorfile>
            <anchor>removePostProcessingEffect</anchor>
            <arglist>(Kuesa::AbstractPostProcessingEffect *effect)</arglist>
        </member>
        <member kind="function" protection="public" virtualness="non" static="no">
            <type>void</type>
            <name>dump</name>
            <anchorfile>kuesa-view.html</anchorfile>
            <anchor>dump</anchor>
            <arglist>()</arglist>
        </member>
        <member kind="function" protection="public" virtualness="non" static="no">
            <type>void</type>
            <name>viewportRectChanged</name>
            <anchorfile>kuesa-view.html</anchorfile>
            <anchor>viewportRect-prop</anchor>
            <arglist>(const QRectF &amp;viewportRect)</arglist>
        </member>
        <member kind="function" protection="public" virtualness="non" static="no">
            <type>void</type>
            <name>cameraChanged</name>
            <anchorfile>kuesa-view.html</anchorfile>
            <anchor>camera-prop</anchor>
            <arglist>(Qt3DCore::QEntity *camera)</arglist>
        </member>
        <member kind="function" protection="public" virtualness="non" static="no">
            <type>void</type>
            <name>frustumCullingChanged</name>
            <anchorfile>kuesa-view.html</anchorfile>
            <anchor>frustumCulling-prop</anchor>
            <arglist>(bool frustumCulling)</arglist>
        </member>
        <member kind="function" protection="public" virtualness="non" static="no">
            <type>void</type>
            <name>skinningChanged</name>
            <anchorfile>kuesa-view.html</anchorfile>
            <anchor>skinning-prop</anchor>
            <arglist>(bool skinning)</arglist>
        </member>
        <member kind="function" protection="public" virtualness="non" static="no">
            <type>void</type>
            <name>backToFrontSortingChanged</name>
            <anchorfile>kuesa-view.html</anchorfile>
            <anchor>backToFrontSorting-prop</anchor>
            <arglist>(bool backToFrontSorting)</arglist>
        </member>
        <member kind="function" protection="public" virtualness="non" static="no">
            <type>void</type>
            <name>zFillingChanged</name>
            <anchorfile>kuesa-view.html</anchorfile>
            <anchor>zFilling-prop</anchor>
            <arglist>(bool zFilling)</arglist>
        </member>
        <member kind="function" protection="public" virtualness="non" static="no">
            <type>void</type>
            <name>particlesEnabledChanged</name>
            <anchorfile>kuesa-view.html</anchorfile>
            <anchor>particlesEnabled-prop</anchor>
            <arglist>(bool enabled)</arglist>
        </member>
        <member kind="function" protection="public" virtualness="non" static="no">
            <type>void</type>
            <name>reflectionTextureChanged</name>
            <anchorfile>kuesa-view.html</anchorfile>
            <anchor>reflectionTexture-prop</anchor>
            <arglist>(Qt3DRender::QAbstractTexture *reflectionTexture)</arglist>
        </member>
        <member kind="function" protection="public" virtualness="non" static="no">
            <type>void</type>
            <name>reflectionTextureSizeChanged</name>
            <anchorfile>kuesa-view.html</anchorfile>
            <anchor>reflectionTextureSize-prop</anchor>
            <arglist>(const QSize &amp;reflectionTextureSize)</arglist>
        </member>
        <member kind="function" protection="public" virtualness="non" static="no">
            <type>void</type>
            <name>clearColorChanged</name>
            <anchorfile>kuesa-view.html</anchorfile>
            <anchor>clearColor-prop</anchor>
            <arglist>(const QColor &amp;clearColor)</arglist>
        </member>
        <member kind="function" protection="public" virtualness="non" static="no">
            <type>void</type>
            <name>gammaChanged</name>
            <anchorfile>kuesa-view.html</anchorfile>
            <anchor>gamma-prop</anchor>
            <arglist>(float gamma)</arglist>
        </member>
        <member kind="function" protection="public" virtualness="non" static="no">
            <type>void</type>
            <name>exposureChanged</name>
            <anchorfile>kuesa-view.html</anchorfile>
            <anchor>exposure-prop</anchor>
            <arglist>(float exposure)</arglist>
        </member>
        <member kind="function" protection="public" virtualness="non" static="no">
            <type>void</type>
            <name>toneMappingAlgorithmChanged</name>
            <anchorfile>kuesa-view.html</anchorfile>
            <anchor>toneMappingAlgorithm-prop</anchor>
            <arglist>(ToneMappingAndGammaCorrectionEffect::ToneMapping toneMappingAlgorithm)</arglist>
        </member>
        <member kind="function" protection="public" virtualness="non" static="no">
            <type>void</type>
            <name>usesStencilMaskChanged</name>
            <anchorfile>kuesa-view.html</anchorfile>
            <anchor>usesStencilMask-prop</anchor>
            <arglist>(bool usesStencilMask)</arglist>
        </member>
        <member kind="typedef" type="Kuesa::View::Feature">
            <name>Features</name>
            <anchorfile>kuesa-view.html</anchorfile>
            <anchor>Feature-enum</anchor>
            <arglist></arglist>
        </member>
    </compound>
    <compound kind="class">
        <name>Kuesa::KTXTexture</name>
        <filename>kuesa-ktxtexture.html</filename>
        <member kind="function" protection="public" virtualness="non" static="no">
            <type>QUrl</type>
            <name>source</name>
            <anchorfile>kuesa-ktxtexture.html</anchorfile>
            <anchor>source-prop</anchor>
            <arglist>() const const</arglist>
        </member>
        <member kind="function" protection="public" virtualness="non" static="no">
            <type>void</type>
            <name>setSource</name>
            <anchorfile>kuesa-ktxtexture.html</anchorfile>
            <anchor>source-prop</anchor>
            <arglist>(const QUrl &amp;source)</arglist>
        </member>
        <member kind="function" protection="public" virtualness="non" static="no">
            <type>void</type>
            <name>sourceChanged</name>
            <anchorfile>kuesa-ktxtexture.html</anchorfile>
            <anchor>source-prop</anchor>
            <arglist>(const QUrl &amp;source)</arglist>
        </member>
    </compound>
    <compound kind="class">
        <name>Kuesa::MeshInstantiator</name>
        <filename>kuesa-meshinstantiator.html</filename>
        <base>KuesaNode</base>
        <member kind="property" type="QString">
            <name>entityName</name>
            <anchorfile>kuesa-meshinstantiator.html</anchorfile>
            <anchor>entityName-prop</anchor>
            <arglist></arglist>
        </member>
        <member kind="property" type="int">
            <name>count</name>
            <anchorfile>kuesa-meshinstantiator.html</anchorfile>
            <anchor>count-prop</anchor>
            <arglist></arglist>
        </member>
        <member kind="function" protection="public" virtualness="non" static="no">
            <type>int</type>
            <name>count</name>
            <anchorfile>kuesa-meshinstantiator.html</anchorfile>
            <anchor>count-prop</anchor>
            <arglist>() const const</arglist>
        </member>
        <member kind="function" protection="public" virtualness="non" static="no">
            <type>void</type>
            <name>setEntityName</name>
            <anchorfile>kuesa-meshinstantiator.html</anchorfile>
            <anchor>entityName-prop</anchor>
            <arglist>(const QString &amp;entityName)</arglist>
        </member>
        <member kind="function" protection="public" virtualness="non" static="no">
            <type>QString</type>
            <name>entityName</name>
            <anchorfile>kuesa-meshinstantiator.html</anchorfile>
            <anchor>entityName-prop</anchor>
            <arglist>() const const</arglist>
        </member>
        <member kind="function" protection="public" virtualness="non" static="no">
            <type>void</type>
            <name>setTransformationMatrices</name>
            <anchorfile>kuesa-meshinstantiator.html</anchorfile>
            <anchor>setTransformationMatrices</anchor>
            <arglist>(const std::vector&lt;QMatrix4x4&gt; &amp;transformationMatrices)</arglist>
        </member>
        <member kind="function" protection="public" virtualness="non" static="no">
            <type>const std::vector&lt;QMatrix4x4&gt; &amp;</type>
            <name>transformationMatrices</name>
            <anchorfile>kuesa-meshinstantiator.html</anchorfile>
            <anchor>transformationMatrices</anchor>
            <arglist>() const const</arglist>
        </member>
        <member kind="function" protection="public" virtualness="non" static="no">
            <type>void</type>
            <name>countChanged</name>
            <anchorfile>kuesa-meshinstantiator.html</anchorfile>
            <anchor>count-prop</anchor>
            <arglist>(int count)</arglist>
        </member>
        <member kind="function" protection="public" virtualness="non" static="no">
            <type>void</type>
            <name>entityNameChanged</name>
            <anchorfile>kuesa-meshinstantiator.html</anchorfile>
            <anchor>entityName-prop</anchor>
            <arglist>(const QString &amp;entityName)</arglist>
        </member>
    </compound>
    <compound kind="class">
        <name>Kuesa::MetallicRoughnessEffect</name>
        <filename>kuesa-metallicroughnesseffect.html</filename>
        <base>GLTF2MaterialEffect</base>
        <member kind="property" type="bool">
            <name>baseColorMapEnabled</name>
            <anchorfile>kuesa-metallicroughnesseffect.html</anchorfile>
            <anchor>baseColorMapEnabled-prop</anchor>
            <arglist></arglist>
        </member>
        <member kind="property" type="bool">
            <name>metalRoughMapEnabled</name>
            <anchorfile>kuesa-metallicroughnesseffect.html</anchorfile>
            <anchor>metalRoughMapEnabled-prop</anchor>
            <arglist></arglist>
        </member>
        <member kind="property" type="bool">
            <name>normalMapEnabled</name>
            <anchorfile>kuesa-metallicroughnesseffect.html</anchorfile>
            <anchor>normalMapEnabled-prop</anchor>
            <arglist></arglist>
        </member>
        <member kind="property" type="bool">
            <name>ambientOcclusionMapEnabled</name>
            <anchorfile>kuesa-metallicroughnesseffect.html</anchorfile>
            <anchor>ambientOcclusionMapEnabled-prop</anchor>
            <arglist></arglist>
        </member>
        <member kind="property" type="bool">
            <name>emissiveMapEnabled</name>
            <anchorfile>kuesa-metallicroughnesseffect.html</anchorfile>
            <anchor>emissiveMapEnabled-prop</anchor>
            <arglist></arglist>
        </member>
        <member kind="property" type="Qt3DRender::QAbstractTexture*">
            <name>brdfLUT</name>
            <anchorfile>kuesa-metallicroughnesseffect.html</anchorfile>
            <anchor>brdfLUT-prop</anchor>
            <arglist></arglist>
        </member>
        <member kind="function" protection="public" virtualness="non" static="no">
            <type>bool</type>
            <name>isBaseColorMapEnabled</name>
            <anchorfile>kuesa-metallicroughnesseffect.html</anchorfile>
            <anchor>baseColorMapEnabled-prop</anchor>
            <arglist>() const const</arglist>
        </member>
        <member kind="function" protection="public" virtualness="non" static="no">
            <type>bool</type>
            <name>isMetalRoughMapEnabled</name>
            <anchorfile>kuesa-metallicroughnesseffect.html</anchorfile>
            <anchor>metalRoughMapEnabled-prop</anchor>
            <arglist>() const const</arglist>
        </member>
        <member kind="function" protection="public" virtualness="non" static="no">
            <type>bool</type>
            <name>isNormalMapEnabled</name>
            <anchorfile>kuesa-metallicroughnesseffect.html</anchorfile>
            <anchor>normalMapEnabled-prop</anchor>
            <arglist>() const const</arglist>
        </member>
        <member kind="function" protection="public" virtualness="non" static="no">
            <type>bool</type>
            <name>isAmbientOcclusionMapEnabled</name>
            <anchorfile>kuesa-metallicroughnesseffect.html</anchorfile>
            <anchor>ambientOcclusionMapEnabled-prop</anchor>
            <arglist>() const const</arglist>
        </member>
        <member kind="function" protection="public" virtualness="non" static="no">
            <type>bool</type>
            <name>isEmissiveMapEnabled</name>
            <anchorfile>kuesa-metallicroughnesseffect.html</anchorfile>
            <anchor>emissiveMapEnabled-prop</anchor>
            <arglist>() const const</arglist>
        </member>
        <member kind="function" protection="public" virtualness="non" static="no">
            <type>Qt3DRender::QAbstractTexture *</type>
            <name>brdfLUT</name>
            <anchorfile>kuesa-metallicroughnesseffect.html</anchorfile>
            <anchor>brdfLUT-prop</anchor>
            <arglist>() const const</arglist>
        </member>
        <member kind="function" protection="public" virtualness="non" static="no">
            <type>void</type>
            <name>setBaseColorMapEnabled</name>
            <anchorfile>kuesa-metallicroughnesseffect.html</anchorfile>
            <anchor>baseColorMapEnabled-prop</anchor>
            <arglist>(bool enabled)</arglist>
        </member>
        <member kind="function" protection="public" virtualness="non" static="no">
            <type>void</type>
            <name>setMetalRoughMapEnabled</name>
            <anchorfile>kuesa-metallicroughnesseffect.html</anchorfile>
            <anchor>metalRoughMapEnabled-prop</anchor>
            <arglist>(bool enabled)</arglist>
        </member>
        <member kind="function" protection="public" virtualness="non" static="no">
            <type>void</type>
            <name>setNormalMapEnabled</name>
            <anchorfile>kuesa-metallicroughnesseffect.html</anchorfile>
            <anchor>normalMapEnabled-prop</anchor>
            <arglist>(bool enabled)</arglist>
        </member>
        <member kind="function" protection="public" virtualness="non" static="no">
            <type>void</type>
            <name>setAmbientOcclusionMapEnabled</name>
            <anchorfile>kuesa-metallicroughnesseffect.html</anchorfile>
            <anchor>ambientOcclusionMapEnabled-prop</anchor>
            <arglist>(bool enabled)</arglist>
        </member>
        <member kind="function" protection="public" virtualness="non" static="no">
            <type>void</type>
            <name>setEmissiveMapEnabled</name>
            <anchorfile>kuesa-metallicroughnesseffect.html</anchorfile>
            <anchor>emissiveMapEnabled-prop</anchor>
            <arglist>(bool enabled)</arglist>
        </member>
        <member kind="function" protection="public" virtualness="non" static="no">
            <type>void</type>
            <name>setBrdfLUT</name>
            <anchorfile>kuesa-metallicroughnesseffect.html</anchorfile>
            <anchor>brdfLUT-prop</anchor>
            <arglist>(Qt3DRender::QAbstractTexture *brdfLUT)</arglist>
        </member>
        <member kind="function" protection="public" virtualness="non" static="no">
            <type>void</type>
            <name>baseColorMapEnabledChanged</name>
            <anchorfile>kuesa-metallicroughnesseffect.html</anchorfile>
            <anchor>baseColorMapEnabled-prop</anchor>
            <arglist>(bool enabled)</arglist>
        </member>
        <member kind="function" protection="public" virtualness="non" static="no">
            <type>void</type>
            <name>metalRoughMapEnabledChanged</name>
            <anchorfile>kuesa-metallicroughnesseffect.html</anchorfile>
            <anchor>metalRoughMapEnabled-prop</anchor>
            <arglist>(bool enabled)</arglist>
        </member>
        <member kind="function" protection="public" virtualness="non" static="no">
            <type>void</type>
            <name>normalMapEnabledChanged</name>
            <anchorfile>kuesa-metallicroughnesseffect.html</anchorfile>
            <anchor>normalMapEnabled-prop</anchor>
            <arglist>(bool enabled)</arglist>
        </member>
        <member kind="function" protection="public" virtualness="non" static="no">
            <type>void</type>
            <name>ambientOcclusionMapEnabledChanged</name>
            <anchorfile>kuesa-metallicroughnesseffect.html</anchorfile>
            <anchor>ambientOcclusionMapEnabled-prop</anchor>
            <arglist>(bool enabled)</arglist>
        </member>
        <member kind="function" protection="public" virtualness="non" static="no">
            <type>void</type>
            <name>emissiveMapEnabledChanged</name>
            <anchorfile>kuesa-metallicroughnesseffect.html</anchorfile>
            <anchor>emissiveMapEnabled-prop</anchor>
            <arglist>(bool enabled)</arglist>
        </member>
        <member kind="function" protection="public" virtualness="non" static="no">
            <type>void</type>
            <name>brdfLUTChanged</name>
            <anchorfile>kuesa-metallicroughnesseffect.html</anchorfile>
            <anchor>brdfLUT-prop</anchor>
            <arglist>(Qt3DRender::QAbstractTexture *brdfLUT)</arglist>
        </member>
    </compound>
    <compound kind="class">
        <name>Kuesa::MetallicRoughnessMaterial</name>
        <filename>kuesa-metallicroughnessmaterial.html</filename>
        <base>GLTF2Material</base>
        <member kind="property" type="MetallicRoughnessProperties*">
            <name>materialProperties</name>
            <anchorfile>kuesa-metallicroughnessmaterial.html</anchorfile>
            <anchor>materialProperties-prop</anchor>
            <arglist></arglist>
        </member>
        <member kind="function" protection="public" virtualness="non" static="no">
            <type>Kuesa::MetallicRoughnessProperties *</type>
            <name>materialProperties</name>
            <anchorfile>kuesa-metallicroughnessmaterial.html</anchorfile>
            <anchor>materialProperties-prop</anchor>
            <arglist>() const const</arglist>
        </member>
        <member kind="function" protection="public" virtualness="non" static="no">
            <type>void</type>
            <name>setMaterialProperties</name>
            <anchorfile>kuesa-metallicroughnessmaterial.html</anchorfile>
            <anchor>materialProperties-prop</anchor>
            <arglist>(Kuesa::MetallicRoughnessProperties *materialProperties)</arglist>
        </member>
        <member kind="function" protection="public" virtualness="non" static="no">
            <type>void</type>
            <name>materialPropertiesChanged</name>
            <anchorfile>kuesa-metallicroughnessmaterial.html</anchorfile>
            <anchor>materialProperties-prop</anchor>
            <arglist>(Kuesa::MetallicRoughnessProperties *materialProperties)</arglist>
        </member>
    </compound>
    <compound kind="class">
        <name>Kuesa::MetallicRoughnessProperties</name>
        <filename>kuesa-metallicroughnessproperties.html</filename>
        <base>GLTF2MaterialProperties</base>
        <member kind="property" type="bool">
            <name>metallicRoughnessUsesTexCoord1</name>
            <anchorfile>kuesa-metallicroughnessproperties.html</anchorfile>
            <anchor>metallicRoughnessUsesTexCoord1-prop</anchor>
            <arglist></arglist>
        </member>
        <member kind="property" type="bool">
            <name>normalUsesTexCoord1</name>
            <anchorfile>kuesa-metallicroughnessproperties.html</anchorfile>
            <anchor>normalUsesTexCoord1-prop</anchor>
            <arglist></arglist>
        </member>
        <member kind="property" type="bool">
            <name>aoUsesTexCoord1</name>
            <anchorfile>kuesa-metallicroughnessproperties.html</anchorfile>
            <anchor>aoUsesTexCoord1-prop</anchor>
            <arglist></arglist>
        </member>
        <member kind="property" type="bool">
            <name>emissiveUsesTexCoord1</name>
            <anchorfile>kuesa-metallicroughnessproperties.html</anchorfile>
            <anchor>emissiveUsesTexCoord1-prop</anchor>
            <arglist></arglist>
        </member>
        <member kind="property" type="float">
            <name>metallicFactor</name>
            <anchorfile>kuesa-metallicroughnessproperties.html</anchorfile>
            <anchor>metallicFactor-prop</anchor>
            <arglist></arglist>
        </member>
        <member kind="property" type="float">
            <name>roughnessFactor</name>
            <anchorfile>kuesa-metallicroughnessproperties.html</anchorfile>
            <anchor>roughnessFactor-prop</anchor>
            <arglist></arglist>
        </member>
        <member kind="property" type="Qt3DRender::QAbstractTexture*">
            <name>metalRoughMap</name>
            <anchorfile>kuesa-metallicroughnessproperties.html</anchorfile>
            <anchor>metalRoughMap-prop</anchor>
            <arglist></arglist>
        </member>
        <member kind="property" type="float">
            <name>normalScale</name>
            <anchorfile>kuesa-metallicroughnessproperties.html</anchorfile>
            <anchor>normalScale-prop</anchor>
            <arglist></arglist>
        </member>
        <member kind="property" type="Qt3DRender::QAbstractTexture*">
            <name>normalMap</name>
            <anchorfile>kuesa-metallicroughnessproperties.html</anchorfile>
            <anchor>normalMap-prop</anchor>
            <arglist></arglist>
        </member>
        <member kind="property" type="Qt3DRender::QAbstractTexture*">
            <name>ambientOcclusionMap</name>
            <anchorfile>kuesa-metallicroughnessproperties.html</anchorfile>
            <anchor>ambientOcclusionMap-prop</anchor>
            <arglist></arglist>
        </member>
        <member kind="property" type="QColor">
            <name>emissiveFactor</name>
            <anchorfile>kuesa-metallicroughnessproperties.html</anchorfile>
            <anchor>emissiveFactor-prop</anchor>
            <arglist></arglist>
        </member>
        <member kind="property" type="Qt3DRender::QAbstractTexture*">
            <name>emissiveMap</name>
            <anchorfile>kuesa-metallicroughnessproperties.html</anchorfile>
            <anchor>emissiveMap-prop</anchor>
            <arglist></arglist>
        </member>
        <member kind="function" protection="public" virtualness="non" static="no">
            <type>bool</type>
            <name>isMetallicRoughnessUsingTexCoord1</name>
            <anchorfile>kuesa-metallicroughnessproperties.html</anchorfile>
            <anchor>metallicRoughnessUsesTexCoord1-prop</anchor>
            <arglist>() const const</arglist>
        </member>
        <member kind="function" protection="public" virtualness="non" static="no">
            <type>bool</type>
            <name>isNormalUsingTexCoord1</name>
            <anchorfile>kuesa-metallicroughnessproperties.html</anchorfile>
            <anchor>normalUsesTexCoord1-prop</anchor>
            <arglist>() const const</arglist>
        </member>
        <member kind="function" protection="public" virtualness="non" static="no">
            <type>bool</type>
            <name>isAOUsingTexCoord1</name>
            <anchorfile>kuesa-metallicroughnessproperties.html</anchorfile>
            <anchor>aoUsesTexCoord1-prop</anchor>
            <arglist>() const const</arglist>
        </member>
        <member kind="function" protection="public" virtualness="non" static="no">
            <type>bool</type>
            <name>isEmissiveUsingTexCoord1</name>
            <anchorfile>kuesa-metallicroughnessproperties.html</anchorfile>
            <anchor>emissiveUsesTexCoord1-prop</anchor>
            <arglist>() const const</arglist>
        </member>
        <member kind="function" protection="public" virtualness="non" static="no">
            <type>Kuesa::TextureTransform *</type>
            <name>baseColorMapTextureTransform</name>
            <anchorfile>kuesa-metallicroughnessproperties.html</anchorfile>
            <anchor>baseColorMapTextureTransform-prop</anchor>
            <arglist>() const const</arglist>
        </member>
        <member kind="function" protection="public" virtualness="non" static="no">
            <type>float</type>
            <name>metallicFactor</name>
            <anchorfile>kuesa-metallicroughnessproperties.html</anchorfile>
            <anchor>metallicFactor-prop</anchor>
            <arglist>() const const</arglist>
        </member>
        <member kind="function" protection="public" virtualness="non" static="no">
            <type>float</type>
            <name>roughnessFactor</name>
            <anchorfile>kuesa-metallicroughnessproperties.html</anchorfile>
            <anchor>roughnessFactor-prop</anchor>
            <arglist>() const const</arglist>
        </member>
        <member kind="function" protection="public" virtualness="non" static="no">
            <type>Qt3DRender::QAbstractTexture *</type>
            <name>metalRoughMap</name>
            <anchorfile>kuesa-metallicroughnessproperties.html</anchorfile>
            <anchor>metalRoughMap-prop</anchor>
            <arglist>() const const</arglist>
        </member>
        <member kind="function" protection="public" virtualness="non" static="no">
            <type>Kuesa::TextureTransform *</type>
            <name>metalRoughMapTextureTransform</name>
            <anchorfile>kuesa-metallicroughnessproperties.html</anchorfile>
            <anchor>metalRoughMapTextureTransform-prop</anchor>
            <arglist>() const const</arglist>
        </member>
        <member kind="function" protection="public" virtualness="non" static="no">
            <type>float</type>
            <name>normalScale</name>
            <anchorfile>kuesa-metallicroughnessproperties.html</anchorfile>
            <anchor>normalScale-prop</anchor>
            <arglist>() const const</arglist>
        </member>
        <member kind="function" protection="public" virtualness="non" static="no">
            <type>Qt3DRender::QAbstractTexture *</type>
            <name>normalMap</name>
            <anchorfile>kuesa-metallicroughnessproperties.html</anchorfile>
            <anchor>normalMap-prop</anchor>
            <arglist>() const const</arglist>
        </member>
        <member kind="function" protection="public" virtualness="non" static="no">
            <type>Kuesa::TextureTransform *</type>
            <name>normalMapTextureTransform</name>
            <anchorfile>kuesa-metallicroughnessproperties.html</anchorfile>
            <anchor>normalMapTextureTransform-prop</anchor>
            <arglist>() const const</arglist>
        </member>
        <member kind="function" protection="public" virtualness="non" static="no">
            <type>Qt3DRender::QAbstractTexture *</type>
            <name>ambientOcclusionMap</name>
            <anchorfile>kuesa-metallicroughnessproperties.html</anchorfile>
            <anchor>ambientOcclusionMap-prop</anchor>
            <arglist>() const const</arglist>
        </member>
        <member kind="function" protection="public" virtualness="non" static="no">
            <type>Kuesa::TextureTransform *</type>
            <name>ambientOcclusionMapTextureTransform</name>
            <anchorfile>kuesa-metallicroughnessproperties.html</anchorfile>
            <anchor>ambientOcclusionMapTextureTransform-prop</anchor>
            <arglist>() const const</arglist>
        </member>
        <member kind="function" protection="public" virtualness="non" static="no">
            <type>QColor</type>
            <name>emissiveFactor</name>
            <anchorfile>kuesa-metallicroughnessproperties.html</anchorfile>
            <anchor>emissiveFactor-prop</anchor>
            <arglist>() const const</arglist>
        </member>
        <member kind="function" protection="public" virtualness="non" static="no">
            <type>Qt3DRender::QAbstractTexture *</type>
            <name>emissiveMap</name>
            <anchorfile>kuesa-metallicroughnessproperties.html</anchorfile>
            <anchor>emissiveMap-prop</anchor>
            <arglist>() const const</arglist>
        </member>
        <member kind="function" protection="public" virtualness="non" static="no">
            <type>Kuesa::TextureTransform *</type>
            <name>emissiveMapTextureTransform</name>
            <anchorfile>kuesa-metallicroughnessproperties.html</anchorfile>
            <anchor>emissiveMapTextureTransform-prop</anchor>
            <arglist>() const const</arglist>
        </member>
        <member kind="function" protection="public" virtualness="non" static="no">
            <type>void</type>
            <name>setMetallicRoughnessUsesTexCoord1</name>
            <anchorfile>kuesa-metallicroughnessproperties.html</anchorfile>
            <anchor>metallicRoughnessUsesTexCoord1-prop</anchor>
            <arglist>(bool metallicRoughnessUsesTexCoord1)</arglist>
        </member>
        <member kind="function" protection="public" virtualness="non" static="no">
            <type>void</type>
            <name>setNormalUsesTexCoord1</name>
            <anchorfile>kuesa-metallicroughnessproperties.html</anchorfile>
            <anchor>normalUsesTexCoord1-prop</anchor>
            <arglist>(bool normalUsesTexCoord1)</arglist>
        </member>
        <member kind="function" protection="public" virtualness="non" static="no">
            <type>void</type>
            <name>setAOUsesTexCoord1</name>
            <anchorfile>kuesa-metallicroughnessproperties.html</anchorfile>
            <anchor>aoUsesTexCoord1-prop</anchor>
            <arglist>(bool aoUsesTexCoord1)</arglist>
        </member>
        <member kind="function" protection="public" virtualness="non" static="no">
            <type>void</type>
            <name>setEmissiveUsesTexCoord1</name>
            <anchorfile>kuesa-metallicroughnessproperties.html</anchorfile>
            <anchor>emissiveUsesTexCoord1-prop</anchor>
            <arglist>(bool emissiveUsesTexCoord1)</arglist>
        </member>
        <member kind="function" protection="public" virtualness="non" static="no">
            <type>void</type>
            <name>setMetallicFactor</name>
            <anchorfile>kuesa-metallicroughnessproperties.html</anchorfile>
            <anchor>metallicFactor-prop</anchor>
            <arglist>(float metallicFactor)</arglist>
        </member>
        <member kind="function" protection="public" virtualness="non" static="no">
            <type>void</type>
            <name>setRoughnessFactor</name>
            <anchorfile>kuesa-metallicroughnessproperties.html</anchorfile>
            <anchor>roughnessFactor-prop</anchor>
            <arglist>(float roughnessFactor)</arglist>
        </member>
        <member kind="function" protection="public" virtualness="non" static="no">
            <type>void</type>
            <name>setMetalRoughMap</name>
            <anchorfile>kuesa-metallicroughnessproperties.html</anchorfile>
            <anchor>metalRoughMap-prop</anchor>
            <arglist>(Qt3DRender::QAbstractTexture *metalRoughMap)</arglist>
        </member>
        <member kind="function" protection="public" virtualness="non" static="no">
            <type>void</type>
            <name>setNormalScale</name>
            <anchorfile>kuesa-metallicroughnessproperties.html</anchorfile>
            <anchor>normalScale-prop</anchor>
            <arglist>(float normalScale)</arglist>
        </member>
        <member kind="function" protection="public" virtualness="non" static="no">
            <type>void</type>
            <name>setNormalMap</name>
            <anchorfile>kuesa-metallicroughnessproperties.html</anchorfile>
            <anchor>normalMap-prop</anchor>
            <arglist>(Qt3DRender::QAbstractTexture *normalMap)</arglist>
        </member>
        <member kind="function" protection="public" virtualness="non" static="no">
            <type>void</type>
            <name>setAmbientOcclusionMap</name>
            <anchorfile>kuesa-metallicroughnessproperties.html</anchorfile>
            <anchor>ambientOcclusionMap-prop</anchor>
            <arglist>(Qt3DRender::QAbstractTexture *ambientOcclusionMap)</arglist>
        </member>
        <member kind="function" protection="public" virtualness="non" static="no">
            <type>void</type>
            <name>setEmissiveFactor</name>
            <anchorfile>kuesa-metallicroughnessproperties.html</anchorfile>
            <anchor>emissiveFactor-prop</anchor>
            <arglist>(const QColor &amp;emissiveFactor)</arglist>
        </member>
        <member kind="function" protection="public" virtualness="non" static="no">
            <type>void</type>
            <name>setEmissiveMap</name>
            <anchorfile>kuesa-metallicroughnessproperties.html</anchorfile>
            <anchor>emissiveMap-prop</anchor>
            <arglist>(Qt3DRender::QAbstractTexture *emissiveMap)</arglist>
        </member>
        <member kind="function" protection="public" virtualness="non" static="no">
            <type>void</type>
            <name>metallicRoughnessUsesTexCoord1Changed</name>
            <anchorfile>kuesa-metallicroughnessproperties.html</anchorfile>
            <anchor>metallicRoughnessUsesTexCoord1-prop</anchor>
            <arglist>(bool )</arglist>
        </member>
        <member kind="function" protection="public" virtualness="non" static="no">
            <type>void</type>
            <name>normalUsesTexCoord1Changed</name>
            <anchorfile>kuesa-metallicroughnessproperties.html</anchorfile>
            <anchor>normalUsesTexCoord1-prop</anchor>
            <arglist>(bool )</arglist>
        </member>
        <member kind="function" protection="public" virtualness="non" static="no">
            <type>void</type>
            <name>aoUsesTexCoord1Changed</name>
            <anchorfile>kuesa-metallicroughnessproperties.html</anchorfile>
            <anchor>aoUsesTexCoord1-prop</anchor>
            <arglist>(bool )</arglist>
        </member>
        <member kind="function" protection="public" virtualness="non" static="no">
            <type>void</type>
            <name>emissiveUsesTexCoord1Changed</name>
            <anchorfile>kuesa-metallicroughnessproperties.html</anchorfile>
            <anchor>emissiveUsesTexCoord1-prop</anchor>
            <arglist>(bool )</arglist>
        </member>
        <member kind="function" protection="public" virtualness="non" static="no">
            <type>void</type>
            <name>metallicFactorChanged</name>
            <anchorfile>kuesa-metallicroughnessproperties.html</anchorfile>
            <anchor>metallicFactor-prop</anchor>
            <arglist>(float metallicFactor)</arglist>
        </member>
        <member kind="function" protection="public" virtualness="non" static="no">
            <type>void</type>
            <name>roughnessFactorChanged</name>
            <anchorfile>kuesa-metallicroughnessproperties.html</anchorfile>
            <anchor>roughnessFactor-prop</anchor>
            <arglist>(float roughnessFactor)</arglist>
        </member>
        <member kind="function" protection="public" virtualness="non" static="no">
            <type>void</type>
            <name>metalRoughMapChanged</name>
            <anchorfile>kuesa-metallicroughnessproperties.html</anchorfile>
            <anchor>metalRoughMap-prop</anchor>
            <arglist>(Qt3DRender::QAbstractTexture *metalRoughMap)</arglist>
        </member>
        <member kind="function" protection="public" virtualness="non" static="no">
            <type>void</type>
            <name>normalScaleChanged</name>
            <anchorfile>kuesa-metallicroughnessproperties.html</anchorfile>
            <anchor>normalScale-prop</anchor>
            <arglist>(float normalScale)</arglist>
        </member>
        <member kind="function" protection="public" virtualness="non" static="no">
            <type>void</type>
            <name>normalMapChanged</name>
            <anchorfile>kuesa-metallicroughnessproperties.html</anchorfile>
            <anchor>normalMap-prop</anchor>
            <arglist>(Qt3DRender::QAbstractTexture *normalMapChanged)</arglist>
        </member>
        <member kind="function" protection="public" virtualness="non" static="no">
            <type>void</type>
            <name>ambientOcclusionMapChanged</name>
            <anchorfile>kuesa-metallicroughnessproperties.html</anchorfile>
            <anchor>ambientOcclusionMap-prop</anchor>
            <arglist>(Qt3DRender::QAbstractTexture *ambientOcclusionMap)</arglist>
        </member>
        <member kind="function" protection="public" virtualness="non" static="no">
            <type>void</type>
            <name>emissiveFactorChanged</name>
            <anchorfile>kuesa-metallicroughnessproperties.html</anchorfile>
            <anchor>emissiveFactor-prop</anchor>
            <arglist>(const QColor &amp;emissiveFactor)</arglist>
        </member>
        <member kind="function" protection="public" virtualness="non" static="no">
            <type>void</type>
            <name>emissiveMapChanged</name>
            <anchorfile>kuesa-metallicroughnessproperties.html</anchorfile>
            <anchor>emissiveMap-prop</anchor>
            <arglist>(Qt3DRender::QAbstractTexture *emissiveMap)</arglist>
        </member>
    </compound>
    <compound kind="class">
        <name>Kuesa::OpacityMask</name>
        <filename>kuesa-opacitymask.html</filename>
        <base>AbstractPostProcessingEffect</base>
        <member kind="property" type="Qt3DRender::QAbstractTexture*">
            <name>mask</name>
            <anchorfile>kuesa-opacitymask.html</anchorfile>
            <anchor>mask-prop</anchor>
            <arglist></arglist>
        </member>
        <member kind="property" type="bool">
            <name>premultipliedAlpha</name>
            <anchorfile>kuesa-opacitymask.html</anchorfile>
            <anchor>premultipliedAlpha-prop</anchor>
            <arglist></arglist>
        </member>
        <member kind="function" protection="public" virtualness="non" static="no">
            <type>void</type>
            <name>setMask</name>
            <anchorfile>kuesa-opacitymask.html</anchorfile>
            <anchor>mask-prop</anchor>
            <arglist>(Qt3DRender::QAbstractTexture *mask)</arglist>
        </member>
        <member kind="function" protection="public" virtualness="non" static="no">
            <type>Qt3DRender::QAbstractTexture *</type>
            <name>mask</name>
            <anchorfile>kuesa-opacitymask.html</anchorfile>
            <anchor>mask-prop</anchor>
            <arglist>() const const</arglist>
        </member>
        <member kind="function" protection="public" virtualness="non" static="no">
            <type>void</type>
            <name>setPremultipliedAlpha</name>
            <anchorfile>kuesa-opacitymask.html</anchorfile>
            <anchor>premultipliedAlpha-prop</anchor>
            <arglist>(bool premultipliedAlpha)</arglist>
        </member>
        <member kind="function" protection="public" virtualness="non" static="no">
            <type>bool</type>
            <name>premultipliedAlpha</name>
            <anchorfile>kuesa-opacitymask.html</anchorfile>
            <anchor>premultipliedAlpha-prop</anchor>
            <arglist>() const const</arglist>
        </member>
        <member kind="function" protection="public" virtualness="non" static="no">
            <type>void</type>
            <name>maskChanged</name>
            <anchorfile>kuesa-opacitymask.html</anchorfile>
            <anchor>mask-prop</anchor>
            <arglist>(Qt3DRender::QAbstractTexture *mask)</arglist>
        </member>
        <member kind="function" protection="public" virtualness="non" static="no">
            <type>void</type>
            <name>premultipliedAlphaChanged</name>
            <anchorfile>kuesa-opacitymask.html</anchorfile>
            <anchor>premultipliedAlpha-prop</anchor>
            <arglist>(bool premultipliedAlpha)</arglist>
        </member>
    </compound>
    <compound kind="class">
        <name>Kuesa::Particles</name>
        <filename>kuesa-particles.html</filename>
        <member kind="property" type="int">
            <name>particleCount</name>
            <anchorfile>kuesa-particles.html</anchorfile>
            <anchor>particleCount-prop</anchor>
            <arglist></arglist>
        </member>
        <member kind="property" type="float">
            <name>frameTime</name>
            <anchorfile>kuesa-particles.html</anchorfile>
            <anchor>frameTime-prop</anchor>
            <arglist></arglist>
        </member>
        <member kind="property" type="int">
            <name>maxParticlesEmittedPerFrame</name>
            <anchorfile>kuesa-particles.html</anchorfile>
            <anchor>maxParticlesEmittedPerFrame-prop</anchor>
            <arglist></arglist>
        </member>
        <member kind="property" type="QVector3D">
            <name>gravity</name>
            <anchorfile>kuesa-particles.html</anchorfile>
            <anchor>gravity-prop</anchor>
            <arglist></arglist>
        </member>
        <member kind="property" type="QVector3D">
            <name>emitterPosition</name>
            <anchorfile>kuesa-particles.html</anchorfile>
            <anchor>emitterPosition-prop</anchor>
            <arglist></arglist>
        </member>
        <member kind="property" type="QVector3D">
            <name>emitterPositionRandom</name>
            <anchorfile>kuesa-particles.html</anchorfile>
            <anchor>emitterPositionRandom-prop</anchor>
            <arglist></arglist>
        </member>
        <member kind="property" type="QVector3D">
            <name>emitterVelocity</name>
            <anchorfile>kuesa-particles.html</anchorfile>
            <anchor>emitterVelocity-prop</anchor>
            <arglist></arglist>
        </member>
        <member kind="property" type="QVector3D">
            <name>emitterVelocityRandom</name>
            <anchorfile>kuesa-particles.html</anchorfile>
            <anchor>emitterVelocityRandom-prop</anchor>
            <arglist></arglist>
        </member>
        <member kind="property" type="float">
            <name>particleLifespan</name>
            <anchorfile>kuesa-particles.html</anchorfile>
            <anchor>particleLifespan-prop</anchor>
            <arglist></arglist>
        </member>
        <member kind="property" type="float">
            <name>particleLifespanRandom</name>
            <anchorfile>kuesa-particles.html</anchorfile>
            <anchor>particleLifespanRandom-prop</anchor>
            <arglist></arglist>
        </member>
        <member kind="property" type="QVector2D">
            <name>initialSize</name>
            <anchorfile>kuesa-particles.html</anchorfile>
            <anchor>initialSize-prop</anchor>
            <arglist></arglist>
        </member>
        <member kind="property" type="QVector2D">
            <name>finalSize</name>
            <anchorfile>kuesa-particles.html</anchorfile>
            <anchor>finalSize-prop</anchor>
            <arglist></arglist>
        </member>
        <member kind="property" type="QVector4D">
            <name>initialColor</name>
            <anchorfile>kuesa-particles.html</anchorfile>
            <anchor>initialColor-prop</anchor>
            <arglist></arglist>
        </member>
        <member kind="property" type="QVector4D">
            <name>finalColor</name>
            <anchorfile>kuesa-particles.html</anchorfile>
            <anchor>finalColor-prop</anchor>
            <arglist></arglist>
        </member>
        <member kind="property" type="float">
            <name>initialAngle</name>
            <anchorfile>kuesa-particles.html</anchorfile>
            <anchor>initialAngle-prop</anchor>
            <arglist></arglist>
        </member>
        <member kind="property" type="float">
            <name>initialAngleRandom</name>
            <anchorfile>kuesa-particles.html</anchorfile>
            <anchor>initialAngleRandom-prop</anchor>
            <arglist></arglist>
        </member>
        <member kind="property" type="float">
            <name>rotationRate</name>
            <anchorfile>kuesa-particles.html</anchorfile>
            <anchor>rotationRate-prop</anchor>
            <arglist></arglist>
        </member>
        <member kind="property" type="float">
            <name>rotationRateRandom</name>
            <anchorfile>kuesa-particles.html</anchorfile>
            <anchor>rotationRateRandom-prop</anchor>
            <arglist></arglist>
        </member>
        <member kind="property" type="Qt3DRender::QAbstractTexture*">
            <name>spriteTexture</name>
            <anchorfile>kuesa-particles.html</anchorfile>
            <anchor>spriteTexture-prop</anchor>
            <arglist></arglist>
        </member>
        <member kind="property" type="AlignMode">
            <name>alignMode</name>
            <anchorfile>kuesa-particles.html</anchorfile>
            <anchor>alignMode-prop</anchor>
            <arglist></arglist>
        </member>
        <member kind="enumeration">
            <name>AlignMode</name>
            <anchorfile>kuesa-particles.html</anchorfile>
            <anchor>AlignMode-enum</anchor>
        </member>
        <member kind="enumvalue">
            <name>FaceCamera</name>
            <anchorfile>kuesa-particles.html</anchorfile>
            <anchor>AlignMode-enum</anchor>
            <arglist></arglist>
        </member>
        <member kind="enumvalue">
            <name>Velocity</name>
            <anchorfile>kuesa-particles.html</anchorfile>
            <anchor>AlignMode-enum</anchor>
            <arglist></arglist>
        </member>
        <member kind="function" protection="public" virtualness="non" static="no">
            <type>int</type>
            <name>particleCount</name>
            <anchorfile>kuesa-particles.html</anchorfile>
            <anchor>particleCount-prop</anchor>
            <arglist>() const const</arglist>
        </member>
        <member kind="function" protection="public" virtualness="non" static="no">
            <type>float</type>
            <name>frameTime</name>
            <anchorfile>kuesa-particles.html</anchorfile>
            <anchor>frameTime-prop</anchor>
            <arglist>() const const</arglist>
        </member>
        <member kind="function" protection="public" virtualness="non" static="no">
            <type>int</type>
            <name>maxParticlesEmittedPerFrame</name>
            <anchorfile>kuesa-particles.html</anchorfile>
            <anchor>maxParticlesEmittedPerFrame-prop</anchor>
            <arglist>() const const</arglist>
        </member>
        <member kind="function" protection="public" virtualness="non" static="no">
            <type>QVector3D</type>
            <name>gravity</name>
            <anchorfile>kuesa-particles.html</anchorfile>
            <anchor>gravity-prop</anchor>
            <arglist>() const const</arglist>
        </member>
        <member kind="function" protection="public" virtualness="non" static="no">
            <type>QVector3D</type>
            <name>emitterPosition</name>
            <anchorfile>kuesa-particles.html</anchorfile>
            <anchor>emitterPosition-prop</anchor>
            <arglist>() const const</arglist>
        </member>
        <member kind="function" protection="public" virtualness="non" static="no">
            <type>QVector3D</type>
            <name>emitterPositionRandom</name>
            <anchorfile>kuesa-particles.html</anchorfile>
            <anchor>emitterPositionRandom-prop</anchor>
            <arglist>() const const</arglist>
        </member>
        <member kind="function" protection="public" virtualness="non" static="no">
            <type>QVector3D</type>
            <name>emitterVelocity</name>
            <anchorfile>kuesa-particles.html</anchorfile>
            <anchor>emitterVelocity-prop</anchor>
            <arglist>() const const</arglist>
        </member>
        <member kind="function" protection="public" virtualness="non" static="no">
            <type>QVector3D</type>
            <name>emitterVelocityRandom</name>
            <anchorfile>kuesa-particles.html</anchorfile>
            <anchor>emitterVelocityRandom-prop</anchor>
            <arglist>() const const</arglist>
        </member>
        <member kind="function" protection="public" virtualness="non" static="no">
            <type>float</type>
            <name>particleLifespan</name>
            <anchorfile>kuesa-particles.html</anchorfile>
            <anchor>particleLifespan-prop</anchor>
            <arglist>() const const</arglist>
        </member>
        <member kind="function" protection="public" virtualness="non" static="no">
            <type>float</type>
            <name>particleLifespanRandom</name>
            <anchorfile>kuesa-particles.html</anchorfile>
            <anchor>particleLifespanRandom-prop</anchor>
            <arglist>() const const</arglist>
        </member>
        <member kind="function" protection="public" virtualness="non" static="no">
            <type>QVector2D</type>
            <name>initialSize</name>
            <anchorfile>kuesa-particles.html</anchorfile>
            <anchor>initialSize-prop</anchor>
            <arglist>() const const</arglist>
        </member>
        <member kind="function" protection="public" virtualness="non" static="no">
            <type>QVector2D</type>
            <name>finalSize</name>
            <anchorfile>kuesa-particles.html</anchorfile>
            <anchor>finalSize-prop</anchor>
            <arglist>() const const</arglist>
        </member>
        <member kind="function" protection="public" virtualness="non" static="no">
            <type>QVector4D</type>
            <name>initialColor</name>
            <anchorfile>kuesa-particles.html</anchorfile>
            <anchor>initialColor-prop</anchor>
            <arglist>() const const</arglist>
        </member>
        <member kind="function" protection="public" virtualness="non" static="no">
            <type>QVector4D</type>
            <name>finalColor</name>
            <anchorfile>kuesa-particles.html</anchorfile>
            <anchor>finalColor-prop</anchor>
            <arglist>() const const</arglist>
        </member>
        <member kind="function" protection="public" virtualness="non" static="no">
            <type>float</type>
            <name>initialAngle</name>
            <anchorfile>kuesa-particles.html</anchorfile>
            <anchor>initialAngle-prop</anchor>
            <arglist>() const const</arglist>
        </member>
        <member kind="function" protection="public" virtualness="non" static="no">
            <type>float</type>
            <name>initialAngleRandom</name>
            <anchorfile>kuesa-particles.html</anchorfile>
            <anchor>initialAngleRandom-prop</anchor>
            <arglist>() const const</arglist>
        </member>
        <member kind="function" protection="public" virtualness="non" static="no">
            <type>float</type>
            <name>rotationRate</name>
            <anchorfile>kuesa-particles.html</anchorfile>
            <anchor>rotationRate-prop</anchor>
            <arglist>() const const</arglist>
        </member>
        <member kind="function" protection="public" virtualness="non" static="no">
            <type>float</type>
            <name>rotationRateRandom</name>
            <anchorfile>kuesa-particles.html</anchorfile>
            <anchor>rotationRateRandom-prop</anchor>
            <arglist>() const const</arglist>
        </member>
        <member kind="function" protection="public" virtualness="non" static="no">
            <type>Qt3DRender::QAbstractTexture *</type>
            <name>spriteTexture</name>
            <anchorfile>kuesa-particles.html</anchorfile>
            <anchor>spriteTexture-prop</anchor>
            <arglist>() const const</arglist>
        </member>
        <member kind="function" protection="public" virtualness="non" static="no">
            <type>Kuesa::Particles::AlignMode</type>
            <name>alignMode</name>
            <anchorfile>kuesa-particles.html</anchorfile>
            <anchor>alignMode-prop</anchor>
            <arglist>() const const</arglist>
        </member>
        <member kind="function" protection="public" virtualness="non" static="no">
            <type>void</type>
            <name>setParticleCount</name>
            <anchorfile>kuesa-particles.html</anchorfile>
            <anchor>particleCount-prop</anchor>
            <arglist>(int particleCount)</arglist>
        </member>
        <member kind="function" protection="public" virtualness="non" static="no">
            <type>void</type>
            <name>setFrameTime</name>
            <anchorfile>kuesa-particles.html</anchorfile>
            <anchor>frameTime-prop</anchor>
            <arglist>(float frameTime)</arglist>
        </member>
        <member kind="function" protection="public" virtualness="non" static="no">
            <type>void</type>
            <name>setMaxParticlesEmittedPerFrame</name>
            <anchorfile>kuesa-particles.html</anchorfile>
            <anchor>maxParticlesEmittedPerFrame-prop</anchor>
            <arglist>(int maxParticlesEmittedPerFrame)</arglist>
        </member>
        <member kind="function" protection="public" virtualness="non" static="no">
            <type>void</type>
            <name>setGravity</name>
            <anchorfile>kuesa-particles.html</anchorfile>
            <anchor>gravity-prop</anchor>
            <arglist>(const QVector3D &amp;gravity)</arglist>
        </member>
        <member kind="function" protection="public" virtualness="non" static="no">
            <type>void</type>
            <name>setEmitterPosition</name>
            <anchorfile>kuesa-particles.html</anchorfile>
            <anchor>emitterPosition-prop</anchor>
            <arglist>(const QVector3D &amp;emitterPosition)</arglist>
        </member>
        <member kind="function" protection="public" virtualness="non" static="no">
            <type>void</type>
            <name>setEmitterPositionRandom</name>
            <anchorfile>kuesa-particles.html</anchorfile>
            <anchor>emitterPositionRandom-prop</anchor>
            <arglist>(const QVector3D &amp;emitterPositionRandom)</arglist>
        </member>
        <member kind="function" protection="public" virtualness="non" static="no">
            <type>void</type>
            <name>setEmitterVelocity</name>
            <anchorfile>kuesa-particles.html</anchorfile>
            <anchor>emitterVelocity-prop</anchor>
            <arglist>(const QVector3D &amp;emitterVelocity)</arglist>
        </member>
        <member kind="function" protection="public" virtualness="non" static="no">
            <type>void</type>
            <name>setEmitterVelocityRandom</name>
            <anchorfile>kuesa-particles.html</anchorfile>
            <anchor>emitterVelocityRandom-prop</anchor>
            <arglist>(const QVector3D &amp;emitterVelocityRandom)</arglist>
        </member>
        <member kind="function" protection="public" virtualness="non" static="no">
            <type>void</type>
            <name>setParticleLifespan</name>
            <anchorfile>kuesa-particles.html</anchorfile>
            <anchor>particleLifespan-prop</anchor>
            <arglist>(float lifespan)</arglist>
        </member>
        <member kind="function" protection="public" virtualness="non" static="no">
            <type>void</type>
            <name>setParticleLifespanRandom</name>
            <anchorfile>kuesa-particles.html</anchorfile>
            <anchor>particleLifespanRandom-prop</anchor>
            <arglist>(float lifespanRandom)</arglist>
        </member>
        <member kind="function" protection="public" virtualness="non" static="no">
            <type>void</type>
            <name>setInitialSize</name>
            <anchorfile>kuesa-particles.html</anchorfile>
            <anchor>initialSize-prop</anchor>
            <arglist>(const QVector2D &amp;initialSize)</arglist>
        </member>
        <member kind="function" protection="public" virtualness="non" static="no">
            <type>void</type>
            <name>setFinalSize</name>
            <anchorfile>kuesa-particles.html</anchorfile>
            <anchor>finalSize-prop</anchor>
            <arglist>(const QVector2D &amp;finalSize)</arglist>
        </member>
        <member kind="function" protection="public" virtualness="non" static="no">
            <type>void</type>
            <name>setInitialColor</name>
            <anchorfile>kuesa-particles.html</anchorfile>
            <anchor>initialColor-prop</anchor>
            <arglist>(const QVector4D &amp;initialColor)</arglist>
        </member>
        <member kind="function" protection="public" virtualness="non" static="no">
            <type>void</type>
            <name>setFinalColor</name>
            <anchorfile>kuesa-particles.html</anchorfile>
            <anchor>finalColor-prop</anchor>
            <arglist>(const QVector4D &amp;finalColor)</arglist>
        </member>
        <member kind="function" protection="public" virtualness="non" static="no">
            <type>void</type>
            <name>setInitialAngle</name>
            <anchorfile>kuesa-particles.html</anchorfile>
            <anchor>initialAngle-prop</anchor>
            <arglist>(float initialAngle)</arglist>
        </member>
        <member kind="function" protection="public" virtualness="non" static="no">
            <type>void</type>
            <name>setInitialAngleRandom</name>
            <anchorfile>kuesa-particles.html</anchorfile>
            <anchor>initialAngleRandom-prop</anchor>
            <arglist>(float initialAngleRandom)</arglist>
        </member>
        <member kind="function" protection="public" virtualness="non" static="no">
            <type>void</type>
            <name>setRotationRate</name>
            <anchorfile>kuesa-particles.html</anchorfile>
            <anchor>rotationRate-prop</anchor>
            <arglist>(float rotationRate)</arglist>
        </member>
        <member kind="function" protection="public" virtualness="non" static="no">
            <type>void</type>
            <name>setRotationRateRandom</name>
            <anchorfile>kuesa-particles.html</anchorfile>
            <anchor>rotationRateRandom-prop</anchor>
            <arglist>(float rotationRateRandom)</arglist>
        </member>
        <member kind="function" protection="public" virtualness="non" static="no">
            <type>void</type>
            <name>setSpriteTexture</name>
            <anchorfile>kuesa-particles.html</anchorfile>
            <anchor>spriteTexture-prop</anchor>
            <arglist>(Qt3DRender::QAbstractTexture *spriteTexture)</arglist>
        </member>
        <member kind="function" protection="public" virtualness="non" static="no">
            <type>void</type>
            <name>setAlignMode</name>
            <anchorfile>kuesa-particles.html</anchorfile>
            <anchor>alignMode-prop</anchor>
            <arglist>(Kuesa::Particles::AlignMode alignMode)</arglist>
        </member>
        <member kind="function" protection="public" virtualness="non" static="no">
            <type>void</type>
            <name>particleCountChanged</name>
            <anchorfile>kuesa-particles.html</anchorfile>
            <anchor>particleCount-prop</anchor>
            <arglist>(int particleCount)</arglist>
        </member>
        <member kind="function" protection="public" virtualness="non" static="no">
            <type>void</type>
            <name>frameTimeChanged</name>
            <anchorfile>kuesa-particles.html</anchorfile>
            <anchor>frameTime-prop</anchor>
            <arglist>(float frameTime)</arglist>
        </member>
        <member kind="function" protection="public" virtualness="non" static="no">
            <type>void</type>
            <name>maxParticlesEmittedPerFrameChanged</name>
            <anchorfile>kuesa-particles.html</anchorfile>
            <anchor>maxParticlesEmittedPerFrame-prop</anchor>
            <arglist>(int maxParticlesEmittedPerFrame)</arglist>
        </member>
        <member kind="function" protection="public" virtualness="non" static="no">
            <type>void</type>
            <name>gravityChanged</name>
            <anchorfile>kuesa-particles.html</anchorfile>
            <anchor>gravity-prop</anchor>
            <arglist>(const QVector3D &amp;gravity)</arglist>
        </member>
        <member kind="function" protection="public" virtualness="non" static="no">
            <type>void</type>
            <name>emitterPositionChanged</name>
            <anchorfile>kuesa-particles.html</anchorfile>
            <anchor>emitterPosition-prop</anchor>
            <arglist>(const QVector3D &amp;emitterPosition)</arglist>
        </member>
        <member kind="function" protection="public" virtualness="non" static="no">
            <type>void</type>
            <name>emitterPositionRandomChanged</name>
            <anchorfile>kuesa-particles.html</anchorfile>
            <anchor>emitterPositionRandom-prop</anchor>
            <arglist>(const QVector3D &amp;emitterPositionRandom)</arglist>
        </member>
        <member kind="function" protection="public" virtualness="non" static="no">
            <type>void</type>
            <name>emitterVelocityChanged</name>
            <anchorfile>kuesa-particles.html</anchorfile>
            <anchor>emitterVelocity-prop</anchor>
            <arglist>(const QVector3D &amp;emitterVelocity)</arglist>
        </member>
        <member kind="function" protection="public" virtualness="non" static="no">
            <type>void</type>
            <name>emitterVelocityRandomChanged</name>
            <anchorfile>kuesa-particles.html</anchorfile>
            <anchor>emitterVelocityRandom-prop</anchor>
            <arglist>(const QVector3D &amp;emitterVelocityRandom)</arglist>
        </member>
        <member kind="function" protection="public" virtualness="non" static="no">
            <type>void</type>
            <name>particleLifespanChanged</name>
            <anchorfile>kuesa-particles.html</anchorfile>
            <anchor>particleLifespan-prop</anchor>
            <arglist>(float particleLifespan)</arglist>
        </member>
        <member kind="function" protection="public" virtualness="non" static="no">
            <type>void</type>
            <name>particleLifespanRandomChanged</name>
            <anchorfile>kuesa-particles.html</anchorfile>
            <anchor>particleLifespanRandom-prop</anchor>
            <arglist>(float particleLifespanRandom)</arglist>
        </member>
        <member kind="function" protection="public" virtualness="non" static="no">
            <type>void</type>
            <name>initialSizeChanged</name>
            <anchorfile>kuesa-particles.html</anchorfile>
            <anchor>initialSize-prop</anchor>
            <arglist>(const QVector2D &amp;initialSize)</arglist>
        </member>
        <member kind="function" protection="public" virtualness="non" static="no">
            <type>void</type>
            <name>finalSizeChanged</name>
            <anchorfile>kuesa-particles.html</anchorfile>
            <anchor>finalSize-prop</anchor>
            <arglist>(const QVector2D &amp;finalSize)</arglist>
        </member>
        <member kind="function" protection="public" virtualness="non" static="no">
            <type>void</type>
            <name>initialColorChanged</name>
            <anchorfile>kuesa-particles.html</anchorfile>
            <anchor>initialColor-prop</anchor>
            <arglist>(const QVector4D &amp;initialColor)</arglist>
        </member>
        <member kind="function" protection="public" virtualness="non" static="no">
            <type>void</type>
            <name>finalColorChanged</name>
            <anchorfile>kuesa-particles.html</anchorfile>
            <anchor>finalColor-prop</anchor>
            <arglist>(const QVector4D &amp;finalColor)</arglist>
        </member>
        <member kind="function" protection="public" virtualness="non" static="no">
            <type>void</type>
            <name>initialAngleChanged</name>
            <anchorfile>kuesa-particles.html</anchorfile>
            <anchor>initialAngle-prop</anchor>
            <arglist>(float initialAngle)</arglist>
        </member>
        <member kind="function" protection="public" virtualness="non" static="no">
            <type>void</type>
            <name>initialAngleRandomChanged</name>
            <anchorfile>kuesa-particles.html</anchorfile>
            <anchor>initialAngleRandom-prop</anchor>
            <arglist>(float initialAngleRandom)</arglist>
        </member>
        <member kind="function" protection="public" virtualness="non" static="no">
            <type>void</type>
            <name>rotationRateChanged</name>
            <anchorfile>kuesa-particles.html</anchorfile>
            <anchor>rotationRate-prop</anchor>
            <arglist>(float rotationRate)</arglist>
        </member>
        <member kind="function" protection="public" virtualness="non" static="no">
            <type>void</type>
            <name>rotationRateRandomChanged</name>
            <anchorfile>kuesa-particles.html</anchorfile>
            <anchor>rotationRateRandom-prop</anchor>
            <arglist>(float rotationRateRandom)</arglist>
        </member>
        <member kind="function" protection="public" virtualness="non" static="no">
            <type>void</type>
            <name>spriteTextureChanged</name>
            <anchorfile>kuesa-particles.html</anchorfile>
            <anchor>spriteTexture-prop</anchor>
            <arglist>(const Qt3DRender::QAbstractTexture *spriteTexture)</arglist>
        </member>
        <member kind="function" protection="public" virtualness="non" static="no">
            <type>void</type>
            <name>alignModeChanged</name>
            <anchorfile>kuesa-particles.html</anchorfile>
            <anchor>alignMode-prop</anchor>
            <arglist>(Kuesa::Particles::AlignMode alignMode)</arglist>
        </member>
    </compound>
    <compound kind="class">
        <name>Kuesa::PlaceholderTracker</name>
        <filename>kuesa-placeholdertracker.html</filename>
        <base>KuesaNode</base>
        <member kind="property" type="QString">
            <name>name</name>
            <anchorfile>kuesa-placeholdertracker.html</anchorfile>
            <anchor>name-prop</anchor>
            <arglist></arglist>
        </member>
        <member kind="property" type="Qt3DCore::QEntity*">
            <name>camera</name>
            <anchorfile>kuesa-placeholdertracker.html</anchorfile>
            <anchor>camera-prop</anchor>
            <arglist></arglist>
        </member>
        <member kind="property" type="QSize">
            <name>screenSize</name>
            <anchorfile>kuesa-placeholdertracker.html</anchorfile>
            <anchor>screenSize-prop</anchor>
            <arglist></arglist>
        </member>
        <member kind="property" type="QRectF">
            <name>viewportRect</name>
            <anchorfile>kuesa-placeholdertracker.html</anchorfile>
            <anchor>viewportRect-prop</anchor>
            <arglist></arglist>
        </member>
        <member kind="property" type="QObject*">
            <name>target</name>
            <anchorfile>kuesa-placeholdertracker.html</anchorfile>
            <anchor>target-prop</anchor>
            <arglist></arglist>
        </member>
        <member kind="property" type="int">
            <name>x</name>
            <anchorfile>kuesa-placeholdertracker.html</anchorfile>
            <anchor>x-prop</anchor>
            <arglist></arglist>
        </member>
        <member kind="property" type="int">
            <name>y</name>
            <anchorfile>kuesa-placeholdertracker.html</anchorfile>
            <anchor>y-prop</anchor>
            <arglist></arglist>
        </member>
        <member kind="property" type="int">
            <name>width</name>
            <anchorfile>kuesa-placeholdertracker.html</anchorfile>
            <anchor>width-prop</anchor>
            <arglist></arglist>
        </member>
        <member kind="property" type="int">
            <name>height</name>
            <anchorfile>kuesa-placeholdertracker.html</anchorfile>
            <anchor>height-prop</anchor>
            <arglist></arglist>
        </member>
        <member kind="property" type="QPointF">
            <name>screenPosition</name>
            <anchorfile>kuesa-placeholdertracker.html</anchorfile>
            <anchor>screenPosition-prop</anchor>
            <arglist></arglist>
        </member>
        <member kind="function" protection="public" virtualness="non" static="no">
            <type>QString</type>
            <name>name</name>
            <anchorfile>kuesa-placeholdertracker.html</anchorfile>
            <anchor>name-prop</anchor>
            <arglist>() const const</arglist>
        </member>
        <member kind="function" protection="public" virtualness="non" static="no">
            <type>Qt3DCore::QEntity *</type>
            <name>camera</name>
            <anchorfile>kuesa-placeholdertracker.html</anchorfile>
            <anchor>camera-prop</anchor>
            <arglist>() const const</arglist>
        </member>
        <member kind="function" protection="public" virtualness="non" static="no">
            <type>QSize</type>
            <name>screenSize</name>
            <anchorfile>kuesa-placeholdertracker.html</anchorfile>
            <anchor>screenSize-prop</anchor>
            <arglist>() const const</arglist>
        </member>
        <member kind="function" protection="public" virtualness="non" static="no">
            <type>QRectF</type>
            <name>viewportRect</name>
            <anchorfile>kuesa-placeholdertracker.html</anchorfile>
            <anchor>viewportRect-prop</anchor>
            <arglist>() const const</arglist>
        </member>
        <member kind="function" protection="public" virtualness="non" static="no">
            <type>QObject *</type>
            <name>target</name>
            <anchorfile>kuesa-placeholdertracker.html</anchorfile>
            <anchor>target-prop</anchor>
            <arglist>() const const</arglist>
        </member>
        <member kind="function" protection="public" virtualness="non" static="no">
            <type>int</type>
            <name>x</name>
            <anchorfile>kuesa-placeholdertracker.html</anchorfile>
            <anchor>x-prop</anchor>
            <arglist>() const const</arglist>
        </member>
        <member kind="function" protection="public" virtualness="non" static="no">
            <type>int</type>
            <name>y</name>
            <anchorfile>kuesa-placeholdertracker.html</anchorfile>
            <anchor>y-prop</anchor>
            <arglist>() const const</arglist>
        </member>
        <member kind="function" protection="public" virtualness="non" static="no">
            <type>int</type>
            <name>width</name>
            <anchorfile>kuesa-placeholdertracker.html</anchorfile>
            <anchor>width-prop</anchor>
            <arglist>() const const</arglist>
        </member>
        <member kind="function" protection="public" virtualness="non" static="no">
            <type>int</type>
            <name>height</name>
            <anchorfile>kuesa-placeholdertracker.html</anchorfile>
            <anchor>height-prop</anchor>
            <arglist>() const const</arglist>
        </member>
        <member kind="function" protection="public" virtualness="non" static="no">
            <type>QPointF</type>
            <name>screenPosition</name>
            <anchorfile>kuesa-placeholdertracker.html</anchorfile>
            <anchor>screenPosition-prop</anchor>
            <arglist>() const const</arglist>
        </member>
        <member kind="function" protection="public" virtualness="non" static="no">
            <type>void</type>
            <name>setName</name>
            <anchorfile>kuesa-placeholdertracker.html</anchorfile>
            <anchor>name-prop</anchor>
            <arglist>(const QString &amp;name)</arglist>
        </member>
        <member kind="function" protection="public" virtualness="non" static="no">
            <type>void</type>
            <name>setCamera</name>
            <anchorfile>kuesa-placeholdertracker.html</anchorfile>
            <anchor>camera-prop</anchor>
            <arglist>(Qt3DCore::QEntity *camera)</arglist>
        </member>
        <member kind="function" protection="public" virtualness="non" static="no">
            <type>void</type>
            <name>setScreenSize</name>
            <anchorfile>kuesa-placeholdertracker.html</anchorfile>
            <anchor>screenSize-prop</anchor>
            <arglist>(const QSize &amp;screenSize)</arglist>
        </member>
        <member kind="function" protection="public" virtualness="non" static="no">
            <type>void</type>
            <name>setViewportRect</name>
            <anchorfile>kuesa-placeholdertracker.html</anchorfile>
            <anchor>viewportRect-prop</anchor>
            <arglist>(const QRectF &amp;viewportRect)</arglist>
        </member>
        <member kind="function" protection="public" virtualness="non" static="no">
            <type>void</type>
            <name>setViewportRect</name>
            <anchorfile>kuesa-placeholdertracker.html</anchorfile>
            <anchor>viewportRect-prop</anchor>
            <arglist>(qreal x, qreal y, qreal width, qreal height)</arglist>
        </member>
        <member kind="function" protection="public" virtualness="non" static="no">
            <type>void</type>
            <name>setTarget</name>
            <anchorfile>kuesa-placeholdertracker.html</anchorfile>
            <anchor>target-prop</anchor>
            <arglist>(QObject *target)</arglist>
        </member>
        <member kind="function" protection="public" virtualness="non" static="no">
            <type>void</type>
            <name>nameChanged</name>
            <anchorfile>kuesa-placeholdertracker.html</anchorfile>
            <anchor>name-prop</anchor>
            <arglist>(const QString &amp;name)</arglist>
        </member>
        <member kind="function" protection="public" virtualness="non" static="no">
            <type>void</type>
            <name>cameraChanged</name>
            <anchorfile>kuesa-placeholdertracker.html</anchorfile>
            <anchor>camera-prop</anchor>
            <arglist>(Qt3DCore::QEntity *camera)</arglist>
        </member>
        <member kind="function" protection="public" virtualness="non" static="no">
            <type>void</type>
            <name>screenSizeChanged</name>
            <anchorfile>kuesa-placeholdertracker.html</anchorfile>
            <anchor>screenSize-prop</anchor>
            <arglist>(const QSize &amp;screenSize)</arglist>
        </member>
        <member kind="function" protection="public" virtualness="non" static="no">
            <type>void</type>
            <name>viewportRectChanged</name>
            <anchorfile>kuesa-placeholdertracker.html</anchorfile>
            <anchor>viewportRect-prop</anchor>
            <arglist>(QRectF viewportRect)</arglist>
        </member>
        <member kind="function" protection="public" virtualness="non" static="no">
            <type>void</type>
            <name>targetChanged</name>
            <anchorfile>kuesa-placeholdertracker.html</anchorfile>
            <anchor>target-prop</anchor>
            <arglist>(QObject *target)</arglist>
        </member>
        <member kind="function" protection="public" virtualness="non" static="no">
            <type>void</type>
            <name>xChanged</name>
            <anchorfile>kuesa-placeholdertracker.html</anchorfile>
            <anchor>x-prop</anchor>
            <arglist>(int x)</arglist>
        </member>
        <member kind="function" protection="public" virtualness="non" static="no">
            <type>void</type>
            <name>yChanged</name>
            <anchorfile>kuesa-placeholdertracker.html</anchorfile>
            <anchor>y-prop</anchor>
            <arglist>(int y)</arglist>
        </member>
        <member kind="function" protection="public" virtualness="non" static="no">
            <type>void</type>
            <name>widthChanged</name>
            <anchorfile>kuesa-placeholdertracker.html</anchorfile>
            <anchor>width-prop</anchor>
            <arglist>(int width)</arglist>
        </member>
        <member kind="function" protection="public" virtualness="non" static="no">
            <type>void</type>
            <name>heightChanged</name>
            <anchorfile>kuesa-placeholdertracker.html</anchorfile>
            <anchor>height-prop</anchor>
            <arglist>(int height)</arglist>
        </member>
        <member kind="function" protection="public" virtualness="non" static="no">
            <type>void</type>
            <name>screenPositionChanged</name>
            <anchorfile>kuesa-placeholdertracker.html</anchorfile>
            <anchor>screenPosition-prop</anchor>
            <arglist>(const QPointF &amp;screenPosition)</arglist>
        </member>
    </compound>
    <compound kind="class">
        <name>Kuesa::SceneEntity</name>
        <filename>kuesa-sceneentity.html</filename>
        <member kind="function" protection="public" virtualness="non" static="no">
            <type>Kuesa::AnimationClipCollection *</type>
            <name>animationClips</name>
            <anchorfile>kuesa-sceneentity.html</anchorfile>
            <anchor>animationClips</anchor>
            <arglist>() const const</arglist>
        </member>
        <member kind="function" protection="public" virtualness="non" static="no">
            <type>Qt3DAnimation::QAbstractAnimationClip *</type>
            <name>animationClip</name>
            <anchorfile>kuesa-sceneentity.html</anchorfile>
            <anchor>animationClip</anchor>
            <arglist>(const QString &amp;name) const const</arglist>
        </member>
        <member kind="function" protection="public" virtualness="non" static="no">
            <type>Kuesa::ArmatureCollection *</type>
            <name>armatures</name>
            <anchorfile>kuesa-sceneentity.html</anchorfile>
            <anchor>armatures</anchor>
            <arglist>() const const</arglist>
        </member>
        <member kind="function" protection="public" virtualness="non" static="no">
            <type>Qt3DCore::QArmature *</type>
            <name>armature</name>
            <anchorfile>kuesa-sceneentity.html</anchorfile>
            <anchor>armature</anchor>
            <arglist>(const QString &amp;name) const const</arglist>
        </member>
        <member kind="function" protection="public" virtualness="non" static="no">
            <type>Qt3DRender::QEffect *</type>
            <name>effect</name>
            <anchorfile>kuesa-sceneentity.html</anchorfile>
            <anchor>effect</anchor>
            <arglist>(const QString &amp;name) const const</arglist>
        </member>
        <member kind="function" protection="public" virtualness="non" static="no">
            <type>Qt3DRender::QEffect *</type>
            <name>effect</name>
            <anchorfile>kuesa-sceneentity.html</anchorfile>
            <anchor>effect-1</anchor>
            <arglist>(int effectPropertyFlags) const const</arglist>
        </member>
        <member kind="function" protection="public" virtualness="non" static="no">
            <type>Kuesa::LayerCollection *</type>
            <name>layers</name>
            <anchorfile>kuesa-sceneentity.html</anchorfile>
            <anchor>layers</anchor>
            <arglist>() const const</arglist>
        </member>
        <member kind="function" protection="public" virtualness="non" static="no">
            <type>Qt3DRender::QLayer *</type>
            <name>layer</name>
            <anchorfile>kuesa-sceneentity.html</anchorfile>
            <anchor>layer</anchor>
            <arglist>(const QString &amp;name) const const</arglist>
        </member>
        <member kind="function" protection="public" virtualness="non" static="no">
            <type>Kuesa::MaterialCollection *</type>
            <name>materials</name>
            <anchorfile>kuesa-sceneentity.html</anchorfile>
            <anchor>materials</anchor>
            <arglist>() const const</arglist>
        </member>
        <member kind="function" protection="public" virtualness="non" static="no">
            <type>Kuesa::GLTF2MaterialProperties *</type>
            <name>material</name>
            <anchorfile>kuesa-sceneentity.html</anchorfile>
            <anchor>material</anchor>
            <arglist>(const QString &amp;name) const const</arglist>
        </member>
        <member kind="function" protection="public" virtualness="non" static="no">
            <type>Kuesa::MeshCollection *</type>
            <name>meshes</name>
            <anchorfile>kuesa-sceneentity.html</anchorfile>
            <anchor>meshes</anchor>
            <arglist>() const const</arglist>
        </member>
        <member kind="function" protection="public" virtualness="non" static="no">
            <type>Qt3DRender::QGeometryRenderer *</type>
            <name>mesh</name>
            <anchorfile>kuesa-sceneentity.html</anchorfile>
            <anchor>mesh</anchor>
            <arglist>(const QString &amp;name) const const</arglist>
        </member>
        <member kind="function" protection="public" virtualness="non" static="no">
            <type>Kuesa::SkeletonCollection *</type>
            <name>skeletons</name>
            <anchorfile>kuesa-sceneentity.html</anchorfile>
            <anchor>skeletons</anchor>
            <arglist>() const const</arglist>
        </member>
        <member kind="function" protection="public" virtualness="non" static="no">
            <type>Qt3DCore::QAbstractSkeleton *</type>
            <name>skeleton</name>
            <anchorfile>kuesa-sceneentity.html</anchorfile>
            <anchor>skeleton</anchor>
            <arglist>(const QString &amp;name) const const</arglist>
        </member>
        <member kind="function" protection="public" virtualness="non" static="no">
            <type>Kuesa::TextureCollection *</type>
            <name>textures</name>
            <anchorfile>kuesa-sceneentity.html</anchorfile>
            <anchor>textures</anchor>
            <arglist>() const const</arglist>
        </member>
        <member kind="function" protection="public" virtualness="non" static="no">
            <type>Qt3DRender::QAbstractTexture *</type>
            <name>texture</name>
            <anchorfile>kuesa-sceneentity.html</anchorfile>
            <anchor>texture</anchor>
            <arglist>(const QString &amp;name) const const</arglist>
        </member>
        <member kind="function" protection="public" virtualness="non" static="no">
            <type>Kuesa::CameraCollection *</type>
            <name>cameras</name>
            <anchorfile>kuesa-sceneentity.html</anchorfile>
            <anchor>cameras</anchor>
            <arglist>() const const</arglist>
        </member>
        <member kind="function" protection="public" virtualness="non" static="no">
            <type>Qt3DRender::QCamera *</type>
            <name>camera</name>
            <anchorfile>kuesa-sceneentity.html</anchorfile>
            <anchor>camera</anchor>
            <arglist>(const QString &amp;name) const const</arglist>
        </member>
        <member kind="function" protection="public" virtualness="non" static="no">
            <type>Kuesa::EntityCollection *</type>
            <name>entities</name>
            <anchorfile>kuesa-sceneentity.html</anchorfile>
            <anchor>entities</anchor>
            <arglist>() const const</arglist>
        </member>
        <member kind="function" protection="public" virtualness="non" static="no">
            <type>Qt3DCore::QEntity *</type>
            <name>entity</name>
            <anchorfile>kuesa-sceneentity.html</anchorfile>
            <anchor>entity</anchor>
            <arglist>(const QString &amp;name) const const</arglist>
        </member>
        <member kind="function" protection="public" virtualness="non" static="no">
            <type>Kuesa::TransformCollection *</type>
            <name>transforms</name>
            <anchorfile>kuesa-sceneentity.html</anchorfile>
            <anchor>transforms</anchor>
            <arglist>() const const</arglist>
        </member>
        <member kind="function" protection="public" virtualness="non" static="no">
            <type>Qt3DCore::QTransform *</type>
            <name>transform</name>
            <anchorfile>kuesa-sceneentity.html</anchorfile>
            <anchor>transform</anchor>
            <arglist>(const QString &amp;name) const const</arglist>
        </member>
        <member kind="function" protection="public" virtualness="non" static="no">
            <type>Kuesa::PlaceholderCollection *</type>
            <name>placeholders</name>
            <anchorfile>kuesa-sceneentity.html</anchorfile>
            <anchor>placeholders-prop</anchor>
            <arglist>() const const</arglist>
        </member>
        <member kind="function" protection="public" virtualness="non" static="no">
            <type>Kuesa::TextureImageCollection *</type>
            <name>textureImages</name>
            <anchorfile>kuesa-sceneentity.html</anchorfile>
            <anchor>textureImages</anchor>
            <arglist>() const const</arglist>
        </member>
        <member kind="function" protection="public" virtualness="non" static="no">
            <type>Qt3DRender::QAbstractTextureImage *</type>
            <name>textureImage</name>
            <anchorfile>kuesa-sceneentity.html</anchorfile>
            <anchor>textureImage</anchor>
            <arglist>(const QString &amp;name)</arglist>
        </member>
        <member kind="function" protection="public" virtualness="non" static="no">
            <type>Kuesa::AnimationMappingCollection *</type>
            <name>animationMappings</name>
            <anchorfile>kuesa-sceneentity.html</anchorfile>
            <anchor>animationMappings</anchor>
            <arglist>() const const</arglist>
        </member>
        <member kind="function" protection="public" virtualness="non" static="no">
            <type>Qt3DAnimation::QChannelMapper *</type>
            <name>animationMapping</name>
            <anchorfile>kuesa-sceneentity.html</anchorfile>
            <anchor>animationMapping</anchor>
            <arglist>(const QString &amp;name)</arglist>
        </member>
        <member kind="function" protection="public" virtualness="non" static="no">
            <type>void</type>
            <name>clearCollections</name>
            <anchorfile>kuesa-sceneentity.html</anchorfile>
            <anchor>clearCollections</anchor>
            <arglist>()</arglist>
        </member>
        <member kind="function" protection="public" virtualness="non" static="no">
            <type>Qt3DCore::QNode *</type>
            <name>transformForEntity</name>
            <anchorfile>kuesa-sceneentity.html</anchorfile>
            <anchor>transformForEntity</anchor>
            <arglist>(const QString &amp;name)</arglist>
        </member>
        <member kind="function" protection="public" virtualness="non" static="no">
            <type>Qt3DRender::QAbstractTexture *</type>
            <name>brdfLut</name>
            <anchorfile>kuesa-sceneentity.html</anchorfile>
            <anchor>brdfLut</anchor>
            <arglist>() const const</arglist>
        </member>
        <member kind="function" protection="public" virtualness="non" static="no">
            <type>Kuesa::LightCollection *</type>
            <name>lights</name>
            <anchorfile>kuesa-sceneentity.html</anchorfile>
            <anchor>lights-prop</anchor>
            <arglist>() const const</arglist>
        </member>
        <member kind="function" protection="public" virtualness="non" static="no">
            <type>Kuesa::ReflectionPlaneCollection *</type>
            <name>reflectionPlanes</name>
            <anchorfile>kuesa-sceneentity.html</anchorfile>
            <anchor>reflectionPlanes-prop</anchor>
            <arglist>() const const</arglist>
        </member>
        <member kind="function" protection="public" virtualness="non" static="no">
            <type>Kuesa::ReflectionPlane *</type>
            <name>reflectionPlane</name>
            <anchorfile>kuesa-sceneentity.html</anchorfile>
            <anchor>reflectionPlane</anchor>
            <arglist>(const QString &amp;name) const const</arglist>
        </member>
        <member kind="function" protection="public" virtualness="non" static="no">
            <type>void</type>
            <name>loadingDone</name>
            <anchorfile>kuesa-sceneentity.html</anchorfile>
            <anchor>loadingDone</anchor>
            <arglist>()</arglist>
        </member>
    </compound>
    <compound kind="class">
        <name>Kuesa::Skybox</name>
        <filename>kuesa-skybox.html</filename>
        <member kind="function" protection="public" virtualness="non" static="no">
            <type>QString</type>
            <name>baseName</name>
            <anchorfile>kuesa-skybox.html</anchorfile>
            <anchor>baseName</anchor>
            <arglist>() const const</arglist>
        </member>
        <member kind="function" protection="public" virtualness="non" static="no">
            <type>QString</type>
            <name>extension</name>
            <anchorfile>kuesa-skybox.html</anchorfile>
            <anchor>extension</anchor>
            <arglist>() const const</arglist>
        </member>
        <member kind="function" protection="public" virtualness="non" static="no">
            <type>void</type>
            <name>setBaseName</name>
            <anchorfile>kuesa-skybox.html</anchorfile>
            <anchor>setBaseName</anchor>
            <arglist>(const QString &amp;baseName)</arglist>
        </member>
        <member kind="function" protection="public" virtualness="non" static="no">
            <type>void</type>
            <name>setExtension</name>
            <anchorfile>kuesa-skybox.html</anchorfile>
            <anchor>setExtension</anchor>
            <arglist>(const QString &amp;extension)</arglist>
        </member>
        <member kind="function" protection="public" virtualness="non" static="no">
            <type>void</type>
            <name>baseNameChanged</name>
            <anchorfile>kuesa-skybox.html</anchorfile>
            <anchor>baseName-prop</anchor>
            <arglist>(const QString &amp;path)</arglist>
        </member>
        <member kind="function" protection="public" virtualness="non" static="no">
            <type>void</type>
            <name>extensionChanged</name>
            <anchorfile>kuesa-skybox.html</anchorfile>
            <anchor>extension-prop</anchor>
            <arglist>(const QString &amp;extension)</arglist>
        </member>
    </compound>
    <compound kind="class">
        <name>Kuesa::SpotLight</name>
        <filename>kuesa-spotlight.html</filename>
        <base>ShadowCastingLight</base>
        <member kind="property" type="QVector3D">
            <name>localDirection</name>
            <anchorfile>kuesa-spotlight.html</anchorfile>
            <anchor>localDirection-prop</anchor>
            <arglist></arglist>
        </member>
        <member kind="property" type="float">
            <name>innerConeAngle</name>
            <anchorfile>kuesa-spotlight.html</anchorfile>
            <anchor>innerConeAngle-prop</anchor>
            <arglist></arglist>
        </member>
        <member kind="property" type="float">
            <name>outerConeAngle</name>
            <anchorfile>kuesa-spotlight.html</anchorfile>
            <anchor>outerConeAngle-prop</anchor>
            <arglist></arglist>
        </member>
        <member kind="property" type="float">
            <name>range</name>
            <anchorfile>kuesa-spotlight.html</anchorfile>
            <anchor>range-prop</anchor>
            <arglist></arglist>
        </member>
        <member kind="function" protection="public" virtualness="non" static="no">
            <type>QVector3D</type>
            <name>localDirection</name>
            <anchorfile>kuesa-spotlight.html</anchorfile>
            <anchor>localDirection-prop</anchor>
            <arglist>() const const</arglist>
        </member>
        <member kind="function" protection="public" virtualness="non" static="no">
            <type>float</type>
            <name>innerConeAngle</name>
            <anchorfile>kuesa-spotlight.html</anchorfile>
            <anchor>innerConeAngle-prop</anchor>
            <arglist>() const const</arglist>
        </member>
        <member kind="function" protection="public" virtualness="non" static="no">
            <type>float</type>
            <name>outerConeAngle</name>
            <anchorfile>kuesa-spotlight.html</anchorfile>
            <anchor>outerConeAngle-prop</anchor>
            <arglist>() const const</arglist>
        </member>
        <member kind="function" protection="public" virtualness="non" static="no">
            <type>float</type>
            <name>range</name>
            <anchorfile>kuesa-spotlight.html</anchorfile>
            <anchor>range-prop</anchor>
            <arglist>() const const</arglist>
        </member>
        <member kind="function" protection="public" virtualness="non" static="no">
            <type>void</type>
            <name>setLocalDirection</name>
            <anchorfile>kuesa-spotlight.html</anchorfile>
            <anchor>localDirection-prop</anchor>
            <arglist>(const QVector3D &amp;localDirection)</arglist>
        </member>
        <member kind="function" protection="public" virtualness="non" static="no">
            <type>void</type>
            <name>setInnerConeAngle</name>
            <anchorfile>kuesa-spotlight.html</anchorfile>
            <anchor>innerConeAngle-prop</anchor>
            <arglist>(float innerConeAngle)</arglist>
        </member>
        <member kind="function" protection="public" virtualness="non" static="no">
            <type>void</type>
            <name>setOuterConeAngle</name>
            <anchorfile>kuesa-spotlight.html</anchorfile>
            <anchor>outerConeAngle-prop</anchor>
            <arglist>(float outerConeAngle)</arglist>
        </member>
        <member kind="function" protection="public" virtualness="non" static="no">
            <type>void</type>
            <name>setRange</name>
            <anchorfile>kuesa-spotlight.html</anchorfile>
            <anchor>range-prop</anchor>
            <arglist>(float range)</arglist>
        </member>
        <member kind="function" protection="public" virtualness="non" static="no">
            <type>void</type>
            <name>localDirectionChanged</name>
            <anchorfile>kuesa-spotlight.html</anchorfile>
            <anchor>localDirection-prop</anchor>
            <arglist>(const QVector3D &amp;localDirection)</arglist>
        </member>
        <member kind="function" protection="public" virtualness="non" static="no">
            <type>void</type>
            <name>innerConeAngleChanged</name>
            <anchorfile>kuesa-spotlight.html</anchorfile>
            <anchor>innerConeAngle-prop</anchor>
            <arglist>(float innerConeAngle)</arglist>
        </member>
        <member kind="function" protection="public" virtualness="non" static="no">
            <type>void</type>
            <name>outerConeAngleChanged</name>
            <anchorfile>kuesa-spotlight.html</anchorfile>
            <anchor>outerConeAngle-prop</anchor>
            <arglist>(float outerConeAngle)</arglist>
        </member>
        <member kind="function" protection="public" virtualness="non" static="no">
            <type>void</type>
            <name>rangeChanged</name>
            <anchorfile>kuesa-spotlight.html</anchorfile>
            <anchor>range-prop</anchor>
            <arglist>(float range)</arglist>
        </member>
    </compound>
    <compound kind="class">
        <name>Kuesa::SteppedAnimationPlayer</name>
        <filename>kuesa-steppedanimationplayer.html</filename>
        <base>AnimationPulse</base>
        <member kind="property" type="QStringList">
            <name>animationNames</name>
            <anchorfile>kuesa-steppedanimationplayer.html</anchorfile>
            <anchor>animationNames-prop</anchor>
            <arglist></arglist>
        </member>
        <member kind="function" protection="public" virtualness="non" static="no">
            <type>QStringList</type>
            <name>animationNames</name>
            <anchorfile>kuesa-steppedanimationplayer.html</anchorfile>
            <anchor>animationNames-prop</anchor>
            <arglist>() const const</arglist>
        </member>
        <member kind="function" protection="public" virtualness="non" static="no">
            <type>void</type>
            <name>setAnimationNames</name>
            <anchorfile>kuesa-steppedanimationplayer.html</anchorfile>
            <anchor>animationNames-prop</anchor>
            <arglist>(const QStringList &amp;animationNames)</arglist>
        </member>
        <member kind="function" protection="public" virtualness="non" static="no">
            <type>void</type>
            <name>animationNamesChanged</name>
            <anchorfile>kuesa-steppedanimationplayer.html</anchorfile>
            <anchor>animationNames-prop</anchor>
            <arglist>()</arglist>
        </member>
    </compound>
    <compound kind="class">
        <name>Kuesa::ThresholdEffect</name>
        <filename>kuesa-thresholdeffect.html</filename>
        <base>AbstractPostProcessingEffect</base>
        <member kind="property" type="float">
            <name>threshold</name>
            <anchorfile>kuesa-thresholdeffect.html</anchorfile>
            <anchor>threshold-prop</anchor>
            <arglist></arglist>
        </member>
        <member kind="function" protection="public" virtualness="virtual" static="no">
            <type>virtual Kuesa::AbstractPostProcessingEffect::FrameGraphNodePtr</type>
            <name>frameGraphSubTree</name>
            <anchorfile>kuesa-thresholdeffect.html</anchorfile>
            <anchor>frameGraphSubTree</anchor>
            <arglist>() const const override</arglist>
        </member>
        <member kind="function" protection="public" virtualness="virtual" static="no">
            <type>virtual void</type>
            <name>setInputTexture</name>
            <anchorfile>kuesa-thresholdeffect.html</anchorfile>
            <anchor>setInputTexture</anchor>
            <arglist>(Qt3DRender::QAbstractTexture *texture) override</arglist>
        </member>
        <member kind="function" protection="public" virtualness="non" static="no">
            <type>float</type>
            <name>threshold</name>
            <anchorfile>kuesa-thresholdeffect.html</anchorfile>
            <anchor>threshold</anchor>
            <arglist>() const const</arglist>
        </member>
        <member kind="function" protection="public" virtualness="non" static="no">
            <type>void</type>
            <name>setThreshold</name>
            <anchorfile>kuesa-thresholdeffect.html</anchorfile>
            <anchor>setThreshold</anchor>
            <arglist>(float threshold)</arglist>
        </member>
        <member kind="function" protection="public" virtualness="non" static="no">
            <type>void</type>
            <name>thresholdChanged</name>
            <anchorfile>kuesa-thresholdeffect.html</anchorfile>
            <anchor>threshold-prop</anchor>
            <arglist>(float threshold)</arglist>
        </member>
    </compound>
    <compound kind="class">
        <name>Kuesa::TransformTracker</name>
        <filename>kuesa-transformtracker.html</filename>
        <base>KuesaNode</base>
        <member kind="property" type="QString">
            <name>name</name>
            <anchorfile>kuesa-transformtracker.html</anchorfile>
            <anchor>name-prop</anchor>
            <arglist></arglist>
        </member>
        <member kind="property" type="Qt3DCore::QEntity*">
            <name>camera</name>
            <anchorfile>kuesa-transformtracker.html</anchorfile>
            <anchor>camera-prop</anchor>
            <arglist></arglist>
        </member>
        <member kind="property" type="QSize">
            <name>screenSize</name>
            <anchorfile>kuesa-transformtracker.html</anchorfile>
            <anchor>screenSize-prop</anchor>
            <arglist></arglist>
        </member>
        <member kind="property" type="QRectF">
            <name>viewportRect</name>
            <anchorfile>kuesa-transformtracker.html</anchorfile>
            <anchor>viewportRect-prop</anchor>
            <arglist></arglist>
        </member>
        <member kind="property" type="QMatrix4x4">
            <name>matrix</name>
            <anchorfile>kuesa-transformtracker.html</anchorfile>
            <anchor>matrix-prop</anchor>
            <arglist></arglist>
        </member>
        <member kind="property" type="QMatrix4x4">
            <name>worldMatrix</name>
            <anchorfile>kuesa-transformtracker.html</anchorfile>
            <anchor>worldMatrix-prop</anchor>
            <arglist></arglist>
        </member>
        <member kind="property" type="QQuaternion">
            <name>rotation</name>
            <anchorfile>kuesa-transformtracker.html</anchorfile>
            <anchor>rotation-prop</anchor>
            <arglist></arglist>
        </member>
        <member kind="property" type="float">
            <name>rotationX</name>
            <anchorfile>kuesa-transformtracker.html</anchorfile>
            <anchor>rotationX-prop</anchor>
            <arglist></arglist>
        </member>
        <member kind="property" type="float">
            <name>rotationY</name>
            <anchorfile>kuesa-transformtracker.html</anchorfile>
            <anchor>rotationY-prop</anchor>
            <arglist></arglist>
        </member>
        <member kind="property" type="float">
            <name>rotationZ</name>
            <anchorfile>kuesa-transformtracker.html</anchorfile>
            <anchor>rotationZ-prop</anchor>
            <arglist></arglist>
        </member>
        <member kind="property" type="float">
            <name>scale</name>
            <anchorfile>kuesa-transformtracker.html</anchorfile>
            <anchor>scale-prop</anchor>
            <arglist></arglist>
        </member>
        <member kind="property" type="QVector3D">
            <name>scale3D</name>
            <anchorfile>kuesa-transformtracker.html</anchorfile>
            <anchor>scale3D-prop</anchor>
            <arglist></arglist>
        </member>
        <member kind="property" type="QVector3D">
            <name>translation</name>
            <anchorfile>kuesa-transformtracker.html</anchorfile>
            <anchor>translation-prop</anchor>
            <arglist></arglist>
        </member>
        <member kind="property" type="QPointF">
            <name>screenPosition</name>
            <anchorfile>kuesa-transformtracker.html</anchorfile>
            <anchor>screenPosition-prop</anchor>
            <arglist></arglist>
        </member>
        <member kind="function" protection="public" virtualness="non" static="no">
            <type>Qt3DCore::QEntity *</type>
            <name>camera</name>
            <anchorfile>kuesa-transformtracker.html</anchorfile>
            <anchor>camera-prop</anchor>
            <arglist>() const const</arglist>
        </member>
        <member kind="function" protection="public" virtualness="non" static="no">
            <type>QSize</type>
            <name>screenSize</name>
            <anchorfile>kuesa-transformtracker.html</anchorfile>
            <anchor>screenSize-prop</anchor>
            <arglist>() const const</arglist>
        </member>
        <member kind="function" protection="public" virtualness="non" static="no">
            <type>QRectF</type>
            <name>viewportRect</name>
            <anchorfile>kuesa-transformtracker.html</anchorfile>
            <anchor>viewportRect-prop</anchor>
            <arglist>() const const</arglist>
        </member>
        <member kind="function" protection="public" virtualness="non" static="no">
            <type>QString</type>
            <name>name</name>
            <anchorfile>kuesa-transformtracker.html</anchorfile>
            <anchor>name-prop</anchor>
            <arglist>() const const</arglist>
        </member>
        <member kind="function" protection="public" virtualness="non" static="no">
            <type>QMatrix4x4</type>
            <name>matrix</name>
            <anchorfile>kuesa-transformtracker.html</anchorfile>
            <anchor>matrix-prop</anchor>
            <arglist>() const const</arglist>
        </member>
        <member kind="function" protection="public" virtualness="non" static="no">
            <type>QMatrix4x4</type>
            <name>worldMatrix</name>
            <anchorfile>kuesa-transformtracker.html</anchorfile>
            <anchor>worldMatrix-prop</anchor>
            <arglist>() const const</arglist>
        </member>
        <member kind="function" protection="public" virtualness="non" static="no">
            <type>QQuaternion</type>
            <name>rotation</name>
            <anchorfile>kuesa-transformtracker.html</anchorfile>
            <anchor>rotation-prop</anchor>
            <arglist>() const const</arglist>
        </member>
        <member kind="function" protection="public" virtualness="non" static="no">
            <type>float</type>
            <name>rotationX</name>
            <anchorfile>kuesa-transformtracker.html</anchorfile>
            <anchor>rotationX-prop</anchor>
            <arglist>() const const</arglist>
        </member>
        <member kind="function" protection="public" virtualness="non" static="no">
            <type>float</type>
            <name>rotationY</name>
            <anchorfile>kuesa-transformtracker.html</anchorfile>
            <anchor>rotationY-prop</anchor>
            <arglist>() const const</arglist>
        </member>
        <member kind="function" protection="public" virtualness="non" static="no">
            <type>float</type>
            <name>rotationZ</name>
            <anchorfile>kuesa-transformtracker.html</anchorfile>
            <anchor>rotationZ-prop</anchor>
            <arglist>() const const</arglist>
        </member>
        <member kind="function" protection="public" virtualness="non" static="no">
            <type>float</type>
            <name>scale</name>
            <anchorfile>kuesa-transformtracker.html</anchorfile>
            <anchor>scale-prop</anchor>
            <arglist>() const const</arglist>
        </member>
        <member kind="function" protection="public" virtualness="non" static="no">
            <type>QVector3D</type>
            <name>scale3D</name>
            <anchorfile>kuesa-transformtracker.html</anchorfile>
            <anchor>scale3D-prop</anchor>
            <arglist>() const const</arglist>
        </member>
        <member kind="function" protection="public" virtualness="non" static="no">
            <type>QVector3D</type>
            <name>translation</name>
            <anchorfile>kuesa-transformtracker.html</anchorfile>
            <anchor>translation-prop</anchor>
            <arglist>() const const</arglist>
        </member>
        <member kind="function" protection="public" virtualness="non" static="no">
            <type>QPointF</type>
            <name>screenPosition</name>
            <anchorfile>kuesa-transformtracker.html</anchorfile>
            <anchor>screenPosition-prop</anchor>
            <arglist>() const const</arglist>
        </member>
        <member kind="function" protection="public" virtualness="non" static="no">
            <type>void</type>
            <name>setName</name>
            <anchorfile>kuesa-transformtracker.html</anchorfile>
            <anchor>name-prop</anchor>
            <arglist>(const QString &amp;name)</arglist>
        </member>
        <member kind="function" protection="public" virtualness="non" static="no">
            <type>void</type>
            <name>setCamera</name>
            <anchorfile>kuesa-transformtracker.html</anchorfile>
            <anchor>camera-prop</anchor>
            <arglist>(Qt3DCore::QEntity *camera)</arglist>
        </member>
        <member kind="function" protection="public" virtualness="non" static="no">
            <type>void</type>
            <name>setScreenSize</name>
            <anchorfile>kuesa-transformtracker.html</anchorfile>
            <anchor>screenSize-prop</anchor>
            <arglist>(const QSize &amp;screenSize)</arglist>
        </member>
        <member kind="function" protection="public" virtualness="non" static="no">
            <type>void</type>
            <name>setViewportRect</name>
            <anchorfile>kuesa-transformtracker.html</anchorfile>
            <anchor>viewportRect-prop</anchor>
            <arglist>(const QRectF &amp;viewportRect)</arglist>
        </member>
        <member kind="function" protection="public" virtualness="non" static="no">
            <type>void</type>
            <name>setViewportRect</name>
            <anchorfile>kuesa-transformtracker.html</anchorfile>
            <anchor>viewportRect-prop</anchor>
            <arglist>(qreal x, qreal y, qreal width, qreal height)</arglist>
        </member>
        <member kind="function" protection="public" virtualness="non" static="no">
            <type>void</type>
            <name>setMatrix</name>
            <anchorfile>kuesa-transformtracker.html</anchorfile>
            <anchor>matrix-prop</anchor>
            <arglist>(const QMatrix4x4 &amp;matrix)</arglist>
        </member>
        <member kind="function" protection="public" virtualness="non" static="no">
            <type>void</type>
            <name>setRotation</name>
            <anchorfile>kuesa-transformtracker.html</anchorfile>
            <anchor>rotation-prop</anchor>
            <arglist>(const QQuaternion &amp;rotation)</arglist>
        </member>
        <member kind="function" protection="public" virtualness="non" static="no">
            <type>void</type>
            <name>setRotationX</name>
            <anchorfile>kuesa-transformtracker.html</anchorfile>
            <anchor>rotationX-prop</anchor>
            <arglist>(float rotationX)</arglist>
        </member>
        <member kind="function" protection="public" virtualness="non" static="no">
            <type>void</type>
            <name>setRotationY</name>
            <anchorfile>kuesa-transformtracker.html</anchorfile>
            <anchor>rotationY-prop</anchor>
            <arglist>(float rotationY)</arglist>
        </member>
        <member kind="function" protection="public" virtualness="non" static="no">
            <type>void</type>
            <name>setRotationZ</name>
            <anchorfile>kuesa-transformtracker.html</anchorfile>
            <anchor>rotationZ-prop</anchor>
            <arglist>(float rotationZ)</arglist>
        </member>
        <member kind="function" protection="public" virtualness="non" static="no">
            <type>void</type>
            <name>setScale</name>
            <anchorfile>kuesa-transformtracker.html</anchorfile>
            <anchor>scale-prop</anchor>
            <arglist>(float scale)</arglist>
        </member>
        <member kind="function" protection="public" virtualness="non" static="no">
            <type>void</type>
            <name>setScale3D</name>
            <anchorfile>kuesa-transformtracker.html</anchorfile>
            <anchor>scale3D-prop</anchor>
            <arglist>(const QVector3D &amp;scale3D)</arglist>
        </member>
        <member kind="function" protection="public" virtualness="non" static="no">
            <type>void</type>
            <name>setTranslation</name>
            <anchorfile>kuesa-transformtracker.html</anchorfile>
            <anchor>translation-prop</anchor>
            <arglist>(const QVector3D &amp;translation)</arglist>
        </member>
        <member kind="function" protection="public" virtualness="non" static="no">
            <type>void</type>
            <name>nameChanged</name>
            <anchorfile>kuesa-transformtracker.html</anchorfile>
            <anchor>name-prop</anchor>
            <arglist>(const QString &amp;name)</arglist>
        </member>
        <member kind="function" protection="public" virtualness="non" static="no">
            <type>void</type>
            <name>cameraChanged</name>
            <anchorfile>kuesa-transformtracker.html</anchorfile>
            <anchor>camera-prop</anchor>
            <arglist>(Qt3DCore::QEntity *camera)</arglist>
        </member>
        <member kind="function" protection="public" virtualness="non" static="no">
            <type>void</type>
            <name>screenSizeChanged</name>
            <anchorfile>kuesa-transformtracker.html</anchorfile>
            <anchor>screenSize-prop</anchor>
            <arglist>(const QSize &amp;screenSize)</arglist>
        </member>
        <member kind="function" protection="public" virtualness="non" static="no">
            <type>void</type>
            <name>scaleChanged</name>
            <anchorfile>kuesa-transformtracker.html</anchorfile>
            <anchor>scale-prop</anchor>
            <arglist>(float scale)</arglist>
        </member>
        <member kind="function" protection="public" virtualness="non" static="no">
            <type>void</type>
            <name>scale3DChanged</name>
            <anchorfile>kuesa-transformtracker.html</anchorfile>
            <anchor>scale3D-prop</anchor>
            <arglist>(const QVector3D &amp;scale)</arglist>
        </member>
        <member kind="function" protection="public" virtualness="non" static="no">
            <type>void</type>
            <name>rotationChanged</name>
            <anchorfile>kuesa-transformtracker.html</anchorfile>
            <anchor>rotation-prop</anchor>
            <arglist>(const QQuaternion &amp;rotation)</arglist>
        </member>
        <member kind="function" protection="public" virtualness="non" static="no">
            <type>void</type>
            <name>translationChanged</name>
            <anchorfile>kuesa-transformtracker.html</anchorfile>
            <anchor>translation-prop</anchor>
            <arglist>(const QVector3D &amp;translation)</arglist>
        </member>
        <member kind="function" protection="public" virtualness="non" static="no">
            <type>void</type>
            <name>matrixChanged</name>
            <anchorfile>kuesa-transformtracker.html</anchorfile>
            <anchor>matrix-prop</anchor>
            <arglist>(const QMatrix4x4 &amp;matrix)</arglist>
        </member>
        <member kind="function" protection="public" virtualness="non" static="no">
            <type>void</type>
            <name>rotationXChanged</name>
            <anchorfile>kuesa-transformtracker.html</anchorfile>
            <anchor>rotationX-prop</anchor>
            <arglist>(float rotationX)</arglist>
        </member>
        <member kind="function" protection="public" virtualness="non" static="no">
            <type>void</type>
            <name>rotationYChanged</name>
            <anchorfile>kuesa-transformtracker.html</anchorfile>
            <anchor>rotationY-prop</anchor>
            <arglist>(float rotationY)</arglist>
        </member>
        <member kind="function" protection="public" virtualness="non" static="no">
            <type>void</type>
            <name>rotationZChanged</name>
            <anchorfile>kuesa-transformtracker.html</anchorfile>
            <anchor>rotationZ-prop</anchor>
            <arglist>(float rotationZ)</arglist>
        </member>
        <member kind="function" protection="public" virtualness="non" static="no">
            <type>void</type>
            <name>worldMatrixChanged</name>
            <anchorfile>kuesa-transformtracker.html</anchorfile>
            <anchor>worldMatrix-prop</anchor>
            <arglist>(const QMatrix4x4 &amp;worldMatrix)</arglist>
        </member>
        <member kind="function" protection="public" virtualness="non" static="no">
            <type>void</type>
            <name>screenPositionChanged</name>
            <anchorfile>kuesa-transformtracker.html</anchorfile>
            <anchor>screenPosition-prop</anchor>
            <arglist>(const QPointF &amp;screenPosition)</arglist>
        </member>
        <member kind="function" protection="public" virtualness="non" static="no">
            <type>void</type>
            <name>viewportRectChanged</name>
            <anchorfile>kuesa-transformtracker.html</anchorfile>
            <anchor>viewportRect-prop</anchor>
            <arglist>(QRectF viewportRect)</arglist>
        </member>
    </compound>
    <compound kind="class">
        <name>Kuesa::UnlitEffect</name>
        <filename>kuesa-unliteffect.html</filename>
        <base>GLTF2MaterialEffect</base>
        <member kind="function" protection="public" virtualness="non" static="no">
            <type>bool</type>
            <name>isBaseColorMapEnabled</name>
            <anchorfile>kuesa-unliteffect.html</anchorfile>
            <anchor>baseColorMapEnabled-prop</anchor>
            <arglist>() const const</arglist>
        </member>
        <member kind="function" protection="public" virtualness="non" static="no">
            <type>void</type>
            <name>setBaseColorMapEnabled</name>
            <anchorfile>kuesa-unliteffect.html</anchorfile>
            <anchor>baseColorMapEnabled-prop</anchor>
            <arglist>(bool enabled)</arglist>
        </member>
        <member kind="function" protection="public" virtualness="non" static="no">
            <type>void</type>
            <name>baseColorMapEnabledChanged</name>
            <anchorfile>kuesa-unliteffect.html</anchorfile>
            <anchor>baseColorMapEnabled-prop</anchor>
            <arglist>(bool enabled)</arglist>
        </member>
    </compound>
    <compound kind="class">
        <name>Kuesa::UnlitMaterial</name>
        <filename>kuesa-unlitmaterial.html</filename>
        <base>GLTF2Material</base>
        <member kind="property" type="Kuesa::UnlitProperties*">
            <name>materialProperties</name>
            <anchorfile>kuesa-unlitmaterial.html</anchorfile>
            <anchor>materialProperties-prop</anchor>
            <arglist></arglist>
        </member>
        <member kind="function" protection="public" virtualness="non" static="no">
            <type>Kuesa::UnlitProperties *</type>
            <name>materialProperties</name>
            <anchorfile>kuesa-unlitmaterial.html</anchorfile>
            <anchor>materialProperties-prop</anchor>
            <arglist>() const const</arglist>
        </member>
        <member kind="function" protection="public" virtualness="non" static="no">
            <type>void</type>
            <name>setMaterialProperties</name>
            <anchorfile>kuesa-unlitmaterial.html</anchorfile>
            <anchor>materialProperties-prop</anchor>
            <arglist>(Kuesa::UnlitProperties *materialProperties)</arglist>
        </member>
        <member kind="function" protection="public" virtualness="non" static="no">
            <type>void</type>
            <name>materialPropertiesChanged</name>
            <anchorfile>kuesa-unlitmaterial.html</anchorfile>
            <anchor>materialProperties-prop</anchor>
            <arglist>(Kuesa::UnlitProperties *properties)</arglist>
        </member>
    </compound>
    <compound kind="class">
        <name>Kuesa::UnlitProperties</name>
        <filename>kuesa-unlitproperties.html</filename>
        <base>GLTF2MaterialProperties</base>
    </compound>
    <compound kind="class">
        <name>KuesaNode</name>
        <filename>qml-kuesanode.html</filename>
    </compound>
    <compound kind="namespace">
        <name>KuesaUtils</name>
        <filename>kuesautils-sub-kuesa.html</filename>
        <class>KuesaUtils::ViewConfiguration</class>
        <class>KuesaUtils::SceneConfiguration</class>
        <class>KuesaUtils::View3DScene</class>
        <class>KuesaUtils::Window</class>
    </compound>
    <compound kind="class">
        <name>KuesaUtils::SceneConfiguration</name>
        <filename>kuesautils-sceneconfiguration.html</filename>
        <base>KuesaNode</base>
        <member kind="property" type="QUrl">
            <name>source</name>
            <anchorfile>kuesautils-sceneconfiguration.html</anchorfile>
            <anchor>source-prop</anchor>
            <arglist></arglist>
        </member>
        <member kind="function" protection="public" virtualness="non" static="no">
            <type>QUrl</type>
            <name>source</name>
            <anchorfile>kuesautils-sceneconfiguration.html</anchorfile>
            <anchor>source-prop</anchor>
            <arglist>() const const</arglist>
        </member>
        <member kind="function" protection="public" virtualness="non" static="no">
            <type>void</type>
            <name>setSource</name>
            <anchorfile>kuesautils-sceneconfiguration.html</anchorfile>
            <anchor>source-prop</anchor>
            <arglist>(const QUrl &amp;source)</arglist>
        </member>
        <member kind="function" protection="public" virtualness="non" static="no">
            <type>void</type>
            <name>sourceChanged</name>
            <anchorfile>kuesautils-sceneconfiguration.html</anchorfile>
            <anchor>source-prop</anchor>
            <arglist>(const QUrl &amp;source)</arglist>
        </member>
    </compound>
    <compound kind="class">
        <name>KuesaUtils::View3DScene</name>
        <filename>kuesautils-view3dscene.html</filename>
        <base>SceneEntity</base>
        <member kind="property" type="Kuesa::GLTF2Importer*">
            <name>importer</name>
            <anchorfile>kuesautils-view3dscene.html</anchorfile>
            <anchor>importer-prop</anchor>
            <arglist></arglist>
        </member>
        <member kind="property" type="Kuesa::ForwardRenderer*">
            <name>frameGraph</name>
            <anchorfile>kuesautils-view3dscene.html</anchorfile>
            <anchor>frameGraph-prop</anchor>
            <arglist></arglist>
        </member>
        <member kind="property" type="Qt3DRender::QRenderSettings*">
            <name>renderSettings</name>
            <anchorfile>kuesautils-view3dscene.html</anchorfile>
            <anchor>renderSettings-prop</anchor>
            <arglist></arglist>
        </member>
        <member kind="property" type="QUrl">
            <name>source</name>
            <anchorfile>kuesautils-view3dscene.html</anchorfile>
            <anchor>source-prop</anchor>
            <arglist></arglist>
        </member>
        <member kind="property" type="bool">
            <name>showDebugOverlay</name>
            <anchorfile>kuesautils-view3dscene.html</anchorfile>
            <anchor>showDebugOverlay-prop</anchor>
            <arglist></arglist>
        </member>
        <member kind="property" type="QSize">
            <name>screenSize</name>
            <anchorfile>kuesautils-view3dscene.html</anchorfile>
            <anchor>screenSize-prop</anchor>
            <arglist></arglist>
        </member>
        <member kind="property" type="bool">
            <name>ready</name>
            <anchorfile>kuesautils-view3dscene.html</anchorfile>
            <anchor>ready-prop</anchor>
            <arglist></arglist>
        </member>
        <member kind="property" type="bool">
            <name>loaded</name>
            <anchorfile>kuesautils-view3dscene.html</anchorfile>
            <anchor>loaded-prop</anchor>
            <arglist></arglist>
        </member>
        <member kind="property" type="bool">
            <name>asynchronous</name>
            <anchorfile>kuesautils-view3dscene.html</anchorfile>
            <anchor>asynchronous-prop</anchor>
            <arglist></arglist>
        </member>
        <member kind="property" type="KuesaUtils::SceneConfiguration*">
            <name>activeScene</name>
            <anchorfile>kuesautils-view3dscene.html</anchorfile>
            <anchor>activeScene-prop</anchor>
            <arglist></arglist>
        </member>
        <member kind="property" type="QString">
            <name>reflectionPlaneName</name>
            <anchorfile>kuesautils-view3dscene.html</anchorfile>
            <anchor>reflectionPlaneName-prop</anchor>
            <arglist></arglist>
        </member>
        <member kind="function" protection="public" virtualness="non" static="no">
            <type>Kuesa::GLTF2Importer *</type>
            <name>importer</name>
            <anchorfile>kuesautils-view3dscene.html</anchorfile>
            <anchor>importer-prop</anchor>
            <arglist>() const const</arglist>
        </member>
        <member kind="function" protection="public" virtualness="non" static="no">
            <type>Kuesa::ForwardRenderer *</type>
            <name>frameGraph</name>
            <anchorfile>kuesautils-view3dscene.html</anchorfile>
            <anchor>frameGraph-prop</anchor>
            <arglist>() const const</arglist>
        </member>
        <member kind="function" protection="public" virtualness="non" static="no">
            <type>Qt3DRender::QRenderSettings *</type>
            <name>renderSettings</name>
            <anchorfile>kuesautils-view3dscene.html</anchorfile>
            <anchor>renderSettings-prop</anchor>
            <arglist>() const const</arglist>
        </member>
        <member kind="function" protection="public" virtualness="non" static="no">
            <type>QUrl</type>
            <name>source</name>
            <anchorfile>kuesautils-view3dscene.html</anchorfile>
            <anchor>source-prop</anchor>
            <arglist>() const const</arglist>
        </member>
        <member kind="function" protection="public" virtualness="non" static="no">
            <type>bool</type>
            <name>showDebugOverlay</name>
            <anchorfile>kuesautils-view3dscene.html</anchorfile>
            <anchor>showDebugOverlay-prop</anchor>
            <arglist>() const const</arglist>
        </member>
        <member kind="function" protection="public" virtualness="non" static="no">
            <type>QSize</type>
            <name>screenSize</name>
            <anchorfile>kuesautils-view3dscene.html</anchorfile>
            <anchor>screenSize-prop</anchor>
            <arglist>() const const</arglist>
        </member>
        <member kind="function" protection="public" virtualness="non" static="no">
            <type>bool</type>
            <name>asynchronous</name>
            <anchorfile>kuesautils-view3dscene.html</anchorfile>
            <anchor>asynchronous-prop</anchor>
            <arglist>() const const</arglist>
        </member>
        <member kind="function" protection="public" virtualness="non" static="no">
            <type>QString</type>
            <name>reflectionPlaneName</name>
            <anchorfile>kuesautils-view3dscene.html</anchorfile>
            <anchor>reflectionPlaneName-prop</anchor>
            <arglist>() const const</arglist>
        </member>
        <member kind="function" protection="public" virtualness="non" static="no">
            <type>const std::vector&lt;Kuesa::AnimationPlayer *&gt; &amp;</type>
            <name>animationPlayers</name>
            <anchorfile>kuesautils-view3dscene.html</anchorfile>
            <anchor>animationPlayers</anchor>
            <arglist>() const const</arglist>
        </member>
        <member kind="function" protection="public" virtualness="non" static="no">
            <type>KuesaUtils::SceneConfiguration *</type>
            <name>activeScene</name>
            <anchorfile>kuesautils-view3dscene.html</anchorfile>
            <anchor>activeScene-prop</anchor>
            <arglist>() const const</arglist>
        </member>
        <member kind="function" protection="public" virtualness="non" static="no">
            <type>bool</type>
            <name>isReady</name>
            <anchorfile>kuesautils-view3dscene.html</anchorfile>
            <anchor>ready-prop</anchor>
            <arglist>() const const</arglist>
        </member>
        <member kind="function" protection="public" virtualness="non" static="no">
            <type>bool</type>
            <name>isLoaded</name>
            <anchorfile>kuesautils-view3dscene.html</anchorfile>
            <anchor>loaded-prop</anchor>
            <arglist>() const const</arglist>
        </member>
        <member kind="function" protection="public" virtualness="non" static="no">
            <type>void</type>
            <name>setShowDebugOverlay</name>
            <anchorfile>kuesautils-view3dscene.html</anchorfile>
            <anchor>showDebugOverlay-prop</anchor>
            <arglist>(bool showDebugOverlay)</arglist>
        </member>
        <member kind="function" protection="public" virtualness="non" static="no">
            <type>void</type>
            <name>setScreenSize</name>
            <anchorfile>kuesautils-view3dscene.html</anchorfile>
            <anchor>screenSize-prop</anchor>
            <arglist>(const QSize &amp;screenSize)</arglist>
        </member>
        <member kind="function" protection="public" virtualness="non" static="no">
            <type>void</type>
            <name>setAsynchronous</name>
            <anchorfile>kuesautils-view3dscene.html</anchorfile>
            <anchor>asynchronous-prop</anchor>
            <arglist>(bool asynchronous)</arglist>
        </member>
        <member kind="function" protection="public" virtualness="non" static="no">
            <type>void</type>
            <name>setReflectionPlaneName</name>
            <anchorfile>kuesautils-view3dscene.html</anchorfile>
            <anchor>reflectionPlaneName-prop</anchor>
            <arglist>(const QString &amp;reflectionPlaneName)</arglist>
        </member>
        <member kind="function" protection="public" virtualness="non" static="no">
            <type>void</type>
            <name>setActiveScene</name>
            <anchorfile>kuesautils-view3dscene.html</anchorfile>
            <anchor>setActiveScene</anchor>
            <arglist>(KuesaUtils::SceneConfiguration *scene)</arglist>
        </member>
        <member kind="function" protection="public" virtualness="non" static="no">
            <type>void</type>
            <name>start</name>
            <anchorfile>kuesautils-view3dscene.html</anchorfile>
            <anchor>start</anchor>
            <arglist>()</arglist>
        </member>
        <member kind="function" protection="public" virtualness="non" static="no">
            <type>void</type>
            <name>restart</name>
            <anchorfile>kuesautils-view3dscene.html</anchorfile>
            <anchor>restart</anchor>
            <arglist>()</arglist>
        </member>
        <member kind="function" protection="public" virtualness="non" static="no">
            <type>void</type>
            <name>stop</name>
            <anchorfile>kuesautils-view3dscene.html</anchorfile>
            <anchor>stop</anchor>
            <arglist>()</arglist>
        </member>
        <member kind="function" protection="public" virtualness="non" static="no">
            <type>void</type>
            <name>gotoNormalizedTime</name>
            <anchorfile>kuesautils-view3dscene.html</anchorfile>
            <anchor>gotoNormalizedTime</anchor>
            <arglist>(float time)</arglist>
        </member>
        <member kind="function" protection="public" virtualness="non" static="no">
            <type>void</type>
            <name>gotoStart</name>
            <anchorfile>kuesautils-view3dscene.html</anchorfile>
            <anchor>gotoStart</anchor>
            <arglist>()</arglist>
        </member>
        <member kind="function" protection="public" virtualness="non" static="no">
            <type>void</type>
            <name>gotoEnd</name>
            <anchorfile>kuesautils-view3dscene.html</anchorfile>
            <anchor>gotoEnd</anchor>
            <arglist>()</arglist>
        </member>
        <member kind="function" protection="public" virtualness="non" static="no">
            <type>void</type>
            <name>sourceChanged</name>
            <anchorfile>kuesautils-view3dscene.html</anchorfile>
            <anchor>source-prop</anchor>
            <arglist>(const QUrl &amp;source)</arglist>
        </member>
        <member kind="function" protection="public" virtualness="non" static="no">
            <type>void</type>
            <name>showDebugOverlayChanged</name>
            <anchorfile>kuesautils-view3dscene.html</anchorfile>
            <anchor>showDebugOverlay-prop</anchor>
            <arglist>(bool showDebugOverlay)</arglist>
        </member>
        <member kind="function" protection="public" virtualness="non" static="no">
            <type>void</type>
            <name>screenSizeChanged</name>
            <anchorfile>kuesautils-view3dscene.html</anchorfile>
            <anchor>screenSize-prop</anchor>
            <arglist>(const QSize &amp;screenSize)</arglist>
        </member>
        <member kind="function" protection="public" virtualness="non" static="no">
            <type>void</type>
            <name>readyChanged</name>
            <anchorfile>kuesautils-view3dscene.html</anchorfile>
            <anchor>ready-prop</anchor>
            <arglist>(bool ready)</arglist>
        </member>
        <member kind="function" protection="public" virtualness="non" static="no">
            <type>void</type>
            <name>loadedChanged</name>
            <anchorfile>kuesautils-view3dscene.html</anchorfile>
            <anchor>loaded-prop</anchor>
            <arglist>(bool loaded)</arglist>
        </member>
        <member kind="function" protection="public" virtualness="non" static="no">
            <type>void</type>
            <name>asynchronousChanged</name>
            <anchorfile>kuesautils-view3dscene.html</anchorfile>
            <anchor>asynchronous-prop</anchor>
            <arglist>(bool asynchronous)</arglist>
        </member>
        <member kind="function" protection="public" virtualness="non" static="no">
            <type>void</type>
            <name>activeSceneChanged</name>
            <anchorfile>kuesautils-view3dscene.html</anchorfile>
            <anchor>activeScene-prop</anchor>
            <arglist>(KuesaUtils::SceneConfiguration *activeScene)</arglist>
        </member>
        <member kind="function" protection="public" virtualness="non" static="no">
            <type>void</type>
            <name>reflectionPlaneNameChanged</name>
            <anchorfile>kuesautils-view3dscene.html</anchorfile>
            <anchor>reflectionPlaneName-prop</anchor>
            <arglist>(const QString &amp;reflectionPlaneName)</arglist>
        </member>
    </compound>
    <compound kind="class">
        <name>KuesaUtils::ViewConfiguration</name>
        <filename>kuesautils-viewconfiguration.html</filename>
        <base>KuesaNode</base>
        <member kind="property" type="QString">
            <name>cameraName</name>
            <anchorfile>kuesautils-viewconfiguration.html</anchorfile>
            <anchor>cameraName-prop</anchor>
            <arglist></arglist>
        </member>
        <member kind="property" type="QStringList">
            <name>layerNames</name>
            <anchorfile>kuesautils-viewconfiguration.html</anchorfile>
            <anchor>layerNames-prop</anchor>
            <arglist></arglist>
        </member>
        <member kind="property" type="QRectF">
            <name>viewportRect</name>
            <anchorfile>kuesautils-viewconfiguration.html</anchorfile>
            <anchor>viewportRect-prop</anchor>
            <arglist></arglist>
        </member>
        <member kind="property" type="bool">
            <name>frustumCulling</name>
            <anchorfile>kuesautils-viewconfiguration.html</anchorfile>
            <anchor>frustumCulling-prop</anchor>
            <arglist></arglist>
        </member>
        <member kind="property" type="bool">
            <name>backToFrontSorting</name>
            <anchorfile>kuesautils-viewconfiguration.html</anchorfile>
            <anchor>backToFrontSorting-prop</anchor>
            <arglist></arglist>
        </member>
        <member kind="property" type="bool">
            <name>zFilling</name>
            <anchorfile>kuesautils-viewconfiguration.html</anchorfile>
            <anchor>zFilling-prop</anchor>
            <arglist></arglist>
        </member>
        <member kind="property" type="bool">
            <name>particlesEnabled</name>
            <anchorfile>kuesautils-viewconfiguration.html</anchorfile>
            <anchor>particlesEnabled-prop</anchor>
            <arglist></arglist>
        </member>
        <member kind="property" type="Kuesa::ToneMappingAndGammaCorrectionEffect::ToneMapping">
            <name>toneMappingAlgorithm</name>
            <anchorfile>kuesautils-viewconfiguration.html</anchorfile>
            <anchor>toneMappingAlgorithm-prop</anchor>
            <arglist></arglist>
        </member>
        <member kind="property" type="bool">
            <name>usesStencilMask</name>
            <anchorfile>kuesautils-viewconfiguration.html</anchorfile>
            <anchor>usesStencilMask-prop</anchor>
            <arglist></arglist>
        </member>
        <member kind="property" type="float">
            <name>exposure</name>
            <anchorfile>kuesautils-viewconfiguration.html</anchorfile>
            <anchor>exposure-prop</anchor>
            <arglist></arglist>
        </member>
        <member kind="property" type="float">
            <name>gamma</name>
            <anchorfile>kuesautils-viewconfiguration.html</anchorfile>
            <anchor>gamma-prop</anchor>
            <arglist></arglist>
        </member>
        <member kind="property" type="QColor">
            <name>clearColor</name>
            <anchorfile>kuesautils-viewconfiguration.html</anchorfile>
            <anchor>clearColor-prop</anchor>
            <arglist></arglist>
        </member>
        <member kind="function" protection="public" virtualness="non" static="no">
            <type>QString</type>
            <name>cameraName</name>
            <anchorfile>kuesautils-viewconfiguration.html</anchorfile>
            <anchor>cameraName-prop</anchor>
            <arglist>() const const</arglist>
        </member>
        <member kind="function" protection="public" virtualness="non" static="no">
            <type>QStringList</type>
            <name>layerNames</name>
            <anchorfile>kuesautils-viewconfiguration.html</anchorfile>
            <anchor>layerNames-prop</anchor>
            <arglist>() const const</arglist>
        </member>
        <member kind="function" protection="public" virtualness="non" static="no">
            <type>QRectF</type>
            <name>viewportRect</name>
            <anchorfile>kuesautils-viewconfiguration.html</anchorfile>
            <anchor>viewportRect-prop</anchor>
            <arglist>() const const</arglist>
        </member>
        <member kind="function" protection="public" virtualness="non" static="no">
            <type>bool</type>
            <name>frustumCulling</name>
            <anchorfile>kuesautils-viewconfiguration.html</anchorfile>
            <anchor>frustumCulling-prop</anchor>
            <arglist>() const const</arglist>
        </member>
        <member kind="function" protection="public" virtualness="non" static="no">
            <type>bool</type>
            <name>skinning</name>
            <anchorfile>kuesautils-viewconfiguration.html</anchorfile>
            <anchor>skinning-prop</anchor>
            <arglist>() const const</arglist>
        </member>
        <member kind="function" protection="public" virtualness="non" static="no">
            <type>bool</type>
            <name>backToFrontSorting</name>
            <anchorfile>kuesautils-viewconfiguration.html</anchorfile>
            <anchor>backToFrontSorting-prop</anchor>
            <arglist>() const const</arglist>
        </member>
        <member kind="function" protection="public" virtualness="non" static="no">
            <type>bool</type>
            <name>zFilling</name>
            <anchorfile>kuesautils-viewconfiguration.html</anchorfile>
            <anchor>zFilling-prop</anchor>
            <arglist>() const const</arglist>
        </member>
        <member kind="function" protection="public" virtualness="non" static="no">
            <type>bool</type>
            <name>particlesEnabled</name>
            <anchorfile>kuesautils-viewconfiguration.html</anchorfile>
            <anchor>particlesEnabled-prop</anchor>
            <arglist>() const const</arglist>
        </member>
        <member kind="function" protection="public" virtualness="non" static="no">
            <type>Kuesa::ToneMappingAndGammaCorrectionEffect::ToneMapping</type>
            <name>toneMappingAlgorithm</name>
            <anchorfile>kuesautils-viewconfiguration.html</anchorfile>
            <anchor>toneMappingAlgorithm-prop</anchor>
            <arglist>() const const</arglist>
        </member>
        <member kind="function" protection="public" virtualness="non" static="no">
            <type>bool</type>
            <name>usesStencilMask</name>
            <anchorfile>kuesautils-viewconfiguration.html</anchorfile>
            <anchor>usesStencilMask-prop</anchor>
            <arglist>() const const</arglist>
        </member>
        <member kind="function" protection="public" virtualness="non" static="no">
            <type>float</type>
            <name>exposure</name>
            <anchorfile>kuesautils-viewconfiguration.html</anchorfile>
            <anchor>exposure-prop</anchor>
            <arglist>() const const</arglist>
        </member>
        <member kind="function" protection="public" virtualness="non" static="no">
            <type>float</type>
            <name>gamma</name>
            <anchorfile>kuesautils-viewconfiguration.html</anchorfile>
            <anchor>gamma-prop</anchor>
            <arglist>() const const</arglist>
        </member>
        <member kind="function" protection="public" virtualness="non" static="no">
            <type>QColor</type>
            <name>clearColor</name>
            <anchorfile>kuesautils-viewconfiguration.html</anchorfile>
            <anchor>clearColor-prop</anchor>
            <arglist>() const const</arglist>
        </member>
        <member kind="function" protection="public" virtualness="non" static="no">
            <type>void</type>
            <name>setCameraName</name>
            <anchorfile>kuesautils-viewconfiguration.html</anchorfile>
            <anchor>cameraName-prop</anchor>
            <arglist>(const QString &amp;cameraName)</arglist>
        </member>
        <member kind="function" protection="public" virtualness="non" static="no">
            <type>void</type>
            <name>setLayerNames</name>
            <anchorfile>kuesautils-viewconfiguration.html</anchorfile>
            <anchor>layerNames-prop</anchor>
            <arglist>(const QStringList &amp;layerNames)</arglist>
        </member>
        <member kind="function" protection="public" virtualness="non" static="no">
            <type>void</type>
            <name>setViewportRect</name>
            <anchorfile>kuesautils-viewconfiguration.html</anchorfile>
            <anchor>viewportRect-prop</anchor>
            <arglist>(const QRectF &amp;viewportRect)</arglist>
        </member>
        <member kind="function" protection="public" virtualness="non" static="no">
            <type>void</type>
            <name>setFrustumCulling</name>
            <anchorfile>kuesautils-viewconfiguration.html</anchorfile>
            <anchor>frustumCulling-prop</anchor>
            <arglist>(bool frustumCulling)</arglist>
        </member>
        <member kind="function" protection="public" virtualness="non" static="no">
            <type>void</type>
            <name>setSkinning</name>
            <anchorfile>kuesautils-viewconfiguration.html</anchorfile>
            <anchor>skinning-prop</anchor>
            <arglist>(bool skinning)</arglist>
        </member>
        <member kind="function" protection="public" virtualness="non" static="no">
            <type>void</type>
            <name>setBackToFrontSorting</name>
            <anchorfile>kuesautils-viewconfiguration.html</anchorfile>
            <anchor>backToFrontSorting-prop</anchor>
            <arglist>(bool backToFrontSorting)</arglist>
        </member>
        <member kind="function" protection="public" virtualness="non" static="no">
            <type>void</type>
            <name>setZFilling</name>
            <anchorfile>kuesautils-viewconfiguration.html</anchorfile>
            <anchor>zFilling-prop</anchor>
            <arglist>(bool zFilling)</arglist>
        </member>
        <member kind="function" protection="public" virtualness="non" static="no">
            <type>void</type>
            <name>setParticlesEnabled</name>
            <anchorfile>kuesautils-viewconfiguration.html</anchorfile>
            <anchor>particlesEnabled-prop</anchor>
            <arglist>(bool particlesEnabled)</arglist>
        </member>
        <member kind="function" protection="public" virtualness="non" static="no">
            <type>void</type>
            <name>setToneMappingAlgorithm</name>
            <anchorfile>kuesautils-viewconfiguration.html</anchorfile>
            <anchor>toneMappingAlgorithm-prop</anchor>
            <arglist>(Kuesa::ToneMappingAndGammaCorrectionEffect::ToneMapping algorithm)</arglist>
        </member>
        <member kind="function" protection="public" virtualness="non" static="no">
            <type>void</type>
            <name>setUsesStencilMask</name>
            <anchorfile>kuesautils-viewconfiguration.html</anchorfile>
            <anchor>usesStencilMask-prop</anchor>
            <arglist>(bool usesStencilMask)</arglist>
        </member>
        <member kind="function" protection="public" virtualness="non" static="no">
            <type>void</type>
            <name>setExposure</name>
            <anchorfile>kuesautils-viewconfiguration.html</anchorfile>
            <anchor>exposure-prop</anchor>
            <arglist>(float exposure)</arglist>
        </member>
        <member kind="function" protection="public" virtualness="non" static="no">
            <type>void</type>
            <name>setGamma</name>
            <anchorfile>kuesautils-viewconfiguration.html</anchorfile>
            <anchor>gamma-prop</anchor>
            <arglist>(float gamma)</arglist>
        </member>
        <member kind="function" protection="public" virtualness="non" static="no">
            <type>void</type>
            <name>setClearColor</name>
            <anchorfile>kuesautils-viewconfiguration.html</anchorfile>
            <anchor>clearColor-prop</anchor>
            <arglist>(QColor clearColor)</arglist>
        </member>
        <member kind="function" protection="public" virtualness="non" static="no">
            <type>void</type>
            <name>cameraNameChanged</name>
            <anchorfile>kuesautils-viewconfiguration.html</anchorfile>
            <anchor>cameraName-prop</anchor>
            <arglist>(const QString &amp;cameraName)</arglist>
        </member>
        <member kind="function" protection="public" virtualness="non" static="no">
            <type>void</type>
            <name>layerNamesChanged</name>
            <anchorfile>kuesautils-viewconfiguration.html</anchorfile>
            <anchor>layerNames-prop</anchor>
            <arglist>(const QStringList &amp;layerNames)</arglist>
        </member>
        <member kind="function" protection="public" virtualness="non" static="no">
            <type>void</type>
            <name>viewportRectChanged</name>
            <anchorfile>kuesautils-viewconfiguration.html</anchorfile>
            <anchor>viewportRect-prop</anchor>
            <arglist>(QRectF viewportRect)</arglist>
        </member>
        <member kind="function" protection="public" virtualness="non" static="no">
            <type>void</type>
            <name>frustumCullingChanged</name>
            <anchorfile>kuesautils-viewconfiguration.html</anchorfile>
            <anchor>frustumCulling-prop</anchor>
            <arglist>(bool frustumCulling)</arglist>
        </member>
        <member kind="function" protection="public" virtualness="non" static="no">
            <type>void</type>
            <name>skinningChanged</name>
            <anchorfile>kuesautils-viewconfiguration.html</anchorfile>
            <anchor>skinning-prop</anchor>
            <arglist>(bool skinning)</arglist>
        </member>
        <member kind="function" protection="public" virtualness="non" static="no">
            <type>void</type>
            <name>backToFrontSortingChanged</name>
            <anchorfile>kuesautils-viewconfiguration.html</anchorfile>
            <anchor>backToFrontSorting-prop</anchor>
            <arglist>(bool backToFrontSorting)</arglist>
        </member>
        <member kind="function" protection="public" virtualness="non" static="no">
            <type>void</type>
            <name>zFillingChanged</name>
            <anchorfile>kuesautils-viewconfiguration.html</anchorfile>
            <anchor>zFilling-prop</anchor>
            <arglist>(bool zFillingChanged)</arglist>
        </member>
        <member kind="function" protection="public" virtualness="non" static="no">
            <type>void</type>
            <name>particlesEnabledChanged</name>
            <anchorfile>kuesautils-viewconfiguration.html</anchorfile>
            <anchor>particlesEnabled-prop</anchor>
            <arglist>(bool particlesEnabled)</arglist>
        </member>
        <member kind="function" protection="public" virtualness="non" static="no">
            <type>void</type>
            <name>toneMappingAlgorithmChanged</name>
            <anchorfile>kuesautils-viewconfiguration.html</anchorfile>
            <anchor>toneMappingAlgorithm-prop</anchor>
            <arglist>(Kuesa::ToneMappingAndGammaCorrectionEffect::ToneMapping algorithm)</arglist>
        </member>
        <member kind="function" protection="public" virtualness="non" static="no">
            <type>void</type>
            <name>usesStencilMaskChanged</name>
            <anchorfile>kuesautils-viewconfiguration.html</anchorfile>
            <anchor>usesStencilMask-prop</anchor>
            <arglist>(bool usesStencilMask)</arglist>
        </member>
        <member kind="function" protection="public" virtualness="non" static="no">
            <type>void</type>
            <name>exposureChanged</name>
            <anchorfile>kuesautils-viewconfiguration.html</anchorfile>
            <anchor>exposure-prop</anchor>
            <arglist>(float exposure)</arglist>
        </member>
        <member kind="function" protection="public" virtualness="non" static="no">
            <type>void</type>
            <name>gammaChanged</name>
            <anchorfile>kuesautils-viewconfiguration.html</anchorfile>
            <anchor>gamma-prop</anchor>
            <arglist>(float gamma)</arglist>
        </member>
        <member kind="function" protection="public" virtualness="non" static="no">
            <type>void</type>
            <name>clearColorChanged</name>
            <anchorfile>kuesautils-viewconfiguration.html</anchorfile>
            <anchor>clearColor-prop</anchor>
            <arglist>(QColor clearColor)</arglist>
        </member>
    </compound>
    <compound kind="class">
        <name>KuesaUtils::Window</name>
        <filename>kuesautils-window.html</filename>
    </compound>
    <compound kind="class">
        <name>LayerAsset</name>
        <filename>qml-layerasset.html</filename>
    </compound>
    <compound kind="class">
        <name>MaterialAsset</name>
        <filename>qml-materialasset.html</filename>
    </compound>
    <compound kind="class">
        <name>MeshInstantiator</name>
        <filename>qml-meshinstantiator.html</filename>
    </compound>
    <compound kind="class">
        <name>MetallicRoughnessEffect</name>
        <filename>qml-metallicroughnesseffect.html</filename>
    </compound>
    <compound kind="class">
        <name>MetallicRoughnessMaterial</name>
        <filename>qml-metallicroughnessmaterial.html</filename>
    </compound>
    <compound kind="class">
        <name>MetallicRoughnessProperties</name>
        <filename>qml-metallicroughnessproperties.html</filename>
    </compound>
    <compound kind="class">
        <name>MorphController</name>
        <filename>qml-morphcontroller.html</filename>
    </compound>
    <compound kind="class">
        <name>OpacityMask</name>
        <filename>qml-opacitymask.html</filename>
    </compound>
    <compound kind="class">
        <name>Particles</name>
        <filename>qml-particles.html</filename>
    </compound>
    <compound kind="class">
        <name>Placeholder</name>
        <filename>qml-placeholder.html</filename>
    </compound>
    <compound kind="class">
        <name>PlaceholderTracker</name>
        <filename>qml-placeholdertracker.html</filename>
    </compound>
    <compound kind="class">
        <name>PointLight</name>
        <filename>qml-pointlight.html</filename>
    </compound>
    <compound kind="class">
        <name>QuickSceneMaterial</name>
        <filename>qml-quickscenematerial.html</filename>
    </compound>
    <compound kind="class">
        <name>ReflectionPlane</name>
        <filename>qml-reflectionplane.html</filename>
    </compound>
    <compound kind="class">
        <name>SceneConfiguration</name>
        <filename>qml-sceneconfiguration.html</filename>
    </compound>
    <compound kind="class">
        <name>SceneEntity</name>
        <filename>qml-sceneentity.html</filename>
        <member kind="function" protection="public" virtualness="non" static="no">
            <type></type>
            <name>loadingDone</name>
            <anchorfile>qml-sceneentity.html</anchorfile>
            <anchor>loadingDone-signal</anchor>
            <arglist>()</arglist>
        </member>
    </compound>
    <compound kind="class">
        <name>ShadowCastingLight</name>
        <filename>qml-shadowcastinglight.html</filename>
    </compound>
    <compound kind="class">
        <name>Skybox</name>
        <filename>qml-skybox.html</filename>
    </compound>
    <compound kind="class">
        <name>SpotLight</name>
        <filename>qml-spotlight.html</filename>
    </compound>
    <compound kind="class">
        <name>SteppedAnimationPlayer</name>
        <filename>qml-steppedanimationplayer.html</filename>
    </compound>
    <compound kind="class">
        <name>TextureTransform</name>
        <filename>qml-texturetransform.html</filename>
    </compound>
    <compound kind="class">
        <name>ThresholdEffect</name>
        <filename>qml-thresholdeffect.html</filename>
    </compound>
    <compound kind="class">
        <name>ToneMappingAndGammaCorrectionEffect</name>
        <filename>qml-tonemappingandgammacorrectioneffect.html</filename>
    </compound>
    <compound kind="class">
        <name>TransformTracker</name>
        <filename>qml-transformtracker.html</filename>
    </compound>
    <compound kind="class">
        <name>UnlitEffect</name>
        <filename>qml-unliteffect.html</filename>
    </compound>
    <compound kind="class">
        <name>UnlitMaterial</name>
        <filename>qml-unlitmaterial.html</filename>
    </compound>
    <compound kind="class">
        <name>UnlitProperties</name>
        <filename>qml-unlitproperties.html</filename>
    </compound>
    <compound kind="class">
        <name>View</name>
        <filename>qml-view.html</filename>
    </compound>
    <compound kind="class">
        <name>View3D</name>
        <filename>qml-view3d.html</filename>
    </compound>
    <compound kind="class">
        <name>View3DScene</name>
        <filename>qml-view3dscene.html</filename>
    </compound>
    <compound kind="class">
        <name>ViewConfiguration</name>
        <filename>qml-viewconfiguration.html</filename>
    </compound>
</tagfile>
