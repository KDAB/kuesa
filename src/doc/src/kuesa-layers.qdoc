/*
    kuesa-layers.qdoc

    This file is part of Kuesa.

    Copyright (C) 2018-2020 Klar√§lvdalens Datakonsult AB, a KDAB Group company, info@kdab.com
    Author: Paul Lemire <paul.lemire@kdab.com>

    Licensees holding valid proprietary KDAB Kuesa licenses may use this file in
    accordance with the Kuesa Enterprise License Agreement provided with the Software in the
    LICENSE.KUESA.ENTERPRISE file.

    Contact info@kdab.com if any conditions of this licensing are not clear to you.

    This program is free software: you can redistribute it and/or modify
    it under the terms of the GNU Affero General Public License as
    published by the Free Software Foundation, either version 3 of the
    License, or (at your option) any later version.

    This program is distributed in the hope that it will be useful,
    but WITHOUT ANY WARRANTY; without even the implied warranty of
    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
    GNU Affero General Public License for more details.

    You should have received a copy of the GNU Affero General Public License
    along with this program.  If not, see <https://www.gnu.org/licenses/>.
*/

/*!
    \page kuesa-layers.html
    \title Kuesa Layers

    \brief Kuesa is running on top of Qt 3D which allows it to fully benefit
    from all of its features. Qt 3D offers a way to filter part of the scene at
    render time using instances of the Qt3DRender::QLayer class.

    Kuesa is running on top of Qt 3D which allows it to fully benefit from all
    of its features. Qt 3D offers a way to filter part of the scene at render
    time using instances of the Qt3DRender::QLayer class. Kuesa incorporates
    support for such layers at several differnent levels.

    \section1 Creating and Exporting Layers

    \section2 Using Blender and the gltf Exporter

    In Blender, since version 2.80, nodes and geometries are now distributed
    across collections. If you export using the glTF exporter and the Kuesa
    Layer extension is enabled, each Collection will result in a distinct
    layer.

    \section1 Using layers to filter content

    In some cases it might be useful to disable part of the scene or making
    sure some elements are being draw prior to some others. That's were layers
    will come in handy.

    The [ForwardRenderer] framegraph allows to specify a set of layers. When
    specified, each layer added will ensure that all elements referencing said
    layer are drawn before elements referencing the next layer in the list.

    If no layers are specified, everything will be drawn. As soon as you start
    specifying layers however, only the elements that match one or more layers
    will be rendered.

    Keep in mind that the more layers you have and request to be filtered, the
    more work Qt 3D and Kuesa will be doing.
*/
