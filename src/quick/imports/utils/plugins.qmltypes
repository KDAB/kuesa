import QtQuick.tooling 1.2

// This file describes the plugin-supplied types contained in the library.
// It is used for QML tooling purposes only.
//
// This file was auto-generated by:
// 'qmlplugindump -nonrelocatable Kuesa.Utils 1.3 -output plugins.qmltypes'

Module {
    dependencies: [
        "Kuesa 1.3",
        "Qt3D.Animation 2.12",
        "Qt3D.Core 2.15",
        "Qt3D.Extras 2.15",
        "Qt3D.Input 2.12",
        "Qt3D.Logic 2.0",
        "Qt3D.Render 2.15",
        "QtQml 2.15",
        "QtQuick 2.15",
        "QtQuick.Scene2D 2.12",
        "QtQuick.Scene3D 2.15"
    ]
    Component {
        name: "KuesaUtils::BoundingVolumeRenderer"
        prototype: "Qt3DCore::QEntity"
        exports: ["Kuesa.Utils/BoundingVolumeRenderer 1.0"]
        exportMetaObjectRevisions: [0]
        Method {
            name: "select"
            Parameter { name: "entity"; type: "Qt3DCore::QEntity"; isPointer: true }
        }
        Method {
            name: "select"
            Parameter { name: "entity"; type: "Qt3DCore::QEntity"; isPointer: true }
            Parameter { name: "mode"; type: "SelectionModes" }
        }
        Method {
            name: "deselect"
            Parameter { name: "entity"; type: "Qt3DCore::QEntity"; isPointer: true }
        }
        Method { name: "clearSelection" }
    }
    Component {
        name: "KuesaUtils::OrbitCameraController"
        prototype: "Qt3DCore::QEntity"
        exports: ["Kuesa.Utils/OrbitCameraController 1.0"]
        exportMetaObjectRevisions: [0]
        Property { name: "camera"; type: "Qt3DRender::QCamera"; isPointer: true }
        Property { name: "panSpeed"; type: "float" }
        Property { name: "zoomSpeed"; type: "float" }
        Property { name: "rotationSpeed"; type: "float" }
        Property { name: "zoomCameraLimit"; type: "float" }
        Property { name: "windowSize"; type: "QSize" }
    }
    Component {
        name: "KuesaUtils::SceneConfiguration"
        defaultProperty: "data"
        prototype: "Kuesa::KuesaNode"
        exports: ["Kuesa.Utils/SceneConfiguration 1.0"]
        exportMetaObjectRevisions: [100]
        Property { name: "source"; type: "QUrl" }
        Signal {
            name: "sourceChanged"
            Parameter { name: "source"; type: "QUrl" }
        }
        Signal {
            name: "viewConfigurationAdded"
            Parameter { name: "viewConfiguration"; type: "KuesaUtils::ViewConfiguration"; isPointer: true }
        }
        Signal {
            name: "viewConfigurationRemoved"
            Parameter { name: "viewConfiguration"; type: "KuesaUtils::ViewConfiguration"; isPointer: true }
        }
        Signal {
            name: "animationPlayerAdded"
            Parameter { name: "player"; type: "Kuesa::AnimationPlayer"; isPointer: true }
        }
        Signal {
            name: "animationPlayerRemoved"
            Parameter { name: "player"; type: "Kuesa::AnimationPlayer"; isPointer: true }
        }
        Signal { name: "loadingDone" }
        Signal { name: "unloadingDone" }
        Method {
            name: "setSource"
            Parameter { name: "source"; type: "QUrl" }
        }
        Property {
            name: "animations"
            revision: 100
            type: "Kuesa::AnimationPlayer"
            isList: true
            isReadonly: true
        }
        Property {
            name: "views"
            revision: 100
            type: "KuesaUtils::ViewConfiguration"
            isList: true
            isReadonly: true
        }
    }
    Component {
        name: "KuesaUtils::View3DScene"
        prototype: "Kuesa::SceneEntity"
        exports: ["Kuesa.Utils/View3DScene 1.0"]
        exportMetaObjectRevisions: [0]
        Property { name: "importer"; type: "Kuesa::GLTF2Importer"; isReadonly: true; isPointer: true }
        Property { name: "frameGraph"; type: "Kuesa::ForwardRenderer"; isReadonly: true; isPointer: true }
        Property { name: "source"; type: "QUrl"; isReadonly: true }
        Property { name: "showDebugOverlay"; type: "bool" }
        Property { name: "screenSize"; type: "QSize" }
        Property { name: "ready"; type: "bool"; isReadonly: true }
        Property { name: "loaded"; type: "bool"; isReadonly: true }
        Property { name: "asynchronous"; type: "bool" }
        Property { name: "activeScene"; type: "KuesaUtils::SceneConfiguration"; isPointer: true }
        Property { name: "reflectionPlaneName"; type: "string" }
        Signal {
            name: "sourceChanged"
            Parameter { name: "source"; type: "QUrl" }
        }
        Signal {
            name: "cameraNameChanged"
            Parameter { name: "cameraName"; type: "string" }
        }
        Signal {
            name: "showDebugOverlayChanged"
            Parameter { name: "showDebugOverlay"; type: "bool" }
        }
        Signal {
            name: "screenSizeChanged"
            Parameter { name: "screenSize"; type: "QSize" }
        }
        Signal {
            name: "readyChanged"
            Parameter { name: "ready"; type: "bool" }
        }
        Signal {
            name: "loadedChanged"
            Parameter { name: "loaded"; type: "bool" }
        }
        Signal {
            name: "asynchronousChanged"
            Parameter { name: "asynchronous"; type: "bool" }
        }
        Signal {
            name: "activeSceneChanged"
            Parameter { name: "activeScene"; type: "SceneConfiguration"; isPointer: true }
        }
        Signal {
            name: "reflectionPlaneNameChanged"
            Parameter { name: "reflectionPlaneName"; type: "string" }
        }
        Method {
            name: "setShowDebugOverlay"
            Parameter { name: "showDebugOverlay"; type: "bool" }
        }
        Method {
            name: "setScreenSize"
            Parameter { name: "screenSize"; type: "QSize" }
        }
        Method {
            name: "setAsynchronous"
            Parameter { name: "asynchronous"; type: "bool" }
        }
        Method {
            name: "setReflectionPlaneName"
            Parameter { name: "reflectionPlaneName"; type: "string" }
        }
        Method {
            name: "setActiveScene"
            Parameter { name: "scene"; type: "SceneConfiguration"; isPointer: true }
        }
        Method {
            name: "adoptNode"
            Parameter { name: "object"; type: "QObject"; isPointer: true }
        }
        Method { name: "start" }
        Method { name: "restart" }
        Method { name: "stop" }
        Method {
            name: "gotoNormalizedTime"
            Parameter { name: "time"; type: "float" }
        }
        Method { name: "gotoStart" }
        Method { name: "gotoEnd" }
    }
    Component {
        name: "KuesaUtils::ViewConfiguration"
        defaultProperty: "data"
        prototype: "Kuesa::KuesaNode"
        exports: ["Kuesa.Utils/ViewConfiguration 1.0"]
        exportMetaObjectRevisions: [100]
        Property { name: "cameraName"; type: "string" }
        Property { name: "layerNames"; type: "QStringList" }
        Property { name: "viewportRect"; type: "QRectF" }
        Property { name: "frustumCulling"; type: "bool" }
        Property { name: "skinning"; type: "bool" }
        Property { name: "backToFrontSorting"; type: "bool" }
        Property { name: "zFilling"; type: "bool" }
        Property { name: "particlesEnabled"; type: "bool" }
        Property {
            name: "toneMappingAlgorithm"
            type: "Kuesa::ToneMappingAndGammaCorrectionEffect::ToneMapping"
        }
        Property { name: "usesStencilMask"; type: "bool" }
        Property { name: "exposure"; type: "float" }
        Property { name: "gamma"; type: "float" }
        Property { name: "clearColor"; type: "QColor" }
        Signal {
            name: "cameraNameChanged"
            Parameter { name: "cameraName"; type: "string" }
        }
        Signal {
            name: "layerNamesChanged"
            Parameter { name: "layerNames"; type: "QStringList" }
        }
        Signal {
            name: "viewportRectChanged"
            Parameter { name: "viewportRect"; type: "QRectF" }
        }
        Signal {
            name: "frustumCullingChanged"
            Parameter { name: "frustumCulling"; type: "bool" }
        }
        Signal {
            name: "skinningChanged"
            Parameter { name: "skinning"; type: "bool" }
        }
        Signal {
            name: "backToFrontSortingChanged"
            Parameter { name: "backToFrontSorting"; type: "bool" }
        }
        Signal {
            name: "zFillingChanged"
            Parameter { name: "zFillingChanged"; type: "bool" }
        }
        Signal {
            name: "particlesEnabledChanged"
            Parameter { name: "particlesEnabled"; type: "bool" }
        }
        Signal {
            name: "toneMappingAlgorithmChanged"
            Parameter {
                name: "algorithm"
                type: "Kuesa::ToneMappingAndGammaCorrectionEffect::ToneMapping"
            }
        }
        Signal {
            name: "usesStencilMaskChanged"
            Parameter { name: "usesStencilMask"; type: "bool" }
        }
        Signal {
            name: "exposureChanged"
            Parameter { name: "exposure"; type: "float" }
        }
        Signal {
            name: "gammaChanged"
            Parameter { name: "gamma"; type: "float" }
        }
        Signal {
            name: "clearColorChanged"
            Parameter { name: "clearColor"; type: "QColor" }
        }
        Signal {
            name: "transformTrackerAdded"
            Parameter { name: "tracker"; type: "Kuesa::TransformTracker"; isPointer: true }
        }
        Signal {
            name: "transformTrackerRemoved"
            Parameter { name: "tracker"; type: "Kuesa::TransformTracker"; isPointer: true }
        }
        Signal {
            name: "placeholderTrackerAdded"
            Parameter { name: "tracker"; type: "Kuesa::PlaceholderTracker"; isPointer: true }
        }
        Signal {
            name: "placeholderTrackerRemoved"
            Parameter { name: "tracker"; type: "Kuesa::PlaceholderTracker"; isPointer: true }
        }
        Signal { name: "loadingDone" }
        Signal { name: "unloadingDone" }
        Method {
            name: "setCameraName"
            Parameter { name: "cameraName"; type: "string" }
        }
        Method {
            name: "setLayerNames"
            Parameter { name: "layerNames"; type: "QStringList" }
        }
        Method {
            name: "setViewportRect"
            Parameter { name: "viewportRect"; type: "QRectF" }
        }
        Method {
            name: "setFrustumCulling"
            Parameter { name: "frustumCulling"; type: "bool" }
        }
        Method {
            name: "setSkinning"
            Parameter { name: "skinning"; type: "bool" }
        }
        Method {
            name: "setBackToFrontSorting"
            Parameter { name: "backToFrontSorting"; type: "bool" }
        }
        Method {
            name: "setZFilling"
            Parameter { name: "zFilling"; type: "bool" }
        }
        Method {
            name: "setParticlesEnabled"
            Parameter { name: "particlesEnabled"; type: "bool" }
        }
        Method {
            name: "setToneMappingAlgorithm"
            Parameter {
                name: "algorithm"
                type: "Kuesa::ToneMappingAndGammaCorrectionEffect::ToneMapping"
            }
        }
        Method {
            name: "setUsesStencilMask"
            Parameter { name: "usesStencilMask"; type: "bool" }
        }
        Method {
            name: "setExposure"
            Parameter { name: "exposure"; type: "float" }
        }
        Method {
            name: "setGamma"
            Parameter { name: "gamma"; type: "float" }
        }
        Method {
            name: "setClearColor"
            Parameter { name: "clearColor"; type: "QColor" }
        }
        Property {
            name: "transformTrackers"
            revision: 100
            type: "Kuesa::TransformTracker"
            isList: true
            isReadonly: true
        }
        Property {
            name: "placeholderTrackers"
            revision: 100
            type: "Kuesa::PlaceholderTracker"
            isList: true
            isReadonly: true
        }
    }
}
