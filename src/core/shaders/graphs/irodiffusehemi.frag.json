{
 "nodes": [
  {
   "layers": [],
   "parameters": {
    "operation": "+",
    "firstType": {
     "type": "QShaderLanguage::VariableType",
     "value": "QShaderLanguage::Vec3"
    },
    "secondType": {
     "type": "QShaderLanguage::VariableType",
     "value": "QShaderLanguage::Vec3"
    },
    "outputType": {
     "type": "QShaderLanguage::VariableType",
     "value": "QShaderLanguage::Vec3"
    }
   },
   "type": "BINARY_MATH_OPERATION",
   "uuid": "{1abd841a-0817-41f5-b99b-faf78dbe680b}"
  },
  {
   "layers": [],
   "parameters": {
    "operation": "*",
    "firstType": {
     "type": "QShaderLanguage::VariableType",
     "value": "QShaderLanguage::Vec3"
    },
    "secondType": {
     "type": "QShaderLanguage::VariableType",
     "value": "QShaderLanguage::Float"
    },
    "outputType": {
     "type": "QShaderLanguage::VariableType",
     "value": "QShaderLanguage::Vec3"
    }
   },
   "type": "BINARY_MATH_OPERATION",
   "uuid": "{0f91cf3b-eb4e-4aee-870d-21791737150d}"
  },
  {
   "layers": [],
   "parameters": {
    "type": {
     "type": "QShaderLanguage::VariableType",
     "value": "QShaderLanguage::Vec3"
    }
   },
   "type": "MIX",
   "uuid": "{9cad0eaa-3400-49ef-985c-72c5c1668592}"
  },
  {
   "layers": [],
   "parameters": {
    "operation": "*",
    "firstType": {
     "type": "QShaderLanguage::VariableType",
     "value": "QShaderLanguage::Vec3"
    },
    "secondType": {
     "type": "QShaderLanguage::VariableType",
     "value": "QShaderLanguage::Vec3"
    },
    "outputType": {
     "type": "QShaderLanguage::VariableType",
     "value": "QShaderLanguage::Vec3"
    }
   },
   "type": "BINARY_MATH_OPERATION",
   "uuid": "{b55b4d12-f0c3-4c1e-91f8-167e3d92c749}"
  },
  {
   "layers": [],
   "parameters": {
    "operation": "*",
    "firstType": {
     "type": "QShaderLanguage::VariableType",
     "value": "QShaderLanguage::Float"
    },
    "secondType": {
     "type": "QShaderLanguage::VariableType",
     "value": "QShaderLanguage::Vec3"
    },
    "outputType": {
     "type": "QShaderLanguage::VariableType",
     "value": "QShaderLanguage::Vec3"
    }
   },
   "type": "BINARY_MATH_OPERATION",
   "uuid": "{23823057-05c6-4012-9ccb-65945f359496}"
  },
  {
   "layers": [],
   "parameters": {
    "operation": "+",
    "firstType": {
     "type": "QShaderLanguage::VariableType",
     "value": "QShaderLanguage::Vec3"
    },
    "secondType": {
     "type": "QShaderLanguage::VariableType",
     "value": "QShaderLanguage::Vec3"
    },
    "outputType": {
     "type": "QShaderLanguage::VariableType",
     "value": "QShaderLanguage::Vec3"
    }
   },
   "type": "BINARY_MATH_OPERATION",
   "uuid": "{7bdd8d53-a13c-4f5e-87e3-93e53fd6b5a2}"
  },
  {
   "layers": [],
   "parameters": {
    "operation": "*",
    "firstType": {
     "type": "QShaderLanguage::VariableType",
     "value": "QShaderLanguage::Vec3"
    },
    "secondType": {
     "type": "QShaderLanguage::VariableType",
     "value": "QShaderLanguage::Vec3"
    },
    "outputType": {
     "type": "QShaderLanguage::VariableType",
     "value": "QShaderLanguage::Vec3"
    }
   },
   "type": "BINARY_MATH_OPERATION",
   "uuid": "{512f3bd6-547f-46c9-9fef-1a0c51cdfe9a}"
  },
  {
   "layers": [],
   "parameters": {
    "operation": "normalize",
    "firstType": {
     "type": "QShaderLanguage::VariableType",
     "value": "QShaderLanguage::Vec3"
    },
    "secondType": {
     "type": "QShaderLanguage::VariableType",
     "value": "QShaderLanguage::Float"
    },
    "outputType": {
     "type": "QShaderLanguage::VariableType",
     "value": "QShaderLanguage::Vec3"
    }
   },
   "type": "UNARY_MATH_FUNCTION",
   "uuid": "{6a43b9ec-e999-45ae-ab1a-59ccce71c1b7}"
  },
  {
   "layers": [],
   "parameters": {
    "operation": "+",
    "firstType": {
     "type": "QShaderLanguage::VariableType",
     "value": "QShaderLanguage::Vec3"
    },
    "secondType": {
     "type": "QShaderLanguage::VariableType",
     "value": "QShaderLanguage::Vec3"
    },
    "outputType": {
     "type": "QShaderLanguage::VariableType",
     "value": "QShaderLanguage::Vec3"
    }
   },
   "type": "BINARY_MATH_OPERATION",
   "uuid": "{9428942c-d423-4f46-b8eb-8a2646c39dc5}"
  },
  {
   "layers": [],
   "parameters": {
    "operation": "*",
    "firstType": {
     "type": "QShaderLanguage::VariableType",
     "value": "QShaderLanguage::Vec3"
    },
    "secondType": {
     "type": "QShaderLanguage::VariableType",
     "value": "QShaderLanguage::Vec3"
    },
    "outputType": {
     "type": "QShaderLanguage::VariableType",
     "value": "QShaderLanguage::Vec3"
    }
   },
   "type": "BINARY_MATH_OPERATION",
   "uuid": "{b2e90a5d-f40e-4848-ab21-3ce3712651d9}"
  },
  {
   "layers": [],
   "parameters": {
    "operation": "*",
    "firstType": {
     "type": "QShaderLanguage::VariableType",
     "value": "QShaderLanguage::Vec3"
    },
    "secondType": {
     "type": "QShaderLanguage::VariableType",
     "value": "QShaderLanguage::Vec3"
    },
    "outputType": {
     "type": "QShaderLanguage::VariableType",
     "value": "QShaderLanguage::Vec3"
    }
   },
   "type": "BINARY_MATH_OPERATION",
   "uuid": "{e3f01b40-e0f3-4565-8a8d-b5bef8367b54}"
  },
  {
   "layers": [],
   "parameters": {},
   "type": "VECT_TRANSFORM",
   "uuid": "{bf5c28b1-e63b-4a9b-ba23-b8dde8d527ce}"
  },
  {
   "layers": [],
   "parameters": {},
   "type": "NEW_GEOMETRY",
   "uuid": "{17a59c45-3a4e-4ee7-9a99-6a2382168778}"
  },
  {
   "layers": [],
   "parameters": {
    "operation": "*",
    "firstType": {
     "type": "QShaderLanguage::VariableType",
     "value": "QShaderLanguage::Vec3"
    },
    "secondType": {
     "type": "QShaderLanguage::VariableType",
     "value": "QShaderLanguage::Vec3"
    },
    "outputType": {
     "type": "QShaderLanguage::VariableType",
     "value": "QShaderLanguage::Vec3"
    }
   },
   "type": "BINARY_MATH_OPERATION",
   "uuid": "{2a04779f-b4de-42e0-a233-c3fc9b7f13d8}"
  },
  {
   "layers": [],
   "parameters": {
    "operation": "*",
    "firstType": {
     "type": "QShaderLanguage::VariableType",
     "value": "QShaderLanguage::Vec3"
    },
    "secondType": {
     "type": "QShaderLanguage::VariableType",
     "value": "QShaderLanguage::Float"
    },
    "outputType": {
     "type": "QShaderLanguage::VariableType",
     "value": "QShaderLanguage::Vec3"
    }
   },
   "type": "BINARY_MATH_OPERATION",
   "uuid": "{40f2892e-416c-4081-92c6-7dac2181b3d4}"
  },
  {
   "layers": [],
   "parameters": {
    "operation": "*",
    "firstType": {
     "type": "QShaderLanguage::VariableType",
     "value": "QShaderLanguage::Vec3"
    },
    "secondType": {
     "type": "QShaderLanguage::VariableType",
     "value": "QShaderLanguage::Vec3"
    },
    "outputType": {
     "type": "QShaderLanguage::VariableType",
     "value": "QShaderLanguage::Vec3"
    }
   },
   "type": "BINARY_MATH_OPERATION",
   "uuid": "{accfed58-cb91-4c50-949a-ae939fc61116}"
  },
  {
   "layers": [],
   "parameters": {
    "defaultColor": "1.0, 1.0, 1.0, 1.0",
    "name": "reflectionMap",
    "condition": "usesReflectionMap",
    "linearizer": ""
   },
   "type": "TEX_IMAGE",
   "uuid": "{8d7a947c-5c45-4e56-b0be-4107d41be94f}"
  },
  {
   "layers": [],
   "parameters": {
    "defaultColor": "1.0, 1.0, 1.0, 1.0",
    "name": "diffuseMap",
    "condition": "usesDiffuseMap",
    "linearizer": ""
   },
   "type": "TEX_IMAGE",
   "uuid": "{89a076f6-7870-46f9-82de-e936e7fa1470}"
  },
  {
   "layers": [],
   "parameters": {
    "clamp": {
     "type": "QShaderLanguage::Bool",
     "value": "false"
    },
    "operation": "-",
    "firstType": {
     "type": "QShaderLanguage::VariableType",
     "value": "QShaderLanguage::Float"
    },
    "secondType": {
     "type": "QShaderLanguage::VariableType",
     "value": "QShaderLanguage::Float"
    },
    "outputType": {
     "type": "QShaderLanguage::VariableType",
     "value": "QShaderLanguage::Float"
    }
   },
   "type": "BINARY_MATH_OPERATION",
   "uuid": "{71615a9d-df61-41e2-ba11-243a239a32cd}"
  },
  {
   "layers": [],
   "parameters": {},
   "type": "SEPXYZ",
   "uuid": "{92f0bd78-2761-49cb-a072-6d15d51c7981}"
  },
  {
   "layers": [],
   "parameters": {
    "clamp": {
     "type": "QShaderLanguage::Bool",
     "value": "false"
    },
    "operation": "*",
    "firstType": {
     "type": "QShaderLanguage::VariableType",
     "value": "QShaderLanguage::Float"
    },
    "secondType": {
     "type": "QShaderLanguage::VariableType",
     "value": "QShaderLanguage::Float"
    },
    "outputType": {
     "type": "QShaderLanguage::VariableType",
     "value": "QShaderLanguage::Float"
    }
   },
   "type": "BINARY_MATH_OPERATION",
   "uuid": "{6128e5a7-cfee-436d-a380-fcb9dd51107c}"
  },
  {
   "layers": [],
   "parameters": {},
   "type": "TEX_COORD",
   "uuid": "{d16d5aa8-3a70-4e99-bb39-691a7216e34f}"
  },
  {
   "layers": [],
   "parameters": {
    "type": {
     "type": "QShaderLanguage::VariableType",
     "value": "QShaderLanguage::Vec3"
    }
   },
   "type": "MIX",
   "uuid": "{9b1a195d-5afb-4beb-a8fa-5f04d490927b}"
  },
  {
   "layers": [],
   "parameters": {},
   "type": "VERTEX_COLOR",
   "uuid": "{52d11d72-4761-4c25-8b17-6088983e9822}"
  },
  {
   "layers": [],
   "parameters": {
    "type": {
     "type": "QShaderLanguage::VariableType",
     "value": "QShaderLanguage::Vec3"
    }
   },
   "type": "MIX",
   "uuid": "{1153a0e7-d25e-4bd7-8b1e-13eb7847a511}"
  },
  {
   "layers": [],
   "parameters": {
    "type": {
     "type": "QShaderLanguage::VariableType",
     "value": "QShaderLanguage::Float"
    }
   },
   "type": "CLAMP",
   "uuid": "{0d4007e5-28aa-4c66-a8f8-821540c662e6}"
  },
  {
   "layers": [],
   "parameters": {
    "clamp": {
     "type": "QShaderLanguage::Bool",
     "value": "false"
    },
    "operation": "*",
    "firstType": {
     "type": "QShaderLanguage::VariableType",
     "value": "QShaderLanguage::Float"
    },
    "secondType": {
     "type": "QShaderLanguage::VariableType",
     "value": "QShaderLanguage::Float"
    },
    "outputType": {
     "type": "QShaderLanguage::VariableType",
     "value": "QShaderLanguage::Float"
    }
   },
   "type": "BINARY_MATH_OPERATION",
   "uuid": "{5bd80878-5b5d-4860-b085-97dec9bc544d}"
  },
  {
   "layers": [],
   "parameters": {},
   "type": "SEPXYZ",
   "uuid": "{f6d6c690-1281-4662-a84f-8abca4af1aee}"
  },
  {
   "layers": [],
   "parameters": {},
   "type": "NEW_GEOMETRY",
   "uuid": "{2518036c-8c7a-40d1-b181-259cd1a197e2}"
  },
  {
   "layers": [],
   "parameters": {
    "operation": "*",
    "firstType": {
     "type": "QShaderLanguage::VariableType",
     "value": "QShaderLanguage::Vec3"
    },
    "secondType": {
     "type": "QShaderLanguage::VariableType",
     "value": "QShaderLanguage::Vec3"
    },
    "outputType": {
     "type": "QShaderLanguage::VariableType",
     "value": "QShaderLanguage::Vec3"
    }
   },
   "type": "BINARY_MATH_OPERATION",
   "uuid": "{bffc6844-abbe-4de1-94e1-b97b0fa5c996}"
  },
  {
   "layers": [],
   "parameters": {
    "operation": "*",
    "firstType": {
     "type": "QShaderLanguage::VariableType",
     "value": "QShaderLanguage::Vec3"
    },
    "secondType": {
     "type": "QShaderLanguage::VariableType",
     "value": "QShaderLanguage::Vec3"
    },
    "outputType": {
     "type": "QShaderLanguage::VariableType",
     "value": "QShaderLanguage::Vec3"
    }
   },
   "type": "BINARY_MATH_OPERATION",
   "uuid": "{632221a8-ac89-4222-9654-ef584f366d05}"
  },
  {
   "layers": [],
   "parameters": {
    "type": {
     "type": "QShaderLanguage::VariableType",
     "value": "QShaderLanguage::Vec3"
    }
   },
   "type": "MIX",
   "uuid": "{d6db091a-b84c-41c3-9538-78011879ad53}"
  },
  {
   "layers": [],
   "parameters": {},
   "type": "MATERIAL_PROPERTIES",
   "uuid": "{884ca46a-2c1b-4445-ba9a-20acd729e821}"
  },
  {
   "layers": [],
   "parameters": {},
   "type": "MATERIAL_OUTPUT",
   "uuid": "{8bf17e1d-4656-45b7-9d6c-5873fb7a189b}"
  },
  {
   "layers": [],
   "parameters": {},
   "type": "COLOR_TO_SHADER",
   "uuid": "{a72ef415-e014-4ac0-beda-b201df689c2d}"
  },
  {
   "layers": [],
   "parameters": {
    "constant": "0.5,0.5,0.0",
    "type": {
     "type": "QShaderLanguage::VariableType",
     "value": "QShaderLanguage::Vec3"
    }
   },
   "type": "constant",
   "uuid": "{b9ccae82-6068-48c0-8c50-9d7708cda3f5}"
  },
  {
   "layers": [],
   "parameters": {
    "constant": "0.5,0.5,0.0",
    "type": {
     "type": "QShaderLanguage::VariableType",
     "value": "QShaderLanguage::Vec3"
    }
   },
   "type": "constant",
   "uuid": "{effbd1e8-486d-403b-8bb9-1755616c155e}"
  },
  {
   "layers": [],
   "parameters": {
    "constant": "1.0,1.0,-1.0",
    "type": {
     "type": "QShaderLanguage::VariableType",
     "value": "QShaderLanguage::Vec3"
    }
   },
   "type": "constant",
   "uuid": "{e3eee659-e7db-4bae-87b0-a5f431d131ac}"
  },
  {
   "layers": [],
   "parameters": {
    "constant": "1.0,1.0,0.0",
    "type": {
     "type": "QShaderLanguage::VariableType",
     "value": "QShaderLanguage::Vec3"
    }
   },
   "type": "constant",
   "uuid": "{9a2538f9-55a6-4eef-815b-07678c0596e9}"
  },
  {
   "layers": [],
   "parameters": {
    "constant": "1.0",
    "type": {
     "type": "QShaderLanguage::VariableType",
     "value": "QShaderLanguage::Float"
    }
   },
   "type": "constant",
   "uuid": "{5961116e-e0da-4581-92be-52d6b1fa8ddd}"
  },
  {
   "layers": [],
   "parameters": {
    "constant": "1.0,1.0,1.0",
    "type": {
     "type": "QShaderLanguage::VariableType",
     "value": "QShaderLanguage::Vec3"
    }
   },
   "type": "constant",
   "uuid": "{2c3313b6-3ee6-4b6a-bdc0-0555233ea7f2}"
  },
  {
   "layers": [],
   "parameters": {
    "constant": "0.0",
    "type": {
     "type": "QShaderLanguage::VariableType",
     "value": "QShaderLanguage::Float"
    }
   },
   "type": "constant",
   "uuid": "{a67106ba-535b-4347-8fdc-242b56bc4c6c}"
  },
  {
   "layers": [],
   "parameters": {
    "constant": "1.0",
    "type": {
     "type": "QShaderLanguage::VariableType",
     "value": "QShaderLanguage::Float"
    }
   },
   "type": "constant",
   "uuid": "{3cc08ddf-d6cd-4937-9845-093d0fc0b8ca}"
  },
  {
   "layers": [],
   "parameters": {
    "constant": "-1.0",
    "type": {
     "type": "QShaderLanguage::VariableType",
     "value": "QShaderLanguage::Float"
    }
   },
   "type": "constant",
   "uuid": "{6aafc388-fa9c-40df-81be-a4d632f2d9ba}"
  },
  {
   "layers": [],
   "parameters": {
    "constant": "1.0,1.0,1.0",
    "type": {
     "type": "QShaderLanguage::VariableType",
     "value": "QShaderLanguage::Vec3"
    }
   },
   "type": "constant",
   "uuid": "{e987ebe8-c753-4533-b693-c24e1dabca4e}"
  }
 ],
 "edges": [
  {
   "layers": [],
   "sourceUuid": "{884ca46a-2c1b-4445-ba9a-20acd729e821}",
   "sourcePort": "reflectionInnerFilter",
   "targetUuid": "{1153a0e7-d25e-4bd7-8b1e-13eb7847a511}",
   "targetPort": "input1"
  },
  {
   "layers": [],
   "sourceUuid": "{884ca46a-2c1b-4445-ba9a-20acd729e821}",
   "sourcePort": "reflectionOuterFilter",
   "targetUuid": "{1153a0e7-d25e-4bd7-8b1e-13eb7847a511}",
   "targetPort": "input2"
  },
  {
   "layers": [],
   "sourceUuid": "{884ca46a-2c1b-4445-ba9a-20acd729e821}",
   "sourcePort": "diffuseInnerFilter",
   "targetUuid": "{9cad0eaa-3400-49ef-985c-72c5c1668592}",
   "targetPort": "input1"
  },
  {
   "layers": [],
   "sourceUuid": "{884ca46a-2c1b-4445-ba9a-20acd729e821}",
   "sourcePort": "diffuseOuterFilter",
   "targetUuid": "{9cad0eaa-3400-49ef-985c-72c5c1668592}",
   "targetPort": "input2"
  },
  {
   "layers": [],
   "sourceUuid": "{1153a0e7-d25e-4bd7-8b1e-13eb7847a511}",
   "sourcePort": "mixed",
   "targetUuid": "{accfed58-cb91-4c50-949a-ae939fc61116}",
   "targetPort": "input0"
  },
  {
   "layers": [],
   "sourceUuid": "{9cad0eaa-3400-49ef-985c-72c5c1668592}",
   "sourcePort": "mixed",
   "targetUuid": "{b55b4d12-f0c3-4c1e-91f8-167e3d92c749}",
   "targetPort": "input0"
  },
  {
   "layers": [],
   "sourceUuid": "{accfed58-cb91-4c50-949a-ae939fc61116}",
   "sourcePort": "output0",
   "targetUuid": "{0f91cf3b-eb4e-4aee-870d-21791737150d}",
   "targetPort": "input0"
  },
  {
   "layers": [],
   "sourceUuid": "{0f91cf3b-eb4e-4aee-870d-21791737150d}",
   "sourcePort": "output0",
   "targetUuid": "{1abd841a-0817-41f5-b99b-faf78dbe680b}",
   "targetPort": "input0"
  },
  {
   "layers": [],
   "sourceUuid": "{23823057-05c6-4012-9ccb-65945f359496}",
   "sourcePort": "output0",
   "targetUuid": "{1abd841a-0817-41f5-b99b-faf78dbe680b}",
   "targetPort": "input1"
  },
  {
   "layers": [],
   "sourceUuid": "{1abd841a-0817-41f5-b99b-faf78dbe680b}",
   "sourcePort": "output0",
   "targetUuid": "{632221a8-ac89-4222-9654-ef584f366d05}",
   "targetPort": "input1"
  },
  {
   "layers": [],
   "sourceUuid": "{884ca46a-2c1b-4445-ba9a-20acd729e821}",
   "sourcePort": "reflectionGain",
   "targetUuid": "{0f91cf3b-eb4e-4aee-870d-21791737150d}",
   "targetPort": "input1"
  },
  {
   "layers": [],
   "sourceUuid": "{884ca46a-2c1b-4445-ba9a-20acd729e821}",
   "sourcePort": "diffuseGain",
   "targetUuid": "{23823057-05c6-4012-9ccb-65945f359496}",
   "targetPort": "input0"
  },
  {
   "layers": [],
   "sourceUuid": "{b55b4d12-f0c3-4c1e-91f8-167e3d92c749}",
   "sourcePort": "output0",
   "targetUuid": "{23823057-05c6-4012-9ccb-65945f359496}",
   "targetPort": "input1"
  },
  {
   "layers": [],
   "sourceUuid": "{17a59c45-3a4e-4ee7-9a99-6a2382168778}",
   "sourcePort": "normal",
   "targetUuid": "{bf5c28b1-e63b-4a9b-ba23-b8dde8d527ce}",
   "targetPort": "input"
  },
  {
   "layers": [],
   "sourceUuid": "{bf5c28b1-e63b-4a9b-ba23-b8dde8d527ce}",
   "sourcePort": "transformed",
   "targetUuid": "{e3f01b40-e0f3-4565-8a8d-b5bef8367b54}",
   "targetPort": "input0"
  },
  {
   "layers": [],
   "sourceUuid": "{e3f01b40-e0f3-4565-8a8d-b5bef8367b54}",
   "sourcePort": "output0",
   "targetUuid": "{b2e90a5d-f40e-4848-ab21-3ce3712651d9}",
   "targetPort": "input0"
  },
  {
   "layers": [],
   "sourceUuid": "{b2e90a5d-f40e-4848-ab21-3ce3712651d9}",
   "sourcePort": "output0",
   "targetUuid": "{9428942c-d423-4f46-b8eb-8a2646c39dc5}",
   "targetPort": "input0"
  },
  {
   "layers": [],
   "sourceUuid": "{2a04779f-b4de-42e0-a233-c3fc9b7f13d8}",
   "sourcePort": "output0",
   "targetUuid": "{9428942c-d423-4f46-b8eb-8a2646c39dc5}",
   "targetPort": "input1"
  },
  {
   "layers": [],
   "sourceUuid": "{9428942c-d423-4f46-b8eb-8a2646c39dc5}",
   "sourcePort": "output0",
   "targetUuid": "{6a43b9ec-e999-45ae-ab1a-59ccce71c1b7}",
   "targetPort": "input0"
  },
  {
   "layers": [],
   "sourceUuid": "{884ca46a-2c1b-4445-ba9a-20acd729e821}",
   "sourcePort": "normalScaling",
   "targetUuid": "{b2e90a5d-f40e-4848-ab21-3ce3712651d9}",
   "targetPort": "input1"
  },
  {
   "layers": [],
   "sourceUuid": "{884ca46a-2c1b-4445-ba9a-20acd729e821}",
   "sourcePort": "normalDisturb",
   "targetUuid": "{2a04779f-b4de-42e0-a233-c3fc9b7f13d8}",
   "targetPort": "input0"
  },
  {
   "layers": [],
   "sourceUuid": "{512f3bd6-547f-46c9-9fef-1a0c51cdfe9a}",
   "sourcePort": "output0",
   "targetUuid": "{7bdd8d53-a13c-4f5e-87e3-93e53fd6b5a2}",
   "targetPort": "input0"
  },
  {
   "layers": [],
   "sourceUuid": "{6a43b9ec-e999-45ae-ab1a-59ccce71c1b7}",
   "sourcePort": "output0",
   "targetUuid": "{512f3bd6-547f-46c9-9fef-1a0c51cdfe9a}",
   "targetPort": "input0"
  },
  {
   "layers": [],
   "sourceUuid": "{92f0bd78-2761-49cb-a072-6d15d51c7981}",
   "sourcePort": "z",
   "targetUuid": "{71615a9d-df61-41e2-ba11-243a239a32cd}",
   "targetPort": "input1"
  },
  {
   "layers": [],
   "sourceUuid": "{71615a9d-df61-41e2-ba11-243a239a32cd}",
   "sourcePort": "output0",
   "targetUuid": "{6128e5a7-cfee-436d-a380-fcb9dd51107c}",
   "targetPort": "input0"
  },
  {
   "layers": [],
   "sourceUuid": "{71615a9d-df61-41e2-ba11-243a239a32cd}",
   "sourcePort": "output0",
   "targetUuid": "{6128e5a7-cfee-436d-a380-fcb9dd51107c}",
   "targetPort": "input1"
  },
  {
   "layers": [],
   "sourceUuid": "{6128e5a7-cfee-436d-a380-fcb9dd51107c}",
   "sourcePort": "output0",
   "targetUuid": "{1153a0e7-d25e-4bd7-8b1e-13eb7847a511}",
   "targetPort": "fac"
  },
  {
   "layers": [],
   "sourceUuid": "{6128e5a7-cfee-436d-a380-fcb9dd51107c}",
   "sourcePort": "output0",
   "targetUuid": "{9cad0eaa-3400-49ef-985c-72c5c1668592}",
   "targetPort": "fac"
  },
  {
   "layers": [],
   "sourceUuid": "{6a43b9ec-e999-45ae-ab1a-59ccce71c1b7}",
   "sourcePort": "output0",
   "targetUuid": "{92f0bd78-2761-49cb-a072-6d15d51c7981}",
   "targetPort": "vector"
  },
  {
   "layers": [],
   "sourceUuid": "{52d11d72-4761-4c25-8b17-6088983e9822}",
   "sourcePort": "color",
   "targetUuid": "{9b1a195d-5afb-4beb-a8fa-5f04d490927b}",
   "targetPort": "input2"
  },
  {
   "layers": [],
   "sourceUuid": "{9b1a195d-5afb-4beb-a8fa-5f04d490927b}",
   "sourcePort": "mixed",
   "targetUuid": "{40f2892e-416c-4081-92c6-7dac2181b3d4}",
   "targetPort": "input0"
  },
  {
   "layers": [],
   "sourceUuid": "{884ca46a-2c1b-4445-ba9a-20acd729e821}",
   "sourcePort": "postVertexColor",
   "targetUuid": "{9b1a195d-5afb-4beb-a8fa-5f04d490927b}",
   "targetPort": "fac"
  },
  {
   "layers": [],
   "sourceUuid": "{884ca46a-2c1b-4445-ba9a-20acd729e821}",
   "sourcePort": "postGain",
   "targetUuid": "{40f2892e-416c-4081-92c6-7dac2181b3d4}",
   "targetPort": "input1"
  },
  {
   "layers": [],
   "sourceUuid": "{40f2892e-416c-4081-92c6-7dac2181b3d4}",
   "sourcePort": "output0",
   "targetUuid": "{632221a8-ac89-4222-9654-ef584f366d05}",
   "targetPort": "input0"
  },
  {
   "layers": [],
   "sourceUuid": "{8d7a947c-5c45-4e56-b0be-4107d41be94f}",
   "sourcePort": "color",
   "targetUuid": "{accfed58-cb91-4c50-949a-ae939fc61116}",
   "targetPort": "input1"
  },
  {
   "layers": [],
   "sourceUuid": "{7bdd8d53-a13c-4f5e-87e3-93e53fd6b5a2}",
   "sourcePort": "output0",
   "targetUuid": "{8d7a947c-5c45-4e56-b0be-4107d41be94f}",
   "targetPort": "vector"
  },
  {
   "layers": [],
   "sourceUuid": "{89a076f6-7870-46f9-82de-e936e7fa1470}",
   "sourcePort": "color",
   "targetUuid": "{b55b4d12-f0c3-4c1e-91f8-167e3d92c749}",
   "targetPort": "input1"
  },
  {
   "layers": [],
   "sourceUuid": "{2518036c-8c7a-40d1-b181-259cd1a197e2}",
   "sourcePort": "normal",
   "targetUuid": "{f6d6c690-1281-4662-a84f-8abca4af1aee}",
   "targetPort": "vector"
  },
  {
   "layers": [],
   "sourceUuid": "{f6d6c690-1281-4662-a84f-8abca4af1aee}",
   "sourcePort": "z",
   "targetUuid": "{5bd80878-5b5d-4860-b085-97dec9bc544d}",
   "targetPort": "input0"
  },
  {
   "layers": [],
   "sourceUuid": "{5bd80878-5b5d-4860-b085-97dec9bc544d}",
   "sourcePort": "output0",
   "targetUuid": "{0d4007e5-28aa-4c66-a8f8-821540c662e6}",
   "targetPort": "value"
  },
  {
   "layers": [],
   "sourceUuid": "{0d4007e5-28aa-4c66-a8f8-821540c662e6}",
   "sourcePort": "result",
   "targetUuid": "{d6db091a-b84c-41c3-9538-78011879ad53}",
   "targetPort": "fac"
  },
  {
   "layers": [],
   "sourceUuid": "{d6db091a-b84c-41c3-9538-78011879ad53}",
   "sourcePort": "mixed",
   "targetUuid": "{bffc6844-abbe-4de1-94e1-b97b0fa5c996}",
   "targetPort": "input1"
  },
  {
   "layers": [],
   "sourceUuid": "{632221a8-ac89-4222-9654-ef584f366d05}",
   "sourcePort": "output0",
   "targetUuid": "{bffc6844-abbe-4de1-94e1-b97b0fa5c996}",
   "targetPort": "input0"
  },
  {
   "layers": [],
   "sourceUuid": "{bffc6844-abbe-4de1-94e1-b97b0fa5c996}",
   "sourcePort": "output0",
   "targetUuid": "{a72ef415-e014-4ac0-beda-b201df689c2d}",
   "targetPort": "color"
  },
  {
   "layers": [],
   "sourceUuid": "{884ca46a-2c1b-4445-ba9a-20acd729e821}",
   "sourcePort": "postHemiFilter",
   "targetUuid": "{d6db091a-b84c-41c3-9538-78011879ad53}",
   "targetPort": "input2"
  },
  {
   "layers": [],
   "sourceUuid": "{a72ef415-e014-4ac0-beda-b201df689c2d}",
   "sourcePort": "shader",
   "targetUuid": "{8bf17e1d-4656-45b7-9d6c-5873fb7a189b}",
   "targetPort": "color"
  },
  {
   "layers": [],
   "sourceUuid": "{d16d5aa8-3a70-4e99-bb39-691a7216e34f}",
   "sourcePort": "uv",
   "targetUuid": "{89a076f6-7870-46f9-82de-e936e7fa1470}",
   "targetPort": "vector"
  },
  {
   "layers": [],
   "sourceUuid": "{b9ccae82-6068-48c0-8c50-9d7708cda3f5}",
   "sourcePort": "value",
   "targetUuid": "{7bdd8d53-a13c-4f5e-87e3-93e53fd6b5a2}",
   "targetPort": "input1"
  },
  {
   "layers": [],
   "sourceUuid": "{effbd1e8-486d-403b-8bb9-1755616c155e}",
   "sourcePort": "value",
   "targetUuid": "{512f3bd6-547f-46c9-9fef-1a0c51cdfe9a}",
   "targetPort": "input1"
  },
  {
   "layers": [],
   "sourceUuid": "{e3eee659-e7db-4bae-87b0-a5f431d131ac}",
   "sourcePort": "value",
   "targetUuid": "{e3f01b40-e0f3-4565-8a8d-b5bef8367b54}",
   "targetPort": "input1"
  },
  {
   "layers": [],
   "sourceUuid": "{9a2538f9-55a6-4eef-815b-07678c0596e9}",
   "sourcePort": "value",
   "targetUuid": "{2a04779f-b4de-42e0-a233-c3fc9b7f13d8}",
   "targetPort": "input1"
  },
  {
   "layers": [],
   "sourceUuid": "{5961116e-e0da-4581-92be-52d6b1fa8ddd}",
   "sourcePort": "value",
   "targetUuid": "{71615a9d-df61-41e2-ba11-243a239a32cd}",
   "targetPort": "input0"
  },
  {
   "layers": [],
   "sourceUuid": "{2c3313b6-3ee6-4b6a-bdc0-0555233ea7f2}",
   "sourcePort": "value",
   "targetUuid": "{9b1a195d-5afb-4beb-a8fa-5f04d490927b}",
   "targetPort": "input1"
  },
  {
   "layers": [],
   "sourceUuid": "{a67106ba-535b-4347-8fdc-242b56bc4c6c}",
   "sourcePort": "value",
   "targetUuid": "{0d4007e5-28aa-4c66-a8f8-821540c662e6}",
   "targetPort": "min"
  },
  {
   "layers": [],
   "sourceUuid": "{3cc08ddf-d6cd-4937-9845-093d0fc0b8ca}",
   "sourcePort": "value",
   "targetUuid": "{0d4007e5-28aa-4c66-a8f8-821540c662e6}",
   "targetPort": "max"
  },
  {
   "layers": [],
   "sourceUuid": "{6aafc388-fa9c-40df-81be-a4d632f2d9ba}",
   "sourcePort": "value",
   "targetUuid": "{5bd80878-5b5d-4860-b085-97dec9bc544d}",
   "targetPort": "input1"
  },
  {
   "layers": [],
   "sourceUuid": "{e987ebe8-c753-4533-b693-c24e1dabca4e}",
   "sourcePort": "value",
   "targetUuid": "{d6db091a-b84c-41c3-9538-78011879ad53}",
   "targetPort": "input1"
  },
  {
   "sourceUuid": "{884ca46a-2c1b-4445-ba9a-20acd729e821}",
   "sourcePort": "usesReflectionMap",
   "targetUuid": "{8d7a947c-5c45-4e56-b0be-4107d41be94f}",
   "targetPort": "useTexture"
  },
  {
   "sourceUuid": "{884ca46a-2c1b-4445-ba9a-20acd729e821}",
   "sourcePort": "reflectionMap",
   "targetUuid": "{8d7a947c-5c45-4e56-b0be-4107d41be94f}",
   "targetPort": "texture"
  },
  {
   "sourceUuid": "{884ca46a-2c1b-4445-ba9a-20acd729e821}",
   "sourcePort": "usesDiffuseMap",
   "targetUuid": "{89a076f6-7870-46f9-82de-e936e7fa1470}",
   "targetPort": "useTexture"
  },
  {
   "sourceUuid": "{884ca46a-2c1b-4445-ba9a-20acd729e821}",
   "sourcePort": "diffuseMap",
   "targetUuid": "{89a076f6-7870-46f9-82de-e936e7fa1470}",
   "targetPort": "texture"
  }
 ],
 "prototypes": {
  "BINARY_MATH_FUNCTION": {
   "inputs": [
    "input0",
    "input1"
   ],
   "outputs": [
    "output0"
   ],
   "parameters": {
    "firstType": {
     "type": "QShaderLanguage::VariableType",
     "value": "QShaderLanguage::Vec3"
    },
    "operation": "min",
    "outputType": {
     "type": "QShaderLanguage::VariableType",
     "value": "QShaderLanguage::Vec3"
    },
    "secondType": {
     "type": "QShaderLanguage::VariableType",
     "value": "QShaderLanguage::Vec3"
    }
   },
   "rules": [
    {
     "format": {
      "api": "OpenGLES",
      "major": 2,
      "minor": 0
     },
     "substitution": "highp $outputType $output0 = $operation($input0, $input1);"
    },
    {
     "format": {
      "api": "OpenGLCoreProfile",
      "major": 3,
      "minor": 0
     },
     "substitution": "$outputType $output0 = $operation($input0, $input1);"
    }
   ]
  },
  "BINARY_MATH_OPERATION": {
   "inputs": [
    "input0",
    "input1"
   ],
   "outputs": [
    "output0"
   ],
   "parameters": {
    "firstType": {
     "type": "QShaderLanguage::VariableType",
     "value": "QShaderLanguage::Vec3"
    },
    "operation": "+",
    "outputType": {
     "type": "QShaderLanguage::VariableType",
     "value": "QShaderLanguage::Vec3"
    },
    "secondType": {
     "type": "QShaderLanguage::VariableType",
     "value": "QShaderLanguage::Vec3"
    }
   },
   "rules": [
    {
     "format": {
      "api": "OpenGLES",
      "major": 2,
      "minor": 0
     },
     "substitution": "highp $outputType $output0 = ($input0) $operation ($input1);"
    },
    {
     "format": {
      "api": "OpenGLCoreProfile",
      "major": 3,
      "minor": 0
     },
     "substitution": "$outputType $output0 = ($input0) $operation ($input1);"
    }
   ]
  },
  "BSDF_TRANSPARENT": {
   "inputs": [
    "color"
   ],
   "outputs": [
    "bsdf"
   ],
   "rules": [
    {
     "format": {
      "api": "OpenGLES",
      "major": 2,
      "minor": 0
     },
     "substitution": "highp vec4 $bsdf = vec4($color.rgb, 1 - ($color.r + $color.g + $color.b) / 3);"
    },
    {
     "format": {
      "api": "OpenGLCoreProfile",
      "major": 3,
      "minor": 0
     },
     "substitution": "vec4 $bsdf = vec4($color.rgb, 1 - ($color.r + $color.g + $color.b) / 3);"
    }
   ]
  },
  "VECT_TRANSFORM": {
   "inputs": [
    "input"
   ],
   "outputs": [
    "transformed"
   ],
   "rules": [
    {
     "format": {
      "api": "OpenGLES",
      "major": 2,
      "minor": 0
     },
     "headerSnippets": [
      "#ifndef MODEL_VIEW",
      "#define MODEL_VIEW",
      "uniform highp mat4 modelView;",
      "#endif"
     ],
     "substitution": "highp vec3 $transformed = (modelView * vec4($input, 0.0)).xyz * vec3(1.0, 1.0, -1.0);"
    },
    {
     "format": {
      "api": "OpenGLCoreProfile",
      "major": 3,
      "minor": 0
     },
     "headerSnippets": [
      "#ifndef MODEL_VIEW",
      "#define MODEL_VIEW",
      "uniform  mat4 modelView;",
      "#endif"
     ],
     "substitution": "vec3 $transformed = (modelView * vec4($input, 0.0)).xyz * vec3(1.0, 1.0, -1.0);"
    }
   ]
  },
  "COLOR_TO_SHADER": {
   "inputs": [
    "color"
   ],
   "outputs": [
    "shader"
   ],
   "rules": [
    {
     "format": {
      "api": "OpenGLES",
      "major": 2,
      "minor": 0
     },
     "substitution": "highp vec4 $shader = vec4($color, 1.0);"
    },
    {
     "format": {
      "api": "OpenGLCoreProfile",
      "major": 3,
      "minor": 0
     },
     "substitution": "vec4 $shader = vec4($color, 1.0);"
    }
   ]
  },
  "BLEND_ALPHA": {
   "inputs": [
    "color",
    "alpha"
   ],
   "outputs": [
    "shader"
   ],
   "rules": [
    {
     "format": {
      "api": "OpenGLES",
      "major": 2,
      "minor": 0
     },
     "substitution": "highp vec4 $shader = vec4($color, $alpha);"
    },
    {
     "format": {
      "api": "OpenGLCoreProfile",
      "major": 3,
      "minor": 0
     },
     "substitution": "vec4 $shader = vec4($color, $alpha);"
    }
   ]
  },
  "COMBRGB": {
   "inputs": [
    "r",
    "g",
    "b"
   ],
   "outputs": [
    "image"
   ],
   "rules": [
    {
     "format": {
      "api": "OpenGLES",
      "major": 2,
      "minor": 0
     },
     "substitution": "highp vec3 $image = vec3($r, $g, $b);"
    },
    {
     "format": {
      "api": "OpenGLCoreProfile",
      "major": 3,
      "minor": 0
     },
     "substitution": "vec3 $image = vec3($r, $g, $b);"
    }
   ]
  },
  "COMBXYZ": {
   "inputs": [
    "x",
    "y",
    "z"
   ],
   "outputs": [
    "vector"
   ],
   "rules": [
    {
     "format": {
      "api": "OpenGLES",
      "major": 2,
      "minor": 0
     },
     "substitution": "highp vec3 $vector = vec3($x, $y, $z);"
    },
    {
     "format": {
      "api": "OpenGLCoreProfile",
      "major": 3,
      "minor": 0
     },
     "substitution": "vec3 $vector = vec3($x, $y, $z);"
    }
   ]
  },
  "MATERIAL_OUTPUT": {
   "inputs": [
    "color"
   ],
   "rules": [
    {
     "format": {
      "api": "OpenGLES",
      "major": 2,
      "minor": 0
     },
     "substitution": "gl_FragColor = clamp($color, 0.0, 1.0);"
    },
    {
     "format": {
      "api": "OpenGLES",
      "major": 3,
      "minor": 0
     },
     "headerSnippets": [
      "out highp vec4 fragColor;"
     ],
     "substitution": "fragColor = clamp($color, 0.0, 1.0);"
    },
    {
     "format": {
      "api": "OpenGLCoreProfile",
      "major": 3,
      "minor": 0
     },
     "headerSnippets": [
      "out vec4 fragColor;"
     ],
     "substitution": "fragColor = clamp($color, 0.0, 1.0);"
    }
   ]
  },
  "MIX": {
   "inputs": [
    "fac",
    "input1",
    "input2"
   ],
   "outputs": [
    "mixed"
   ],
   "parameters": {
    "type": {
     "type": "QShaderLanguage::VariableType",
     "value": "QShaderLanguage::Vec4"
    }
   },
   "rules": [
    {
     "format": {
      "api": "OpenGLES",
      "major": 2,
      "minor": 0
     },
     "substitution": "highp $type $mixed = mix($input1, $input2, $fac);"
    },
    {
     "format": {
      "api": "OpenGLCoreProfile",
      "major": 3,
      "minor": 0
     },
     "substitution": "$type $mixed = mix($input1, $input2, $fac);"
    }
   ]
  },
  "CLAMP": {
   "inputs": [
    "value",
    "min",
    "max"
   ],
   "outputs": [
    "result"
   ],
   "parameters": {
    "type": {
     "type": "QShaderLanguage::VariableType",
     "value": "QShaderLanguage::Vec4"
    }
   },
   "rules": [
    {
     "format": {
      "api": "OpenGLES",
      "major": 2,
      "minor": 0
     },
     "substitution": "highp $type $result = clamp($value, $min, $max);"
    },
    {
     "format": {
      "api": "OpenGLCoreProfile",
      "major": 3,
      "minor": 0
     },
     "substitution": "$type $result = clamp($value, $min, $max);"
    }
   ]
  },
  "NEW_GEOMETRY": {
   "outputs": [
    "position",
    "normal",
    "tangent"
   ],
   "rules": [
    {
     "format": {
      "api": "OpenGLES",
      "major": 2,
      "minor": 0
     },
     "headerSnippets": [
      "#ifndef NEW_GEOMETRY",
      "#define NEW_GEOMETRY",
      "varying highp vec3 worldPosition;",
      "varying highp vec3 worldNormal;",
      "varying highp vec4 worldTangent;",
      "#endif"
     ],
     "substitution": "highp vec3 $position = worldPosition;highp vec3 $normal = normalize(worldNormal);highp vec3 $tangent = worldTangent.xyz;"
    },
    {
     "format": {
      "api": "OpenGLCoreProfile",
      "major": 3,
      "minor": 0
     },
     "headerSnippets": [
      "#ifndef NEW_GEOMETRY",
      "#define NEW_GEOMETRY",
      "in vec3 worldPosition;",
      "in vec3 worldNormal;",
      "in vec4 vertexTan;",
      "#endif"
     ],
     "substitution": "vec3 $position = worldPosition;vec3 $normal = normalize(worldNormal);vec3 $tangent = worldTangent.xyz;"
    }
   ]
  },
  "SEPRGB": {
   "inputs": [
    "color"
   ],
   "outputs": [
    "r",
    "g",
    "b"
   ],
   "rules": [
    {
     "format": {
      "api": "OpenGLES",
      "major": 2,
      "minor": 0
     },
     "substitution": "highp float $r = $color.r;highp float $g = $color.g;highp float $b = $color.b;"
    },
    {
     "format": {
      "api": "OpenGLCoreProfile",
      "major": 3,
      "minor": 0
     },
     "substitution": "float $r = $color.r;float $g = $color.g;float $b = $color.b;"
    }
   ]
  },
  "SEPXYZ": {
   "inputs": [
    "vector"
   ],
   "outputs": [
    "x",
    "y",
    "z"
   ],
   "rules": [
    {
     "format": {
      "api": "OpenGLES",
      "major": 2,
      "minor": 0
     },
     "substitution": "highp float $x = $vector.x;highp float $y = $vector.y;highp float $z = $vector.z;"
    },
    {
     "format": {
      "api": "OpenGLCoreProfile",
      "major": 3,
      "minor": 0
     },
     "substitution": "float $x = $vector.x;float $y = $vector.y;float $z = $vector.z;"
    }
   ]
  },
  "TEX_COORD": {
   "outputs": [
    "uv"
   ],
   "rules": [
    {
     "format": {
      "api": "OpenGLES",
      "major": 2,
      "minor": 0
     },
     "headerSnippets": [
      "#ifndef TEX_COORD",
      "#define TEX_COORD",
      "varying highp vec2 texCoord;",
      "#endif"
     ],
     "substitution": "highp vec2 $uv = texCoord;"
    },
    {
     "format": {
      "api": "OpenGLCoreProfile",
      "major": 3,
      "minor": 0
     },
     "headerSnippets": [
      "#ifndef TEX_COORD",
      "#define TEX_COORD",
      "in vec2 texCoord;",
      "#endif"
     ],
     "substitution": "vec2 $uv = texCoord;"
    }
   ]
  },
  "TEX_IMAGE": {
   "inputs": [
    "texture",
    "useTexture",
    "vector"
   ],
   "outputs": [
    "color",
    "alpha",
    "inter"
   ],
   "parameters": {
    "defaultColor": "1.0, 1.0, 1.0, 1.0",
    "condition": "false",
    "name": "",
    "linearizer": ""
   },
   "rules": [
    {
     "format": {
      "api": "OpenGLES",
      "major": 2,
      "minor": 0
     },
     "headerSnippets": [
      "#ifndef SRGB_TO_LINEAR",
      "#define SRGB_TO_LINEAR",
      "highp vec3 sRGBtoLinear(highp vec3 srgb) { return pow(srgb, vec3(2.2)); }",
      "#endif"
     ],
     "substitution": "highp vec4 $inter = $useTexture ? texture2D($texture, $vector.xy) : vec4($defaultColor);highp vec3 $color = $linearizer($inter.rgb);highp float $alpha = $inter.a;"
    },
    {
     "format": {
      "api": "OpenGLCoreProfile",
      "major": 3,
      "minor": 0
     },
     "headerSnippets": [
      "#ifndef SRGB_TO_LINEAR",
      "#define SRGB_TO_LINEAR",
      "vec3 sRGBtoLinear(vec3 srgb) { return pow(srgb, vec3(2.2)); }",
      "#endif"
     ],
     "substitution": "vec4 $inter = $useTexture ? texture($texture, $vector.xy) : vec4($defaultColor);vec3 $color = $linearizer($inter.rgb);float $alpha = $inter.a;"
    }
   ]
  },
  "UNARY_MATH_FUNCTION": {
   "inputs": [
    "input0"
   ],
   "outputs": [
    "output0"
   ],
   "parameters": {
    "firstType": {
     "type": "QShaderLanguage::VariableType",
     "value": "QShaderLanguage::Vec3"
    },
    "operation": "round",
    "outputType": {
     "type": "QShaderLanguage::VariableType",
     "value": "QShaderLanguage::Vec3"
    }
   },
   "rules": [
    {
     "format": {
      "api": "OpenGLES",
      "major": 2,
      "minor": 0
     },
     "substitution": "highp $outputType $output0 = $operation($input0);"
    },
    {
     "format": {
      "api": "OpenGLCoreProfile",
      "major": 3,
      "minor": 0
     },
     "substitution": "$outputType $output0 = $operation($input0);"
    }
   ]
  },
  "VERTEX_COLOR": {
   "outputs": [
    "color",
    "alpha"
   ],
   "rules": [
    {
     "format": {
      "api": "OpenGLES",
      "major": 2,
      "minor": 0
     },
     "headerSnippets": [
      "#ifndef VERTEX_COLOR",
      "#define VERTEX_COLOR",
      "varying highp vec4 color;",
      "#endif"
     ],
     "substitution": "highp vec3 $color = color.rgb;highp float $alpha = color.a;"
    },
    {
     "format": {
      "api": "OpenGLCoreProfile",
      "major": 3,
      "minor": 0
     },
     "headerSnippets": [
      "#ifndef VERTEX_COLOR",
      "#define VERTEX_COLOR",
      "in vec4 color;",
      "#endif"
     ],
     "substitution": "vec3 $color = color.rgb;float $alpha = color.a;"
    }
   ]
  },
  "constant": {
   "outputs": [
    "value"
   ],
   "parameters": {
    "constant": "0.0",
    "type": {
     "type": "QShaderLanguage::VariableType",
     "value": "QShaderLanguage::Float"
    }
   },
   "rules": [
    {
     "format": {
      "api": "OpenGLES",
      "major": 2,
      "minor": 0
     },
     "substitution": "highp $type $value = $type($constant);"
    },
    {
     "format": {
      "api": "OpenGLCoreProfile",
      "major": 3,
      "minor": 0
     },
     "substitution": "$type $value = $type($constant);"
    }
   ]
  },
  "MATERIAL_PROPERTIES": {
   "outputs": [
    "usesReflectionMap",
    "reflectionMap",
    "usesDiffuseMap",
    "diffuseMap",
    "normalScaling",
    "normalDisturb",
    "reflectionGain",
    "reflectionInnerFilter",
    "reflectionOuterFilter",
    "diffuseGain",
    "diffuseInnerFilter",
    "diffuseOuterFilter",
    "postHemiFilter",
    "postVertexColor",
    "postGain"
   ],
   "rules": [
    {
     "format": {
      "api": "OpenGLES",
      "major": 2,
      "minor": 0
     },
     "headerSnippets": [
      "struct MaterialProperties {\n    bool usesReflectionMap;\n    highp sampler2D reflectionMap;\n    bool usesDiffuseMap;\n    highp sampler2D diffuseMap;\n    highp vec3 normalScaling;\n    highp vec3 normalDisturb;\n    highp float reflectionGain;\n    highp vec3 reflectionInnerFilter;\n    highp vec3 reflectionOuterFilter;\n    highp float diffuseGain;\n    highp vec3 diffuseInnerFilter;\n    highp vec3 diffuseOuterFilter;\n    highp vec3 postHemiFilter;\n    highp float postVertexColor;\n    highp float postGain;\n};\nuniform MaterialProperties properties;"
     ],
     "substitution": "MaterialProperties $properties = properties;bool $usesReflectionMap = properties.usesReflectionMap;highp sampler2D $reflectionMap = properties.reflectionMap;bool $usesDiffuseMap = properties.usesDiffuseMap;highp sampler2D $diffuseMap = properties.diffuseMap;highp vec3 $normalScaling = properties.normalScaling;highp vec3 $normalDisturb = properties.normalDisturb;highp float $reflectionGain = properties.reflectionGain;highp vec3 $reflectionInnerFilter = properties.reflectionInnerFilter;highp vec3 $reflectionOuterFilter = properties.reflectionOuterFilter;highp float $diffuseGain = properties.diffuseGain;highp vec3 $diffuseInnerFilter = properties.diffuseInnerFilter;highp vec3 $diffuseOuterFilter = properties.diffuseOuterFilter;highp vec3 $postHemiFilter = properties.postHemiFilter;highp float $postVertexColor = properties.postVertexColor;highp float $postGain = properties.postGain;"
    },
    {
     "format": {
      "api": "OpenGLCoreProfile",
      "major": 3,
      "minor": 0
     },
     "headerSnippets": [
      "struct MaterialProperties {\n    bool usesReflectionMap;\n    sampler2D reflectionMap;\n    bool usesDiffuseMap;\n    sampler2D diffuseMap;\n    vec3 normalScaling;\n    vec3 normalDisturb;\n    float reflectionGain;\n    vec3 reflectionInnerFilter;\n    vec3 reflectionOuterFilter;\n    float diffuseGain;\n    vec3 diffuseInnerFilter;\n    vec3 diffuseOuterFilter;\n    vec3 postHemiFilter;\n    float postVertexColor;\n    float postGain;\n};\nuniform MaterialProperties properties;"
     ],
     "substitution": "MaterialProperties $properties = properties;bool $usesReflectionMap = properties.usesReflectionMap;sampler2D $reflectionMap = properties.reflectionMap;bool $usesDiffuseMap = properties.usesDiffuseMap;sampler2D $diffuseMap = properties.diffuseMap;vec3 $normalScaling = properties.normalScaling;vec3 $normalDisturb = properties.normalDisturb;float $reflectionGain = properties.reflectionGain;vec3 $reflectionInnerFilter = properties.reflectionInnerFilter;vec3 $reflectionOuterFilter = properties.reflectionOuterFilter;float $diffuseGain = properties.diffuseGain;vec3 $diffuseInnerFilter = properties.diffuseInnerFilter;vec3 $diffuseOuterFilter = properties.diffuseOuterFilter;vec3 $postHemiFilter = properties.postHemiFilter;float $postVertexColor = properties.postVertexColor;float $postGain = properties.postGain;"
    }
   ]
  }
 }
}