{
 "nodes": [
  {
   "layers": [],
   "parameters": {
    "operation": "+",
    "firstType": {
     "type": "QShaderLanguage::VariableType",
     "value": "QShaderLanguage::Vec3"
    },
    "secondType": {
     "type": "QShaderLanguage::VariableType",
     "value": "QShaderLanguage::Vec3"
    },
    "outputType": {
     "type": "QShaderLanguage::VariableType",
     "value": "QShaderLanguage::Vec3"
    }
   },
   "type": "BINARY_MATH_OPERATION",
   "uuid": "{e2f0826e-34b7-4e36-8cc1-1ef9eb7de8fd}"
  },
  {
   "layers": [],
   "parameters": {
    "operation": "*",
    "firstType": {
     "type": "QShaderLanguage::VariableType",
     "value": "QShaderLanguage::Vec3"
    },
    "secondType": {
     "type": "QShaderLanguage::VariableType",
     "value": "QShaderLanguage::Float"
    },
    "outputType": {
     "type": "QShaderLanguage::VariableType",
     "value": "QShaderLanguage::Vec3"
    }
   },
   "type": "BINARY_MATH_OPERATION",
   "uuid": "{2b503957-950d-4b0b-9dbb-7ea4a493ba82}"
  },
  {
   "layers": [],
   "parameters": {
    "type": {
     "type": "QShaderLanguage::VariableType",
     "value": "QShaderLanguage::Vec3"
    }
   },
   "type": "MIX",
   "uuid": "{f320ead4-e081-41e4-84a0-56fa919cebbc}"
  },
  {
   "layers": [],
   "parameters": {
    "operation": "*",
    "firstType": {
     "type": "QShaderLanguage::VariableType",
     "value": "QShaderLanguage::Vec3"
    },
    "secondType": {
     "type": "QShaderLanguage::VariableType",
     "value": "QShaderLanguage::Vec3"
    },
    "outputType": {
     "type": "QShaderLanguage::VariableType",
     "value": "QShaderLanguage::Vec3"
    }
   },
   "type": "BINARY_MATH_OPERATION",
   "uuid": "{42230364-4634-480b-b439-4d400ffbb7e1}"
  },
  {
   "layers": [],
   "parameters": {
    "operation": "*",
    "firstType": {
     "type": "QShaderLanguage::VariableType",
     "value": "QShaderLanguage::Float"
    },
    "secondType": {
     "type": "QShaderLanguage::VariableType",
     "value": "QShaderLanguage::Vec3"
    },
    "outputType": {
     "type": "QShaderLanguage::VariableType",
     "value": "QShaderLanguage::Vec3"
    }
   },
   "type": "BINARY_MATH_OPERATION",
   "uuid": "{5cac5aba-b459-4f27-8c7a-cfae47bac022}"
  },
  {
   "layers": [],
   "parameters": {
    "operation": "+",
    "firstType": {
     "type": "QShaderLanguage::VariableType",
     "value": "QShaderLanguage::Vec3"
    },
    "secondType": {
     "type": "QShaderLanguage::VariableType",
     "value": "QShaderLanguage::Vec3"
    },
    "outputType": {
     "type": "QShaderLanguage::VariableType",
     "value": "QShaderLanguage::Vec3"
    }
   },
   "type": "BINARY_MATH_OPERATION",
   "uuid": "{e326a4c5-01bb-4d63-a137-a2382c3684c9}"
  },
  {
   "layers": [],
   "parameters": {
    "operation": "*",
    "firstType": {
     "type": "QShaderLanguage::VariableType",
     "value": "QShaderLanguage::Vec3"
    },
    "secondType": {
     "type": "QShaderLanguage::VariableType",
     "value": "QShaderLanguage::Vec3"
    },
    "outputType": {
     "type": "QShaderLanguage::VariableType",
     "value": "QShaderLanguage::Vec3"
    }
   },
   "type": "BINARY_MATH_OPERATION",
   "uuid": "{17fcc5b4-c430-44a6-a0fc-73f5863d8022}"
  },
  {
   "layers": [],
   "parameters": {
    "operation": "normalize",
    "firstType": {
     "type": "QShaderLanguage::VariableType",
     "value": "QShaderLanguage::Vec3"
    },
    "secondType": {
     "type": "QShaderLanguage::VariableType",
     "value": "QShaderLanguage::Float"
    },
    "outputType": {
     "type": "QShaderLanguage::VariableType",
     "value": "QShaderLanguage::Vec3"
    }
   },
   "type": "UNARY_MATH_FUNCTION",
   "uuid": "{f962815c-291a-49e3-af5c-e61cb2287572}"
  },
  {
   "layers": [],
   "parameters": {
    "operation": "+",
    "firstType": {
     "type": "QShaderLanguage::VariableType",
     "value": "QShaderLanguage::Vec3"
    },
    "secondType": {
     "type": "QShaderLanguage::VariableType",
     "value": "QShaderLanguage::Vec3"
    },
    "outputType": {
     "type": "QShaderLanguage::VariableType",
     "value": "QShaderLanguage::Vec3"
    }
   },
   "type": "BINARY_MATH_OPERATION",
   "uuid": "{44ebc617-fb9b-4665-85f4-3575c7051dad}"
  },
  {
   "layers": [],
   "parameters": {
    "operation": "*",
    "firstType": {
     "type": "QShaderLanguage::VariableType",
     "value": "QShaderLanguage::Vec3"
    },
    "secondType": {
     "type": "QShaderLanguage::VariableType",
     "value": "QShaderLanguage::Vec3"
    },
    "outputType": {
     "type": "QShaderLanguage::VariableType",
     "value": "QShaderLanguage::Vec3"
    }
   },
   "type": "BINARY_MATH_OPERATION",
   "uuid": "{72566329-b942-4097-b25c-6e320961281a}"
  },
  {
   "layers": [],
   "parameters": {
    "operation": "*",
    "firstType": {
     "type": "QShaderLanguage::VariableType",
     "value": "QShaderLanguage::Vec3"
    },
    "secondType": {
     "type": "QShaderLanguage::VariableType",
     "value": "QShaderLanguage::Vec3"
    },
    "outputType": {
     "type": "QShaderLanguage::VariableType",
     "value": "QShaderLanguage::Vec3"
    }
   },
   "type": "BINARY_MATH_OPERATION",
   "uuid": "{e9a68ed4-0ea4-4e80-8ff3-84d32ca30086}"
  },
  {
   "layers": [],
   "parameters": {},
   "type": "VECT_TRANSFORM",
   "uuid": "{1279ed9d-65c9-423a-adba-ab2ff2ffbc7d}"
  },
  {
   "layers": [],
   "parameters": {},
   "type": "NEW_GEOMETRY",
   "uuid": "{1d8110a5-218f-4247-92c0-31568f97f6f7}"
  },
  {
   "layers": [],
   "parameters": {
    "operation": "*",
    "firstType": {
     "type": "QShaderLanguage::VariableType",
     "value": "QShaderLanguage::Vec3"
    },
    "secondType": {
     "type": "QShaderLanguage::VariableType",
     "value": "QShaderLanguage::Vec3"
    },
    "outputType": {
     "type": "QShaderLanguage::VariableType",
     "value": "QShaderLanguage::Vec3"
    }
   },
   "type": "BINARY_MATH_OPERATION",
   "uuid": "{0bf02c60-82dd-46ad-9003-f23a3703be46}"
  },
  {
   "layers": [],
   "parameters": {
    "operation": "*",
    "firstType": {
     "type": "QShaderLanguage::VariableType",
     "value": "QShaderLanguage::Vec3"
    },
    "secondType": {
     "type": "QShaderLanguage::VariableType",
     "value": "QShaderLanguage::Float"
    },
    "outputType": {
     "type": "QShaderLanguage::VariableType",
     "value": "QShaderLanguage::Vec3"
    }
   },
   "type": "BINARY_MATH_OPERATION",
   "uuid": "{171d292c-39f7-4b18-8462-198a2659dca9}"
  },
  {
   "layers": [],
   "parameters": {
    "operation": "*",
    "firstType": {
     "type": "QShaderLanguage::VariableType",
     "value": "QShaderLanguage::Vec3"
    },
    "secondType": {
     "type": "QShaderLanguage::VariableType",
     "value": "QShaderLanguage::Vec3"
    },
    "outputType": {
     "type": "QShaderLanguage::VariableType",
     "value": "QShaderLanguage::Vec3"
    }
   },
   "type": "BINARY_MATH_OPERATION",
   "uuid": "{fcf9fb09-fa60-4dd1-b2e6-26a926c2487a}"
  },
  {
   "layers": [],
   "parameters": {
    "defaultColor": "1.0, 1.0, 1.0, 1.0",
    "name": "reflectionMap",
    "condition": "usesReflectionMap",
    "linearizer": "sRGBtoLinear"
   },
   "type": "TEX_IMAGE",
   "uuid": "{10df6f24-3729-4b93-97a0-c0cf31df4b82}"
  },
  {
   "layers": [],
   "parameters": {
    "defaultColor": "1.0, 1.0, 1.0, 1.0",
    "name": "diffuseMap",
    "condition": "usesDiffuseMap",
    "linearizer": "sRGBtoLinear"
   },
   "type": "TEX_IMAGE",
   "uuid": "{94c4b9c1-ab8c-48b4-8b1b-6bc515fd0cb4}"
  },
  {
   "layers": [],
   "parameters": {
    "clamp": {
     "type": "QShaderLanguage::Bool",
     "value": "false"
    },
    "operation": "-",
    "firstType": {
     "type": "QShaderLanguage::VariableType",
     "value": "QShaderLanguage::Float"
    },
    "secondType": {
     "type": "QShaderLanguage::VariableType",
     "value": "QShaderLanguage::Float"
    },
    "outputType": {
     "type": "QShaderLanguage::VariableType",
     "value": "QShaderLanguage::Float"
    }
   },
   "type": "BINARY_MATH_OPERATION",
   "uuid": "{b2ab9d97-d23e-4d76-bae3-50a8c2a2016a}"
  },
  {
   "layers": [],
   "parameters": {},
   "type": "SEPXYZ",
   "uuid": "{4dc660da-b7bb-405d-974c-de252eac8cfd}"
  },
  {
   "layers": [],
   "parameters": {
    "clamp": {
     "type": "QShaderLanguage::Bool",
     "value": "false"
    },
    "operation": "*",
    "firstType": {
     "type": "QShaderLanguage::VariableType",
     "value": "QShaderLanguage::Float"
    },
    "secondType": {
     "type": "QShaderLanguage::VariableType",
     "value": "QShaderLanguage::Float"
    },
    "outputType": {
     "type": "QShaderLanguage::VariableType",
     "value": "QShaderLanguage::Float"
    }
   },
   "type": "BINARY_MATH_OPERATION",
   "uuid": "{bc218427-3db7-4a5b-b752-e81e6a4c7248}"
  },
  {
   "layers": [],
   "parameters": {},
   "type": "TEX_COORD",
   "uuid": "{c5f1c2b8-872f-4454-af6b-34012d318598}"
  },
  {
   "layers": [],
   "parameters": {
    "type": {
     "type": "QShaderLanguage::VariableType",
     "value": "QShaderLanguage::Vec3"
    }
   },
   "type": "MIX",
   "uuid": "{26ece481-79ca-469d-bbc4-e376f6e97491}"
  },
  {
   "layers": [],
   "parameters": {},
   "type": "VERTEX_COLOR",
   "uuid": "{48b05aee-329c-49c6-847a-1fa6759742fd}"
  },
  {
   "layers": [],
   "parameters": {
    "type": {
     "type": "QShaderLanguage::VariableType",
     "value": "QShaderLanguage::Vec3"
    }
   },
   "type": "MIX",
   "uuid": "{8c2c70fd-71b0-428a-963c-2bb92208b514}"
  },
  {
   "layers": [],
   "parameters": {
    "type": {
     "type": "QShaderLanguage::VariableType",
     "value": "QShaderLanguage::Float"
    }
   },
   "type": "CLAMP",
   "uuid": "{1acd904b-51de-4c19-8728-60fc879586d2}"
  },
  {
   "layers": [],
   "parameters": {
    "clamp": {
     "type": "QShaderLanguage::Bool",
     "value": "false"
    },
    "operation": "*",
    "firstType": {
     "type": "QShaderLanguage::VariableType",
     "value": "QShaderLanguage::Float"
    },
    "secondType": {
     "type": "QShaderLanguage::VariableType",
     "value": "QShaderLanguage::Float"
    },
    "outputType": {
     "type": "QShaderLanguage::VariableType",
     "value": "QShaderLanguage::Float"
    }
   },
   "type": "BINARY_MATH_OPERATION",
   "uuid": "{aeafa431-30d0-4078-85e7-7c414dc6ebd3}"
  },
  {
   "layers": [],
   "parameters": {},
   "type": "SEPXYZ",
   "uuid": "{fe952e93-e0a1-4e53-8ce0-4baef761e93b}"
  },
  {
   "layers": [],
   "parameters": {},
   "type": "NEW_GEOMETRY",
   "uuid": "{66b262e0-1f16-449b-a4af-37832350a0a3}"
  },
  {
   "layers": [],
   "parameters": {
    "operation": "*",
    "firstType": {
     "type": "QShaderLanguage::VariableType",
     "value": "QShaderLanguage::Vec3"
    },
    "secondType": {
     "type": "QShaderLanguage::VariableType",
     "value": "QShaderLanguage::Vec3"
    },
    "outputType": {
     "type": "QShaderLanguage::VariableType",
     "value": "QShaderLanguage::Vec3"
    }
   },
   "type": "BINARY_MATH_OPERATION",
   "uuid": "{a90f6c4c-4292-4283-a212-a6f950104918}"
  },
  {
   "layers": [],
   "parameters": {
    "operation": "*",
    "firstType": {
     "type": "QShaderLanguage::VariableType",
     "value": "QShaderLanguage::Vec3"
    },
    "secondType": {
     "type": "QShaderLanguage::VariableType",
     "value": "QShaderLanguage::Vec3"
    },
    "outputType": {
     "type": "QShaderLanguage::VariableType",
     "value": "QShaderLanguage::Vec3"
    }
   },
   "type": "BINARY_MATH_OPERATION",
   "uuid": "{0c2c022b-adc8-4f17-a74c-046e6ab72593}"
  },
  {
   "layers": [],
   "parameters": {
    "type": {
     "type": "QShaderLanguage::VariableType",
     "value": "QShaderLanguage::Vec3"
    }
   },
   "type": "MIX",
   "uuid": "{5c074d82-1fe1-4217-824b-e9d2ea5c5462}"
  },
  {
   "layers": [],
   "parameters": {},
   "type": "MATERIAL_PROPERTIES",
   "uuid": "{b5d87116-b277-45ec-97de-925c5a5c394d}"
  },
  {
   "layers": [],
   "parameters": {},
   "type": "MATERIAL_OUTPUT",
   "uuid": "{6e2a11aa-d1f9-42af-b2ea-04441c5c2f2b}"
  },
  {
   "layers": [],
   "parameters": {},
   "type": "COLOR_TO_SHADER",
   "uuid": "{9115d463-0494-47d4-be3f-a5ce97c1e19b}"
  },
  {
   "layers": [],
   "parameters": {
    "constant": "0.5,0.5,0.0",
    "type": {
     "type": "QShaderLanguage::VariableType",
     "value": "QShaderLanguage::Vec3"
    }
   },
   "type": "constant",
   "uuid": "{69b2b677-e5d4-4cba-8a43-72b359ed8d69}"
  },
  {
   "layers": [],
   "parameters": {
    "constant": "0.5,0.5,0.0",
    "type": {
     "type": "QShaderLanguage::VariableType",
     "value": "QShaderLanguage::Vec3"
    }
   },
   "type": "constant",
   "uuid": "{1ab51569-ddfb-4c2c-bd81-1167c9f28824}"
  },
  {
   "layers": [],
   "parameters": {
    "constant": "1.0,1.0,-1.0",
    "type": {
     "type": "QShaderLanguage::VariableType",
     "value": "QShaderLanguage::Vec3"
    }
   },
   "type": "constant",
   "uuid": "{48c493b8-5531-4127-8da9-6d8f5ae896f6}"
  },
  {
   "layers": [],
   "parameters": {
    "constant": "1.0,1.0,0.0",
    "type": {
     "type": "QShaderLanguage::VariableType",
     "value": "QShaderLanguage::Vec3"
    }
   },
   "type": "constant",
   "uuid": "{39f9ce80-d5aa-4bc3-a3cf-ceaaae1469fc}"
  },
  {
   "layers": [],
   "parameters": {
    "constant": "1.0",
    "type": {
     "type": "QShaderLanguage::VariableType",
     "value": "QShaderLanguage::Float"
    }
   },
   "type": "constant",
   "uuid": "{f00c7eac-159a-4fbd-9a9a-2a1b876ad56d}"
  },
  {
   "layers": [],
   "parameters": {
    "constant": "1.0,1.0,1.0",
    "type": {
     "type": "QShaderLanguage::VariableType",
     "value": "QShaderLanguage::Vec3"
    }
   },
   "type": "constant",
   "uuid": "{cb6ca812-c59e-428a-a69a-75a724a96992}"
  },
  {
   "layers": [],
   "parameters": {
    "constant": "0.0",
    "type": {
     "type": "QShaderLanguage::VariableType",
     "value": "QShaderLanguage::Float"
    }
   },
   "type": "constant",
   "uuid": "{20c9902d-1188-4b9e-81ed-05d75930a621}"
  },
  {
   "layers": [],
   "parameters": {
    "constant": "1.0",
    "type": {
     "type": "QShaderLanguage::VariableType",
     "value": "QShaderLanguage::Float"
    }
   },
   "type": "constant",
   "uuid": "{dd59ce2d-9947-4e35-a388-c1d9599b3f20}"
  },
  {
   "layers": [],
   "parameters": {
    "constant": "-1.0",
    "type": {
     "type": "QShaderLanguage::VariableType",
     "value": "QShaderLanguage::Float"
    }
   },
   "type": "constant",
   "uuid": "{b6927083-15ba-4d08-bf48-bbd6d69271fa}"
  },
  {
   "layers": [],
   "parameters": {
    "constant": "1.0,1.0,1.0",
    "type": {
     "type": "QShaderLanguage::VariableType",
     "value": "QShaderLanguage::Vec3"
    }
   },
   "type": "constant",
   "uuid": "{e520758f-3351-45cd-ae62-da2984290f83}"
  }
 ],
 "edges": [
  {
   "layers": [],
   "sourceUuid": "{b5d87116-b277-45ec-97de-925c5a5c394d}",
   "sourcePort": "reflectionInnerFilter",
   "targetUuid": "{8c2c70fd-71b0-428a-963c-2bb92208b514}",
   "targetPort": "input1"
  },
  {
   "layers": [],
   "sourceUuid": "{b5d87116-b277-45ec-97de-925c5a5c394d}",
   "sourcePort": "reflectionOuterFilter",
   "targetUuid": "{8c2c70fd-71b0-428a-963c-2bb92208b514}",
   "targetPort": "input2"
  },
  {
   "layers": [],
   "sourceUuid": "{b5d87116-b277-45ec-97de-925c5a5c394d}",
   "sourcePort": "diffuseInnerFilter",
   "targetUuid": "{f320ead4-e081-41e4-84a0-56fa919cebbc}",
   "targetPort": "input1"
  },
  {
   "layers": [],
   "sourceUuid": "{b5d87116-b277-45ec-97de-925c5a5c394d}",
   "sourcePort": "diffuseOuterFilter",
   "targetUuid": "{f320ead4-e081-41e4-84a0-56fa919cebbc}",
   "targetPort": "input2"
  },
  {
   "layers": [],
   "sourceUuid": "{8c2c70fd-71b0-428a-963c-2bb92208b514}",
   "sourcePort": "mixed",
   "targetUuid": "{fcf9fb09-fa60-4dd1-b2e6-26a926c2487a}",
   "targetPort": "input0"
  },
  {
   "layers": [],
   "sourceUuid": "{f320ead4-e081-41e4-84a0-56fa919cebbc}",
   "sourcePort": "mixed",
   "targetUuid": "{42230364-4634-480b-b439-4d400ffbb7e1}",
   "targetPort": "input0"
  },
  {
   "layers": [],
   "sourceUuid": "{fcf9fb09-fa60-4dd1-b2e6-26a926c2487a}",
   "sourcePort": "output0",
   "targetUuid": "{2b503957-950d-4b0b-9dbb-7ea4a493ba82}",
   "targetPort": "input0"
  },
  {
   "layers": [],
   "sourceUuid": "{2b503957-950d-4b0b-9dbb-7ea4a493ba82}",
   "sourcePort": "output0",
   "targetUuid": "{e2f0826e-34b7-4e36-8cc1-1ef9eb7de8fd}",
   "targetPort": "input0"
  },
  {
   "layers": [],
   "sourceUuid": "{5cac5aba-b459-4f27-8c7a-cfae47bac022}",
   "sourcePort": "output0",
   "targetUuid": "{e2f0826e-34b7-4e36-8cc1-1ef9eb7de8fd}",
   "targetPort": "input1"
  },
  {
   "layers": [],
   "sourceUuid": "{e2f0826e-34b7-4e36-8cc1-1ef9eb7de8fd}",
   "sourcePort": "output0",
   "targetUuid": "{0c2c022b-adc8-4f17-a74c-046e6ab72593}",
   "targetPort": "input1"
  },
  {
   "layers": [],
   "sourceUuid": "{b5d87116-b277-45ec-97de-925c5a5c394d}",
   "sourcePort": "reflectionGain",
   "targetUuid": "{2b503957-950d-4b0b-9dbb-7ea4a493ba82}",
   "targetPort": "input1"
  },
  {
   "layers": [],
   "sourceUuid": "{b5d87116-b277-45ec-97de-925c5a5c394d}",
   "sourcePort": "diffuseGain",
   "targetUuid": "{5cac5aba-b459-4f27-8c7a-cfae47bac022}",
   "targetPort": "input0"
  },
  {
   "layers": [],
   "sourceUuid": "{42230364-4634-480b-b439-4d400ffbb7e1}",
   "sourcePort": "output0",
   "targetUuid": "{5cac5aba-b459-4f27-8c7a-cfae47bac022}",
   "targetPort": "input1"
  },
  {
   "layers": [],
   "sourceUuid": "{1d8110a5-218f-4247-92c0-31568f97f6f7}",
   "sourcePort": "normal",
   "targetUuid": "{1279ed9d-65c9-423a-adba-ab2ff2ffbc7d}",
   "targetPort": "input"
  },
  {
   "layers": [],
   "sourceUuid": "{1279ed9d-65c9-423a-adba-ab2ff2ffbc7d}",
   "sourcePort": "transformed",
   "targetUuid": "{e9a68ed4-0ea4-4e80-8ff3-84d32ca30086}",
   "targetPort": "input0"
  },
  {
   "layers": [],
   "sourceUuid": "{e9a68ed4-0ea4-4e80-8ff3-84d32ca30086}",
   "sourcePort": "output0",
   "targetUuid": "{72566329-b942-4097-b25c-6e320961281a}",
   "targetPort": "input0"
  },
  {
   "layers": [],
   "sourceUuid": "{72566329-b942-4097-b25c-6e320961281a}",
   "sourcePort": "output0",
   "targetUuid": "{44ebc617-fb9b-4665-85f4-3575c7051dad}",
   "targetPort": "input0"
  },
  {
   "layers": [],
   "sourceUuid": "{0bf02c60-82dd-46ad-9003-f23a3703be46}",
   "sourcePort": "output0",
   "targetUuid": "{44ebc617-fb9b-4665-85f4-3575c7051dad}",
   "targetPort": "input1"
  },
  {
   "layers": [],
   "sourceUuid": "{44ebc617-fb9b-4665-85f4-3575c7051dad}",
   "sourcePort": "output0",
   "targetUuid": "{f962815c-291a-49e3-af5c-e61cb2287572}",
   "targetPort": "input0"
  },
  {
   "layers": [],
   "sourceUuid": "{b5d87116-b277-45ec-97de-925c5a5c394d}",
   "sourcePort": "normalScaling",
   "targetUuid": "{72566329-b942-4097-b25c-6e320961281a}",
   "targetPort": "input1"
  },
  {
   "layers": [],
   "sourceUuid": "{b5d87116-b277-45ec-97de-925c5a5c394d}",
   "sourcePort": "normalDisturb",
   "targetUuid": "{0bf02c60-82dd-46ad-9003-f23a3703be46}",
   "targetPort": "input0"
  },
  {
   "layers": [],
   "sourceUuid": "{17fcc5b4-c430-44a6-a0fc-73f5863d8022}",
   "sourcePort": "output0",
   "targetUuid": "{e326a4c5-01bb-4d63-a137-a2382c3684c9}",
   "targetPort": "input0"
  },
  {
   "layers": [],
   "sourceUuid": "{f962815c-291a-49e3-af5c-e61cb2287572}",
   "sourcePort": "output0",
   "targetUuid": "{17fcc5b4-c430-44a6-a0fc-73f5863d8022}",
   "targetPort": "input0"
  },
  {
   "layers": [],
   "sourceUuid": "{4dc660da-b7bb-405d-974c-de252eac8cfd}",
   "sourcePort": "z",
   "targetUuid": "{b2ab9d97-d23e-4d76-bae3-50a8c2a2016a}",
   "targetPort": "input1"
  },
  {
   "layers": [],
   "sourceUuid": "{b2ab9d97-d23e-4d76-bae3-50a8c2a2016a}",
   "sourcePort": "output0",
   "targetUuid": "{bc218427-3db7-4a5b-b752-e81e6a4c7248}",
   "targetPort": "input0"
  },
  {
   "layers": [],
   "sourceUuid": "{b2ab9d97-d23e-4d76-bae3-50a8c2a2016a}",
   "sourcePort": "output0",
   "targetUuid": "{bc218427-3db7-4a5b-b752-e81e6a4c7248}",
   "targetPort": "input1"
  },
  {
   "layers": [],
   "sourceUuid": "{bc218427-3db7-4a5b-b752-e81e6a4c7248}",
   "sourcePort": "output0",
   "targetUuid": "{8c2c70fd-71b0-428a-963c-2bb92208b514}",
   "targetPort": "fac"
  },
  {
   "layers": [],
   "sourceUuid": "{bc218427-3db7-4a5b-b752-e81e6a4c7248}",
   "sourcePort": "output0",
   "targetUuid": "{f320ead4-e081-41e4-84a0-56fa919cebbc}",
   "targetPort": "fac"
  },
  {
   "layers": [],
   "sourceUuid": "{f962815c-291a-49e3-af5c-e61cb2287572}",
   "sourcePort": "output0",
   "targetUuid": "{4dc660da-b7bb-405d-974c-de252eac8cfd}",
   "targetPort": "vector"
  },
  {
   "layers": [],
   "sourceUuid": "{48b05aee-329c-49c6-847a-1fa6759742fd}",
   "sourcePort": "color",
   "targetUuid": "{26ece481-79ca-469d-bbc4-e376f6e97491}",
   "targetPort": "input2"
  },
  {
   "layers": [],
   "sourceUuid": "{26ece481-79ca-469d-bbc4-e376f6e97491}",
   "sourcePort": "mixed",
   "targetUuid": "{171d292c-39f7-4b18-8462-198a2659dca9}",
   "targetPort": "input0"
  },
  {
   "layers": [],
   "sourceUuid": "{b5d87116-b277-45ec-97de-925c5a5c394d}",
   "sourcePort": "postVertexColor",
   "targetUuid": "{26ece481-79ca-469d-bbc4-e376f6e97491}",
   "targetPort": "fac"
  },
  {
   "layers": [],
   "sourceUuid": "{b5d87116-b277-45ec-97de-925c5a5c394d}",
   "sourcePort": "postGain",
   "targetUuid": "{171d292c-39f7-4b18-8462-198a2659dca9}",
   "targetPort": "input1"
  },
  {
   "layers": [],
   "sourceUuid": "{171d292c-39f7-4b18-8462-198a2659dca9}",
   "sourcePort": "output0",
   "targetUuid": "{0c2c022b-adc8-4f17-a74c-046e6ab72593}",
   "targetPort": "input0"
  },
  {
   "layers": [],
   "sourceUuid": "{10df6f24-3729-4b93-97a0-c0cf31df4b82}",
   "sourcePort": "color",
   "targetUuid": "{fcf9fb09-fa60-4dd1-b2e6-26a926c2487a}",
   "targetPort": "input1"
  },
  {
   "layers": [],
   "sourceUuid": "{e326a4c5-01bb-4d63-a137-a2382c3684c9}",
   "sourcePort": "output0",
   "targetUuid": "{10df6f24-3729-4b93-97a0-c0cf31df4b82}",
   "targetPort": "vector"
  },
  {
   "layers": [],
   "sourceUuid": "{94c4b9c1-ab8c-48b4-8b1b-6bc515fd0cb4}",
   "sourcePort": "color",
   "targetUuid": "{42230364-4634-480b-b439-4d400ffbb7e1}",
   "targetPort": "input1"
  },
  {
   "layers": [],
   "sourceUuid": "{66b262e0-1f16-449b-a4af-37832350a0a3}",
   "sourcePort": "normal",
   "targetUuid": "{fe952e93-e0a1-4e53-8ce0-4baef761e93b}",
   "targetPort": "vector"
  },
  {
   "layers": [],
   "sourceUuid": "{fe952e93-e0a1-4e53-8ce0-4baef761e93b}",
   "sourcePort": "z",
   "targetUuid": "{aeafa431-30d0-4078-85e7-7c414dc6ebd3}",
   "targetPort": "input0"
  },
  {
   "layers": [],
   "sourceUuid": "{aeafa431-30d0-4078-85e7-7c414dc6ebd3}",
   "sourcePort": "output0",
   "targetUuid": "{1acd904b-51de-4c19-8728-60fc879586d2}",
   "targetPort": "value"
  },
  {
   "layers": [],
   "sourceUuid": "{1acd904b-51de-4c19-8728-60fc879586d2}",
   "sourcePort": "result",
   "targetUuid": "{5c074d82-1fe1-4217-824b-e9d2ea5c5462}",
   "targetPort": "fac"
  },
  {
   "layers": [],
   "sourceUuid": "{5c074d82-1fe1-4217-824b-e9d2ea5c5462}",
   "sourcePort": "mixed",
   "targetUuid": "{a90f6c4c-4292-4283-a212-a6f950104918}",
   "targetPort": "input1"
  },
  {
   "layers": [],
   "sourceUuid": "{0c2c022b-adc8-4f17-a74c-046e6ab72593}",
   "sourcePort": "output0",
   "targetUuid": "{a90f6c4c-4292-4283-a212-a6f950104918}",
   "targetPort": "input0"
  },
  {
   "layers": [],
   "sourceUuid": "{a90f6c4c-4292-4283-a212-a6f950104918}",
   "sourcePort": "output0",
   "targetUuid": "{9115d463-0494-47d4-be3f-a5ce97c1e19b}",
   "targetPort": "color"
  },
  {
   "layers": [],
   "sourceUuid": "{b5d87116-b277-45ec-97de-925c5a5c394d}",
   "sourcePort": "postHemiFilter",
   "targetUuid": "{5c074d82-1fe1-4217-824b-e9d2ea5c5462}",
   "targetPort": "input2"
  },
  {
   "layers": [],
   "sourceUuid": "{9115d463-0494-47d4-be3f-a5ce97c1e19b}",
   "sourcePort": "shader",
   "targetUuid": "{6e2a11aa-d1f9-42af-b2ea-04441c5c2f2b}",
   "targetPort": "color"
  },
  {
   "layers": [],
   "sourceUuid": "{c5f1c2b8-872f-4454-af6b-34012d318598}",
   "sourcePort": "uv",
   "targetUuid": "{94c4b9c1-ab8c-48b4-8b1b-6bc515fd0cb4}",
   "targetPort": "vector"
  },
  {
   "layers": [],
   "sourceUuid": "{69b2b677-e5d4-4cba-8a43-72b359ed8d69}",
   "sourcePort": "value",
   "targetUuid": "{e326a4c5-01bb-4d63-a137-a2382c3684c9}",
   "targetPort": "input1"
  },
  {
   "layers": [],
   "sourceUuid": "{1ab51569-ddfb-4c2c-bd81-1167c9f28824}",
   "sourcePort": "value",
   "targetUuid": "{17fcc5b4-c430-44a6-a0fc-73f5863d8022}",
   "targetPort": "input1"
  },
  {
   "layers": [],
   "sourceUuid": "{48c493b8-5531-4127-8da9-6d8f5ae896f6}",
   "sourcePort": "value",
   "targetUuid": "{e9a68ed4-0ea4-4e80-8ff3-84d32ca30086}",
   "targetPort": "input1"
  },
  {
   "layers": [],
   "sourceUuid": "{39f9ce80-d5aa-4bc3-a3cf-ceaaae1469fc}",
   "sourcePort": "value",
   "targetUuid": "{0bf02c60-82dd-46ad-9003-f23a3703be46}",
   "targetPort": "input1"
  },
  {
   "layers": [],
   "sourceUuid": "{f00c7eac-159a-4fbd-9a9a-2a1b876ad56d}",
   "sourcePort": "value",
   "targetUuid": "{b2ab9d97-d23e-4d76-bae3-50a8c2a2016a}",
   "targetPort": "input0"
  },
  {
   "layers": [],
   "sourceUuid": "{cb6ca812-c59e-428a-a69a-75a724a96992}",
   "sourcePort": "value",
   "targetUuid": "{26ece481-79ca-469d-bbc4-e376f6e97491}",
   "targetPort": "input1"
  },
  {
   "layers": [],
   "sourceUuid": "{20c9902d-1188-4b9e-81ed-05d75930a621}",
   "sourcePort": "value",
   "targetUuid": "{1acd904b-51de-4c19-8728-60fc879586d2}",
   "targetPort": "min"
  },
  {
   "layers": [],
   "sourceUuid": "{dd59ce2d-9947-4e35-a388-c1d9599b3f20}",
   "sourcePort": "value",
   "targetUuid": "{1acd904b-51de-4c19-8728-60fc879586d2}",
   "targetPort": "max"
  },
  {
   "layers": [],
   "sourceUuid": "{b6927083-15ba-4d08-bf48-bbd6d69271fa}",
   "sourcePort": "value",
   "targetUuid": "{aeafa431-30d0-4078-85e7-7c414dc6ebd3}",
   "targetPort": "input1"
  },
  {
   "layers": [],
   "sourceUuid": "{e520758f-3351-45cd-ae62-da2984290f83}",
   "sourcePort": "value",
   "targetUuid": "{5c074d82-1fe1-4217-824b-e9d2ea5c5462}",
   "targetPort": "input1"
  },
  {
   "sourceUuid": "{b5d87116-b277-45ec-97de-925c5a5c394d}",
   "sourcePort": "usesReflectionMap",
   "targetUuid": "{10df6f24-3729-4b93-97a0-c0cf31df4b82}",
   "targetPort": "useTexture"
  },
  {
   "sourceUuid": "{b5d87116-b277-45ec-97de-925c5a5c394d}",
   "sourcePort": "reflectionMap",
   "targetUuid": "{10df6f24-3729-4b93-97a0-c0cf31df4b82}",
   "targetPort": "texture"
  },
  {
   "sourceUuid": "{b5d87116-b277-45ec-97de-925c5a5c394d}",
   "sourcePort": "usesDiffuseMap",
   "targetUuid": "{94c4b9c1-ab8c-48b4-8b1b-6bc515fd0cb4}",
   "targetPort": "useTexture"
  },
  {
   "sourceUuid": "{b5d87116-b277-45ec-97de-925c5a5c394d}",
   "sourcePort": "diffuseMap",
   "targetUuid": "{94c4b9c1-ab8c-48b4-8b1b-6bc515fd0cb4}",
   "targetPort": "texture"
  }
 ],
 "prototypes": {
  "BINARY_MATH_FUNCTION": {
   "inputs": [
    "input0",
    "input1"
   ],
   "outputs": [
    "output0"
   ],
   "parameters": {
    "firstType": {
     "type": "QShaderLanguage::VariableType",
     "value": "QShaderLanguage::Vec3"
    },
    "operation": "min",
    "outputType": {
     "type": "QShaderLanguage::VariableType",
     "value": "QShaderLanguage::Vec3"
    },
    "secondType": {
     "type": "QShaderLanguage::VariableType",
     "value": "QShaderLanguage::Vec3"
    }
   },
   "rules": [
    {
     "format": {
      "api": "OpenGLES",
      "major": 2,
      "minor": 0
     },
     "substitution": "highp $outputType $output0 = $operation($input0, $input1);"
    },
    {
     "format": {
      "api": "OpenGLCoreProfile",
      "major": 3,
      "minor": 0
     },
     "substitution": "$outputType $output0 = $operation($input0, $input1);"
    }
   ]
  },
  "BINARY_MATH_OPERATION": {
   "inputs": [
    "input0",
    "input1"
   ],
   "outputs": [
    "output0"
   ],
   "parameters": {
    "firstType": {
     "type": "QShaderLanguage::VariableType",
     "value": "QShaderLanguage::Vec3"
    },
    "operation": "+",
    "outputType": {
     "type": "QShaderLanguage::VariableType",
     "value": "QShaderLanguage::Vec3"
    },
    "secondType": {
     "type": "QShaderLanguage::VariableType",
     "value": "QShaderLanguage::Vec3"
    }
   },
   "rules": [
    {
     "format": {
      "api": "OpenGLES",
      "major": 2,
      "minor": 0
     },
     "substitution": "highp $outputType $output0 = ($input0) $operation ($input1);"
    },
    {
     "format": {
      "api": "OpenGLCoreProfile",
      "major": 3,
      "minor": 0
     },
     "substitution": "$outputType $output0 = ($input0) $operation ($input1);"
    }
   ]
  },
  "BSDF_TRANSPARENT": {
   "inputs": [
    "color"
   ],
   "outputs": [
    "bsdf"
   ],
   "rules": [
    {
     "format": {
      "api": "OpenGLES",
      "major": 2,
      "minor": 0
     },
     "substitution": "highp vec4 $bsdf = vec4($color.rgb, 1 - ($color.r + $color.g + $color.b) / 3);"
    },
    {
     "format": {
      "api": "OpenGLCoreProfile",
      "major": 3,
      "minor": 0
     },
     "substitution": "vec4 $bsdf = vec4($color.rgb, 1 - ($color.r + $color.g + $color.b) / 3);"
    }
   ]
  },
  "VECT_TRANSFORM": {
   "inputs": [
    "input"
   ],
   "outputs": [
    "transformed"
   ],
   "rules": [
    {
     "format": {
      "api": "OpenGLES",
      "major": 2,
      "minor": 0
     },
     "headerSnippets": [
      "#ifndef MODEL_VIEW",
      "#define MODEL_VIEW",
      "uniform highp mat4 modelView;",
      "#endif"
     ],
     "substitution": "highp vec3 $transformed = (modelView * vec4($input, 0.0)).xyz * vec3(1.0, 1.0, -1.0);"
    },
    {
     "format": {
      "api": "OpenGLCoreProfile",
      "major": 3,
      "minor": 0
     },
     "headerSnippets": [
      "#ifndef MODEL_VIEW",
      "#define MODEL_VIEW",
      "uniform  mat4 modelView;",
      "#endif"
     ],
     "substitution": "vec3 $transformed = (modelView * vec4($input, 0.0)).xyz * vec3(1.0, 1.0, -1.0);"
    }
   ]
  },
  "COLOR_TO_SHADER": {
   "inputs": [
    "color"
   ],
   "outputs": [
    "shader"
   ],
   "rules": [
    {
     "format": {
      "api": "OpenGLES",
      "major": 2,
      "minor": 0
     },
     "substitution": "highp vec4 $shader = vec4($color, 1.0);"
    },
    {
     "format": {
      "api": "OpenGLCoreProfile",
      "major": 3,
      "minor": 0
     },
     "substitution": "vec4 $shader = vec4($color, 1.0);"
    }
   ]
  },
  "BLEND_ALPHA": {
   "inputs": [
    "color",
    "alpha"
   ],
   "outputs": [
    "shader"
   ],
   "rules": [
    {
     "format": {
      "api": "OpenGLES",
      "major": 2,
      "minor": 0
     },
     "substitution": "highp vec4 $shader = vec4($color, $alpha);"
    },
    {
     "format": {
      "api": "OpenGLCoreProfile",
      "major": 3,
      "minor": 0
     },
     "substitution": "vec4 $shader = vec4($color, $alpha);"
    }
   ]
  },
  "COMBRGB": {
   "inputs": [
    "r",
    "g",
    "b"
   ],
   "outputs": [
    "image"
   ],
   "rules": [
    {
     "format": {
      "api": "OpenGLES",
      "major": 2,
      "minor": 0
     },
     "substitution": "highp vec3 $image = vec3($r, $g, $b);"
    },
    {
     "format": {
      "api": "OpenGLCoreProfile",
      "major": 3,
      "minor": 0
     },
     "substitution": "vec3 $image = vec3($r, $g, $b);"
    }
   ]
  },
  "COMBXYZ": {
   "inputs": [
    "x",
    "y",
    "z"
   ],
   "outputs": [
    "vector"
   ],
   "rules": [
    {
     "format": {
      "api": "OpenGLES",
      "major": 2,
      "minor": 0
     },
     "substitution": "highp vec3 $vector = vec3($x, $y, $z);"
    },
    {
     "format": {
      "api": "OpenGLCoreProfile",
      "major": 3,
      "minor": 0
     },
     "substitution": "vec3 $vector = vec3($x, $y, $z);"
    }
   ]
  },
  "MATERIAL_OUTPUT": {
   "inputs": [
    "color"
   ],
   "rules": [
    {
     "format": {
      "api": "OpenGLES",
      "major": 2,
      "minor": 0
     },
     "substitution": "gl_FragColor = clamp($color, 0.0, 1.0);"
    },
    {
     "format": {
      "api": "OpenGLES",
      "major": 3,
      "minor": 0
     },
     "headerSnippets": [
      "out highp vec4 fragColor;"
     ],
     "substitution": "fragColor = clamp($color, 0.0, 1.0);"
    },
    {
     "format": {
      "api": "OpenGLCoreProfile",
      "major": 3,
      "minor": 0
     },
     "headerSnippets": [
      "out vec4 fragColor;"
     ],
     "substitution": "fragColor = clamp($color, 0.0, 1.0);"
    }
   ]
  },
  "MIX": {
   "inputs": [
    "fac",
    "input1",
    "input2"
   ],
   "outputs": [
    "mixed"
   ],
   "parameters": {
    "type": {
     "type": "QShaderLanguage::VariableType",
     "value": "QShaderLanguage::Vec4"
    }
   },
   "rules": [
    {
     "format": {
      "api": "OpenGLES",
      "major": 2,
      "minor": 0
     },
     "substitution": "highp $type $mixed = mix($input1, $input2, $fac);"
    },
    {
     "format": {
      "api": "OpenGLCoreProfile",
      "major": 3,
      "minor": 0
     },
     "substitution": "$type $mixed = mix($input1, $input2, $fac);"
    }
   ]
  },
  "CLAMP": {
   "inputs": [
    "value",
    "min",
    "max"
   ],
   "outputs": [
    "result"
   ],
   "parameters": {
    "type": {
     "type": "QShaderLanguage::VariableType",
     "value": "QShaderLanguage::Vec4"
    }
   },
   "rules": [
    {
     "format": {
      "api": "OpenGLES",
      "major": 2,
      "minor": 0
     },
     "substitution": "highp $type $result = clamp($value, $min, $max);"
    },
    {
     "format": {
      "api": "OpenGLCoreProfile",
      "major": 3,
      "minor": 0
     },
     "substitution": "$type $result = clamp($value, $min, $max);"
    }
   ]
  },
  "NEW_GEOMETRY": {
   "outputs": [
    "position",
    "normal",
    "tangent"
   ],
   "rules": [
    {
     "format": {
      "api": "OpenGLES",
      "major": 2,
      "minor": 0
     },
     "headerSnippets": [
      "#ifndef NEW_GEOMETRY",
      "#define NEW_GEOMETRY",
      "varying highp vec3 worldPosition;",
      "varying highp vec3 worldNormal;",
      "varying highp vec4 worldTangent;",
      "#endif"
     ],
     "substitution": "highp vec3 $position = worldPosition;highp vec3 $normal = normalize(worldNormal);highp vec3 $tangent = worldTangent.xyz;"
    },
    {
     "format": {
      "api": "OpenGLCoreProfile",
      "major": 3,
      "minor": 0
     },
     "headerSnippets": [
      "#ifndef NEW_GEOMETRY",
      "#define NEW_GEOMETRY",
      "in vec3 worldPosition;",
      "in vec3 worldNormal;",
      "in vec4 vertexTan;",
      "#endif"
     ],
     "substitution": "vec3 $position = worldPosition;vec3 $normal = normalize(worldNormal);vec3 $tangent = worldTangent.xyz;"
    }
   ]
  },
  "SEPRGB": {
   "inputs": [
    "color"
   ],
   "outputs": [
    "r",
    "g",
    "b"
   ],
   "rules": [
    {
     "format": {
      "api": "OpenGLES",
      "major": 2,
      "minor": 0
     },
     "substitution": "highp float $r = $color.r;highp float $g = $color.g;highp float $b = $color.b;"
    },
    {
     "format": {
      "api": "OpenGLCoreProfile",
      "major": 3,
      "minor": 0
     },
     "substitution": "float $r = $color.r;float $g = $color.g;float $b = $color.b;"
    }
   ]
  },
  "SEPXYZ": {
   "inputs": [
    "vector"
   ],
   "outputs": [
    "x",
    "y",
    "z"
   ],
   "rules": [
    {
     "format": {
      "api": "OpenGLES",
      "major": 2,
      "minor": 0
     },
     "substitution": "highp float $x = $vector.x;highp float $y = $vector.y;highp float $z = $vector.z;"
    },
    {
     "format": {
      "api": "OpenGLCoreProfile",
      "major": 3,
      "minor": 0
     },
     "substitution": "float $x = $vector.x;float $y = $vector.y;float $z = $vector.z;"
    }
   ]
  },
  "TEX_COORD": {
   "outputs": [
    "uv"
   ],
   "rules": [
    {
     "format": {
      "api": "OpenGLES",
      "major": 2,
      "minor": 0
     },
     "headerSnippets": [
      "#ifndef TEX_COORD",
      "#define TEX_COORD",
      "varying highp vec2 texCoord;",
      "#endif"
     ],
     "substitution": "highp vec2 $uv = texCoord;"
    },
    {
     "format": {
      "api": "OpenGLCoreProfile",
      "major": 3,
      "minor": 0
     },
     "headerSnippets": [
      "#ifndef TEX_COORD",
      "#define TEX_COORD",
      "in vec2 texCoord;",
      "#endif"
     ],
     "substitution": "vec2 $uv = texCoord;"
    }
   ]
  },
  "TEX_IMAGE": {
   "inputs": [
    "texture",
    "useTexture",
    "vector"
   ],
   "outputs": [
    "color",
    "alpha",
    "inter"
   ],
   "parameters": {
    "defaultColor": "1.0, 1.0, 1.0, 1.0",
    "condition": "false",
    "name": "",
    "linearizer": ""
   },
   "rules": [
    {
     "format": {
      "api": "OpenGLES",
      "major": 2,
      "minor": 0
     },
     "headerSnippets": [
      "#ifndef SRGB_TO_LINEAR",
      "#define SRGB_TO_LINEAR",
      "highp vec3 sRGBtoLinear(highp vec3 srgb) { return pow(srgb, vec3(2.2)); }",
      "#endif"
     ],
     "substitution": "highp vec4 $inter = $useTexture ? texture2D($texture, $vector.xy) : vec4($defaultColor);highp vec3 $color = $linearizer($inter.rgb);highp float $alpha = $inter.a;"
    },
    {
     "format": {
      "api": "OpenGLCoreProfile",
      "major": 3,
      "minor": 0
     },
     "headerSnippets": [
      "#ifndef SRGB_TO_LINEAR",
      "#define SRGB_TO_LINEAR",
      "vec3 sRGBtoLinear(vec3 srgb) { return pow(srgb, vec3(2.2)); }",
      "#endif"
     ],
     "substitution": "vec4 $inter = $useTexture ? texture($texture, $vector.xy) : vec4($defaultColor);vec3 $color = $linearizer($inter.rgb);float $alpha = $inter.a;"
    }
   ]
  },
  "UNARY_MATH_FUNCTION": {
   "inputs": [
    "input0"
   ],
   "outputs": [
    "output0"
   ],
   "parameters": {
    "firstType": {
     "type": "QShaderLanguage::VariableType",
     "value": "QShaderLanguage::Vec3"
    },
    "operation": "round",
    "outputType": {
     "type": "QShaderLanguage::VariableType",
     "value": "QShaderLanguage::Vec3"
    }
   },
   "rules": [
    {
     "format": {
      "api": "OpenGLES",
      "major": 2,
      "minor": 0
     },
     "substitution": "highp $outputType $output0 = $operation($input0);"
    },
    {
     "format": {
      "api": "OpenGLCoreProfile",
      "major": 3,
      "minor": 0
     },
     "substitution": "$outputType $output0 = $operation($input0);"
    }
   ]
  },
  "VERTEX_COLOR": {
   "outputs": [
    "color",
    "alpha"
   ],
   "rules": [
    {
     "format": {
      "api": "OpenGLES",
      "major": 2,
      "minor": 0
     },
     "headerSnippets": [
      "#ifndef VERTEX_COLOR",
      "#define VERTEX_COLOR",
      "varying highp vec4 color;",
      "#endif"
     ],
     "substitution": "highp vec3 $color = color.rgb;highp float $alpha = color.a;"
    },
    {
     "format": {
      "api": "OpenGLCoreProfile",
      "major": 3,
      "minor": 0
     },
     "headerSnippets": [
      "#ifndef VERTEX_COLOR",
      "#define VERTEX_COLOR",
      "in vec4 color;",
      "#endif"
     ],
     "substitution": "vec3 $color = color.rgb;float $alpha = color.a;"
    }
   ]
  },
  "constant": {
   "outputs": [
    "value"
   ],
   "parameters": {
    "constant": "0.0",
    "type": {
     "type": "QShaderLanguage::VariableType",
     "value": "QShaderLanguage::Float"
    }
   },
   "rules": [
    {
     "format": {
      "api": "OpenGLES",
      "major": 2,
      "minor": 0
     },
     "substitution": "highp $type $value = $type($constant);"
    },
    {
     "format": {
      "api": "OpenGLCoreProfile",
      "major": 3,
      "minor": 0
     },
     "substitution": "$type $value = $type($constant);"
    }
   ]
  },
  "MATERIAL_PROPERTIES": {
   "outputs": [
    "usesReflectionMap",
    "reflectionMap",
    "usesDiffuseMap",
    "diffuseMap",
    "normalScaling",
    "normalDisturb",
    "reflectionGain",
    "reflectionInnerFilter",
    "reflectionOuterFilter",
    "diffuseGain",
    "diffuseInnerFilter",
    "diffuseOuterFilter",
    "postHemiFilter",
    "postVertexColor",
    "postGain"
   ],
   "rules": [
    {
     "format": {
      "api": "OpenGLES",
      "major": 2,
      "minor": 0
     },
     "headerSnippets": [
      "struct MaterialProperties {\n    bool usesReflectionMap;\n    highp sampler2D reflectionMap;\n    bool usesDiffuseMap;\n    highp sampler2D diffuseMap;\n    highp vec3 normalScaling;\n    highp vec3 normalDisturb;\n    highp float reflectionGain;\n    highp vec3 reflectionInnerFilter;\n    highp vec3 reflectionOuterFilter;\n    highp float diffuseGain;\n    highp vec3 diffuseInnerFilter;\n    highp vec3 diffuseOuterFilter;\n    highp vec3 postHemiFilter;\n    highp float postVertexColor;\n    highp float postGain;\n};\nuniform MaterialProperties properties;"
     ],
     "substitution": "MaterialProperties $properties = properties;bool $usesReflectionMap = properties.usesReflectionMap;highp sampler2D $reflectionMap = properties.reflectionMap;bool $usesDiffuseMap = properties.usesDiffuseMap;highp sampler2D $diffuseMap = properties.diffuseMap;highp vec3 $normalScaling = properties.normalScaling;highp vec3 $normalDisturb = properties.normalDisturb;highp float $reflectionGain = properties.reflectionGain;highp vec3 $reflectionInnerFilter = properties.reflectionInnerFilter;highp vec3 $reflectionOuterFilter = properties.reflectionOuterFilter;highp float $diffuseGain = properties.diffuseGain;highp vec3 $diffuseInnerFilter = properties.diffuseInnerFilter;highp vec3 $diffuseOuterFilter = properties.diffuseOuterFilter;highp vec3 $postHemiFilter = properties.postHemiFilter;highp float $postVertexColor = properties.postVertexColor;highp float $postGain = properties.postGain;"
    },
    {
     "format": {
      "api": "OpenGLCoreProfile",
      "major": 3,
      "minor": 0
     },
     "headerSnippets": [
      "struct MaterialProperties {\n    bool usesReflectionMap;\n    sampler2D reflectionMap;\n    bool usesDiffuseMap;\n    sampler2D diffuseMap;\n    vec3 normalScaling;\n    vec3 normalDisturb;\n    float reflectionGain;\n    vec3 reflectionInnerFilter;\n    vec3 reflectionOuterFilter;\n    float diffuseGain;\n    vec3 diffuseInnerFilter;\n    vec3 diffuseOuterFilter;\n    vec3 postHemiFilter;\n    float postVertexColor;\n    float postGain;\n};\nuniform MaterialProperties properties;"
     ],
     "substitution": "MaterialProperties $properties = properties;bool $usesReflectionMap = properties.usesReflectionMap;sampler2D $reflectionMap = properties.reflectionMap;bool $usesDiffuseMap = properties.usesDiffuseMap;sampler2D $diffuseMap = properties.diffuseMap;vec3 $normalScaling = properties.normalScaling;vec3 $normalDisturb = properties.normalDisturb;float $reflectionGain = properties.reflectionGain;vec3 $reflectionInnerFilter = properties.reflectionInnerFilter;vec3 $reflectionOuterFilter = properties.reflectionOuterFilter;float $diffuseGain = properties.diffuseGain;vec3 $diffuseInnerFilter = properties.diffuseInnerFilter;vec3 $diffuseOuterFilter = properties.diffuseOuterFilter;vec3 $postHemiFilter = properties.postHemiFilter;float $postVertexColor = properties.postVertexColor;float $postGain = properties.postGain;"
    }
   ]
  }
 }
}