{
 "nodes": [
  {
   "layers": [],
   "parameters": {
    "operation": "*",
    "firstType": {
     "type": "QShaderLanguage::VariableType",
     "value": "QShaderLanguage::Vec3"
    },
    "secondType": {
     "type": "QShaderLanguage::VariableType",
     "value": "QShaderLanguage::Vec3"
    },
    "outputType": {
     "type": "QShaderLanguage::VariableType",
     "value": "QShaderLanguage::Vec3"
    }
   },
   "type": "BINARY_MATH_OPERATION",
   "uuid": "{ab5ed22d-3d53-4f9c-8c49-50889f70e366}"
  },
  {
   "layers": [],
   "parameters": {
    "operation": "+",
    "firstType": {
     "type": "QShaderLanguage::VariableType",
     "value": "QShaderLanguage::Vec3"
    },
    "secondType": {
     "type": "QShaderLanguage::VariableType",
     "value": "QShaderLanguage::Vec3"
    },
    "outputType": {
     "type": "QShaderLanguage::VariableType",
     "value": "QShaderLanguage::Vec3"
    }
   },
   "type": "BINARY_MATH_OPERATION",
   "uuid": "{1d1a819e-0c9e-42fb-898c-35cbad2b0cbb}"
  },
  {
   "layers": [],
   "parameters": {
    "operation": "*",
    "firstType": {
     "type": "QShaderLanguage::VariableType",
     "value": "QShaderLanguage::Vec3"
    },
    "secondType": {
     "type": "QShaderLanguage::VariableType",
     "value": "QShaderLanguage::Float"
    },
    "outputType": {
     "type": "QShaderLanguage::VariableType",
     "value": "QShaderLanguage::Vec3"
    }
   },
   "type": "BINARY_MATH_OPERATION",
   "uuid": "{5c27f33a-ca1a-4c0a-9d92-ca514fa78e28}"
  },
  {
   "layers": [],
   "parameters": {
    "type": {
     "type": "QShaderLanguage::VariableType",
     "value": "QShaderLanguage::Vec3"
    }
   },
   "type": "MIX",
   "uuid": "{f0316566-028c-4319-8f63-530bfa223b94}"
  },
  {
   "layers": [],
   "parameters": {
    "operation": "*",
    "firstType": {
     "type": "QShaderLanguage::VariableType",
     "value": "QShaderLanguage::Vec3"
    },
    "secondType": {
     "type": "QShaderLanguage::VariableType",
     "value": "QShaderLanguage::Vec3"
    },
    "outputType": {
     "type": "QShaderLanguage::VariableType",
     "value": "QShaderLanguage::Vec3"
    }
   },
   "type": "BINARY_MATH_OPERATION",
   "uuid": "{cefc1697-6e06-4b54-96a0-17ae92acf86f}"
  },
  {
   "layers": [],
   "parameters": {
    "operation": "*",
    "firstType": {
     "type": "QShaderLanguage::VariableType",
     "value": "QShaderLanguage::Float"
    },
    "secondType": {
     "type": "QShaderLanguage::VariableType",
     "value": "QShaderLanguage::Vec3"
    },
    "outputType": {
     "type": "QShaderLanguage::VariableType",
     "value": "QShaderLanguage::Vec3"
    }
   },
   "type": "BINARY_MATH_OPERATION",
   "uuid": "{98666f5b-f624-4985-84b8-a0cb82cc3c27}"
  },
  {
   "layers": [],
   "parameters": {
    "operation": "+",
    "firstType": {
     "type": "QShaderLanguage::VariableType",
     "value": "QShaderLanguage::Vec3"
    },
    "secondType": {
     "type": "QShaderLanguage::VariableType",
     "value": "QShaderLanguage::Vec3"
    },
    "outputType": {
     "type": "QShaderLanguage::VariableType",
     "value": "QShaderLanguage::Vec3"
    }
   },
   "type": "BINARY_MATH_OPERATION",
   "uuid": "{10c582cc-ef71-4334-bfa9-90de649e6d17}"
  },
  {
   "layers": [],
   "parameters": {
    "operation": "*",
    "firstType": {
     "type": "QShaderLanguage::VariableType",
     "value": "QShaderLanguage::Vec3"
    },
    "secondType": {
     "type": "QShaderLanguage::VariableType",
     "value": "QShaderLanguage::Vec3"
    },
    "outputType": {
     "type": "QShaderLanguage::VariableType",
     "value": "QShaderLanguage::Vec3"
    }
   },
   "type": "BINARY_MATH_OPERATION",
   "uuid": "{4d7e7c05-cf78-458e-a1db-80a593545e7f}"
  },
  {
   "layers": [],
   "parameters": {
    "operation": "normalize",
    "firstType": {
     "type": "QShaderLanguage::VariableType",
     "value": "QShaderLanguage::Vec3"
    },
    "secondType": {
     "type": "QShaderLanguage::VariableType",
     "value": "QShaderLanguage::Float"
    },
    "outputType": {
     "type": "QShaderLanguage::VariableType",
     "value": "QShaderLanguage::Vec3"
    }
   },
   "type": "UNARY_MATH_FUNCTION",
   "uuid": "{9dc84391-4318-4456-ac61-8e3d2c979464}"
  },
  {
   "layers": [],
   "parameters": {
    "operation": "+",
    "firstType": {
     "type": "QShaderLanguage::VariableType",
     "value": "QShaderLanguage::Vec3"
    },
    "secondType": {
     "type": "QShaderLanguage::VariableType",
     "value": "QShaderLanguage::Vec3"
    },
    "outputType": {
     "type": "QShaderLanguage::VariableType",
     "value": "QShaderLanguage::Vec3"
    }
   },
   "type": "BINARY_MATH_OPERATION",
   "uuid": "{ff79458a-56e8-4922-9ab7-488ab8149e2e}"
  },
  {
   "layers": [],
   "parameters": {
    "operation": "*",
    "firstType": {
     "type": "QShaderLanguage::VariableType",
     "value": "QShaderLanguage::Vec3"
    },
    "secondType": {
     "type": "QShaderLanguage::VariableType",
     "value": "QShaderLanguage::Vec3"
    },
    "outputType": {
     "type": "QShaderLanguage::VariableType",
     "value": "QShaderLanguage::Vec3"
    }
   },
   "type": "BINARY_MATH_OPERATION",
   "uuid": "{499f35a6-3c81-407a-87ec-a4df1a97ce5c}"
  },
  {
   "layers": [],
   "parameters": {
    "operation": "*",
    "firstType": {
     "type": "QShaderLanguage::VariableType",
     "value": "QShaderLanguage::Vec3"
    },
    "secondType": {
     "type": "QShaderLanguage::VariableType",
     "value": "QShaderLanguage::Vec3"
    },
    "outputType": {
     "type": "QShaderLanguage::VariableType",
     "value": "QShaderLanguage::Vec3"
    }
   },
   "type": "BINARY_MATH_OPERATION",
   "uuid": "{a8d27533-c033-421d-b591-7936e2db7f75}"
  },
  {
   "layers": [],
   "parameters": {},
   "type": "VECT_TRANSFORM",
   "uuid": "{022023d6-cff8-4faa-bb4f-903aa4b0986d}"
  },
  {
   "layers": [],
   "parameters": {},
   "type": "NEW_GEOMETRY",
   "uuid": "{ac83b742-0776-4921-82f3-602eed7a989e}"
  },
  {
   "layers": [],
   "parameters": {
    "operation": "*",
    "firstType": {
     "type": "QShaderLanguage::VariableType",
     "value": "QShaderLanguage::Vec3"
    },
    "secondType": {
     "type": "QShaderLanguage::VariableType",
     "value": "QShaderLanguage::Vec3"
    },
    "outputType": {
     "type": "QShaderLanguage::VariableType",
     "value": "QShaderLanguage::Vec3"
    }
   },
   "type": "BINARY_MATH_OPERATION",
   "uuid": "{2da2a45d-b95a-4b3a-bcd7-bf1f54270a4f}"
  },
  {
   "layers": [],
   "parameters": {
    "clamp": {
     "type": "QShaderLanguage::Bool",
     "value": "false"
    },
    "operation": "-",
    "firstType": {
     "type": "QShaderLanguage::VariableType",
     "value": "QShaderLanguage::Float"
    },
    "secondType": {
     "type": "QShaderLanguage::VariableType",
     "value": "QShaderLanguage::Float"
    },
    "outputType": {
     "type": "QShaderLanguage::VariableType",
     "value": "QShaderLanguage::Float"
    }
   },
   "type": "BINARY_MATH_OPERATION",
   "uuid": "{565d287d-5e10-4b07-8712-eba9baee27c5}"
  },
  {
   "layers": [],
   "parameters": {},
   "type": "SEPXYZ",
   "uuid": "{c610b1a7-1e62-425b-af29-17151ee801c0}"
  },
  {
   "layers": [],
   "parameters": {
    "clamp": {
     "type": "QShaderLanguage::Bool",
     "value": "false"
    },
    "operation": "*",
    "firstType": {
     "type": "QShaderLanguage::VariableType",
     "value": "QShaderLanguage::Float"
    },
    "secondType": {
     "type": "QShaderLanguage::VariableType",
     "value": "QShaderLanguage::Float"
    },
    "outputType": {
     "type": "QShaderLanguage::VariableType",
     "value": "QShaderLanguage::Float"
    }
   },
   "type": "BINARY_MATH_OPERATION",
   "uuid": "{41bcaba1-ceae-41b3-bb57-96097e82cf7a}"
  },
  {
   "layers": [],
   "parameters": {},
   "type": "TEX_COORD",
   "uuid": "{960add03-2cc5-4d4e-9ccd-a527e58a7b0d}"
  },
  {
   "layers": [],
   "parameters": {},
   "type": "MATERIAL_OUTPUT",
   "uuid": "{fa5dbede-f517-469d-8d6d-d454d7bd4fcd}"
  },
  {
   "layers": [],
   "parameters": {},
   "type": "COLOR_TO_SHADER",
   "uuid": "{1c0f0d18-43a6-45d4-b844-0e0e576c3209}"
  },
  {
   "layers": [],
   "parameters": {
    "defaultColor": "1.0, 1.0, 1.0, 1.0",
    "name": "reflectionMap",
    "condition": "usesReflectionMap",
    "linearizer": "sRGBtoLinear"
   },
   "type": "TEX_IMAGE",
   "uuid": "{a337116c-5572-45b7-b647-5a16ce02d77e}"
  },
  {
   "layers": [],
   "parameters": {
    "defaultColor": "1.0, 1.0, 1.0, 1.0",
    "name": "diffuseMap",
    "condition": "usesDiffuseMap",
    "linearizer": "sRGBtoLinear"
   },
   "type": "TEX_IMAGE",
   "uuid": "{0dffcc07-e549-48fa-b269-8522619b7a29}"
  },
  {
   "layers": [],
   "parameters": {
    "type": {
     "type": "QShaderLanguage::VariableType",
     "value": "QShaderLanguage::Vec3"
    }
   },
   "type": "MIX",
   "uuid": "{ff1a638b-58c4-456d-a709-fd7b47a1ceb2}"
  },
  {
   "layers": [],
   "parameters": {
    "operation": "*",
    "firstType": {
     "type": "QShaderLanguage::VariableType",
     "value": "QShaderLanguage::Vec3"
    },
    "secondType": {
     "type": "QShaderLanguage::VariableType",
     "value": "QShaderLanguage::Vec3"
    },
    "outputType": {
     "type": "QShaderLanguage::VariableType",
     "value": "QShaderLanguage::Vec3"
    }
   },
   "type": "BINARY_MATH_OPERATION",
   "uuid": "{32993341-6ed9-4311-8997-885436810373}"
  },
  {
   "layers": [],
   "parameters": {
    "operation": "*",
    "firstType": {
     "type": "QShaderLanguage::VariableType",
     "value": "QShaderLanguage::Vec3"
    },
    "secondType": {
     "type": "QShaderLanguage::VariableType",
     "value": "QShaderLanguage::Float"
    },
    "outputType": {
     "type": "QShaderLanguage::VariableType",
     "value": "QShaderLanguage::Vec3"
    }
   },
   "type": "BINARY_MATH_OPERATION",
   "uuid": "{86baf388-487d-40a8-b2c9-20519b4cd7cb}"
  },
  {
   "layers": [],
   "parameters": {},
   "type": "VERTEX_COLOR",
   "uuid": "{9fec63e0-8ce8-4138-9d40-f09f701176d6}"
  },
  {
   "layers": [],
   "parameters": {
    "type": {
     "type": "QShaderLanguage::VariableType",
     "value": "QShaderLanguage::Vec3"
    }
   },
   "type": "MIX",
   "uuid": "{82bbac54-5751-474b-9d88-5d4f9fe4bb07}"
  },
  {
   "layers": [],
   "parameters": {},
   "type": "MATERIAL_PROPERTIES",
   "uuid": "{39cbb9e5-933a-4518-b3be-a17aeab9e68a}"
  },
  {
   "layers": [],
   "parameters": {
    "constant": "0.5,0.5,0.0",
    "type": {
     "type": "QShaderLanguage::VariableType",
     "value": "QShaderLanguage::Vec3"
    }
   },
   "type": "constant",
   "uuid": "{df2d6596-5a7d-4b5f-beed-20bac8139abc}"
  },
  {
   "layers": [],
   "parameters": {
    "constant": "0.5,0.5,0.0",
    "type": {
     "type": "QShaderLanguage::VariableType",
     "value": "QShaderLanguage::Vec3"
    }
   },
   "type": "constant",
   "uuid": "{0c86a6a5-abc2-4c55-b735-b490697d8cdf}"
  },
  {
   "layers": [],
   "parameters": {
    "constant": "1.0,1.0,-1.0",
    "type": {
     "type": "QShaderLanguage::VariableType",
     "value": "QShaderLanguage::Vec3"
    }
   },
   "type": "constant",
   "uuid": "{1fcefedd-9902-4f1f-aa37-106e196cc541}"
  },
  {
   "layers": [],
   "parameters": {
    "constant": "1.0,1.0,0.0",
    "type": {
     "type": "QShaderLanguage::VariableType",
     "value": "QShaderLanguage::Vec3"
    }
   },
   "type": "constant",
   "uuid": "{4b370c9f-81bf-4d67-b94d-7063c6e2c57a}"
  },
  {
   "layers": [],
   "parameters": {
    "constant": "1.0",
    "type": {
     "type": "QShaderLanguage::VariableType",
     "value": "QShaderLanguage::Float"
    }
   },
   "type": "constant",
   "uuid": "{99eafc52-e7a0-45bd-abdb-b053345d288b}"
  },
  {
   "layers": [],
   "parameters": {
    "constant": "1.0,1.0,1.0",
    "type": {
     "type": "QShaderLanguage::VariableType",
     "value": "QShaderLanguage::Vec3"
    }
   },
   "type": "constant",
   "uuid": "{9e3f1b54-dd6c-4e99-9f5b-94b01fe51471}"
  }
 ],
 "edges": [
  {
   "layers": [],
   "sourceUuid": "{39cbb9e5-933a-4518-b3be-a17aeab9e68a}",
   "sourcePort": "reflectionInnerFilter",
   "targetUuid": "{ff1a638b-58c4-456d-a709-fd7b47a1ceb2}",
   "targetPort": "input1"
  },
  {
   "layers": [],
   "sourceUuid": "{39cbb9e5-933a-4518-b3be-a17aeab9e68a}",
   "sourcePort": "reflectionOuterFilter",
   "targetUuid": "{ff1a638b-58c4-456d-a709-fd7b47a1ceb2}",
   "targetPort": "input2"
  },
  {
   "layers": [],
   "sourceUuid": "{39cbb9e5-933a-4518-b3be-a17aeab9e68a}",
   "sourcePort": "diffuseInnerFilter",
   "targetUuid": "{f0316566-028c-4319-8f63-530bfa223b94}",
   "targetPort": "input1"
  },
  {
   "layers": [],
   "sourceUuid": "{39cbb9e5-933a-4518-b3be-a17aeab9e68a}",
   "sourcePort": "diffuseOuterFilter",
   "targetUuid": "{f0316566-028c-4319-8f63-530bfa223b94}",
   "targetPort": "input2"
  },
  {
   "layers": [],
   "sourceUuid": "{ff1a638b-58c4-456d-a709-fd7b47a1ceb2}",
   "sourcePort": "mixed",
   "targetUuid": "{32993341-6ed9-4311-8997-885436810373}",
   "targetPort": "input0"
  },
  {
   "layers": [],
   "sourceUuid": "{f0316566-028c-4319-8f63-530bfa223b94}",
   "sourcePort": "mixed",
   "targetUuid": "{cefc1697-6e06-4b54-96a0-17ae92acf86f}",
   "targetPort": "input0"
  },
  {
   "layers": [],
   "sourceUuid": "{32993341-6ed9-4311-8997-885436810373}",
   "sourcePort": "output0",
   "targetUuid": "{5c27f33a-ca1a-4c0a-9d92-ca514fa78e28}",
   "targetPort": "input0"
  },
  {
   "layers": [],
   "sourceUuid": "{5c27f33a-ca1a-4c0a-9d92-ca514fa78e28}",
   "sourcePort": "output0",
   "targetUuid": "{1d1a819e-0c9e-42fb-898c-35cbad2b0cbb}",
   "targetPort": "input0"
  },
  {
   "layers": [],
   "sourceUuid": "{98666f5b-f624-4985-84b8-a0cb82cc3c27}",
   "sourcePort": "output0",
   "targetUuid": "{1d1a819e-0c9e-42fb-898c-35cbad2b0cbb}",
   "targetPort": "input1"
  },
  {
   "layers": [],
   "sourceUuid": "{1d1a819e-0c9e-42fb-898c-35cbad2b0cbb}",
   "sourcePort": "output0",
   "targetUuid": "{ab5ed22d-3d53-4f9c-8c49-50889f70e366}",
   "targetPort": "input1"
  },
  {
   "layers": [],
   "sourceUuid": "{ab5ed22d-3d53-4f9c-8c49-50889f70e366}",
   "sourcePort": "output0",
   "targetUuid": "{1c0f0d18-43a6-45d4-b844-0e0e576c3209}",
   "targetPort": "color"
  },
  {
   "layers": [],
   "sourceUuid": "{39cbb9e5-933a-4518-b3be-a17aeab9e68a}",
   "sourcePort": "reflectionGain",
   "targetUuid": "{5c27f33a-ca1a-4c0a-9d92-ca514fa78e28}",
   "targetPort": "input1"
  },
  {
   "layers": [],
   "sourceUuid": "{39cbb9e5-933a-4518-b3be-a17aeab9e68a}",
   "sourcePort": "diffuseGain",
   "targetUuid": "{98666f5b-f624-4985-84b8-a0cb82cc3c27}",
   "targetPort": "input0"
  },
  {
   "layers": [],
   "sourceUuid": "{cefc1697-6e06-4b54-96a0-17ae92acf86f}",
   "sourcePort": "output0",
   "targetUuid": "{98666f5b-f624-4985-84b8-a0cb82cc3c27}",
   "targetPort": "input1"
  },
  {
   "layers": [],
   "sourceUuid": "{ac83b742-0776-4921-82f3-602eed7a989e}",
   "sourcePort": "normal",
   "targetUuid": "{022023d6-cff8-4faa-bb4f-903aa4b0986d}",
   "targetPort": "input"
  },
  {
   "layers": [],
   "sourceUuid": "{022023d6-cff8-4faa-bb4f-903aa4b0986d}",
   "sourcePort": "transformed",
   "targetUuid": "{a8d27533-c033-421d-b591-7936e2db7f75}",
   "targetPort": "input0"
  },
  {
   "layers": [],
   "sourceUuid": "{a8d27533-c033-421d-b591-7936e2db7f75}",
   "sourcePort": "output0",
   "targetUuid": "{499f35a6-3c81-407a-87ec-a4df1a97ce5c}",
   "targetPort": "input0"
  },
  {
   "layers": [],
   "sourceUuid": "{499f35a6-3c81-407a-87ec-a4df1a97ce5c}",
   "sourcePort": "output0",
   "targetUuid": "{ff79458a-56e8-4922-9ab7-488ab8149e2e}",
   "targetPort": "input0"
  },
  {
   "layers": [],
   "sourceUuid": "{2da2a45d-b95a-4b3a-bcd7-bf1f54270a4f}",
   "sourcePort": "output0",
   "targetUuid": "{ff79458a-56e8-4922-9ab7-488ab8149e2e}",
   "targetPort": "input1"
  },
  {
   "layers": [],
   "sourceUuid": "{ff79458a-56e8-4922-9ab7-488ab8149e2e}",
   "sourcePort": "output0",
   "targetUuid": "{9dc84391-4318-4456-ac61-8e3d2c979464}",
   "targetPort": "input0"
  },
  {
   "layers": [],
   "sourceUuid": "{39cbb9e5-933a-4518-b3be-a17aeab9e68a}",
   "sourcePort": "normalScaling",
   "targetUuid": "{499f35a6-3c81-407a-87ec-a4df1a97ce5c}",
   "targetPort": "input1"
  },
  {
   "layers": [],
   "sourceUuid": "{39cbb9e5-933a-4518-b3be-a17aeab9e68a}",
   "sourcePort": "normalDisturb",
   "targetUuid": "{2da2a45d-b95a-4b3a-bcd7-bf1f54270a4f}",
   "targetPort": "input0"
  },
  {
   "layers": [],
   "sourceUuid": "{4d7e7c05-cf78-458e-a1db-80a593545e7f}",
   "sourcePort": "output0",
   "targetUuid": "{10c582cc-ef71-4334-bfa9-90de649e6d17}",
   "targetPort": "input0"
  },
  {
   "layers": [],
   "sourceUuid": "{9dc84391-4318-4456-ac61-8e3d2c979464}",
   "sourcePort": "output0",
   "targetUuid": "{4d7e7c05-cf78-458e-a1db-80a593545e7f}",
   "targetPort": "input0"
  },
  {
   "layers": [],
   "sourceUuid": "{c610b1a7-1e62-425b-af29-17151ee801c0}",
   "sourcePort": "z",
   "targetUuid": "{565d287d-5e10-4b07-8712-eba9baee27c5}",
   "targetPort": "input1"
  },
  {
   "layers": [],
   "sourceUuid": "{565d287d-5e10-4b07-8712-eba9baee27c5}",
   "sourcePort": "output0",
   "targetUuid": "{41bcaba1-ceae-41b3-bb57-96097e82cf7a}",
   "targetPort": "input0"
  },
  {
   "layers": [],
   "sourceUuid": "{565d287d-5e10-4b07-8712-eba9baee27c5}",
   "sourcePort": "output0",
   "targetUuid": "{41bcaba1-ceae-41b3-bb57-96097e82cf7a}",
   "targetPort": "input1"
  },
  {
   "layers": [],
   "sourceUuid": "{41bcaba1-ceae-41b3-bb57-96097e82cf7a}",
   "sourcePort": "output0",
   "targetUuid": "{ff1a638b-58c4-456d-a709-fd7b47a1ceb2}",
   "targetPort": "fac"
  },
  {
   "layers": [],
   "sourceUuid": "{41bcaba1-ceae-41b3-bb57-96097e82cf7a}",
   "sourcePort": "output0",
   "targetUuid": "{f0316566-028c-4319-8f63-530bfa223b94}",
   "targetPort": "fac"
  },
  {
   "layers": [],
   "sourceUuid": "{9dc84391-4318-4456-ac61-8e3d2c979464}",
   "sourcePort": "output0",
   "targetUuid": "{c610b1a7-1e62-425b-af29-17151ee801c0}",
   "targetPort": "vector"
  },
  {
   "layers": [],
   "sourceUuid": "{9fec63e0-8ce8-4138-9d40-f09f701176d6}",
   "sourcePort": "color",
   "targetUuid": "{82bbac54-5751-474b-9d88-5d4f9fe4bb07}",
   "targetPort": "input2"
  },
  {
   "layers": [],
   "sourceUuid": "{82bbac54-5751-474b-9d88-5d4f9fe4bb07}",
   "sourcePort": "mixed",
   "targetUuid": "{86baf388-487d-40a8-b2c9-20519b4cd7cb}",
   "targetPort": "input0"
  },
  {
   "layers": [],
   "sourceUuid": "{39cbb9e5-933a-4518-b3be-a17aeab9e68a}",
   "sourcePort": "postVertexColor",
   "targetUuid": "{82bbac54-5751-474b-9d88-5d4f9fe4bb07}",
   "targetPort": "fac"
  },
  {
   "layers": [],
   "sourceUuid": "{39cbb9e5-933a-4518-b3be-a17aeab9e68a}",
   "sourcePort": "postGain",
   "targetUuid": "{86baf388-487d-40a8-b2c9-20519b4cd7cb}",
   "targetPort": "input1"
  },
  {
   "layers": [],
   "sourceUuid": "{86baf388-487d-40a8-b2c9-20519b4cd7cb}",
   "sourcePort": "output0",
   "targetUuid": "{ab5ed22d-3d53-4f9c-8c49-50889f70e366}",
   "targetPort": "input0"
  },
  {
   "layers": [],
   "sourceUuid": "{1c0f0d18-43a6-45d4-b844-0e0e576c3209}",
   "sourcePort": "shader",
   "targetUuid": "{fa5dbede-f517-469d-8d6d-d454d7bd4fcd}",
   "targetPort": "color"
  },
  {
   "layers": [],
   "sourceUuid": "{0dffcc07-e549-48fa-b269-8522619b7a29}",
   "sourcePort": "color",
   "targetUuid": "{cefc1697-6e06-4b54-96a0-17ae92acf86f}",
   "targetPort": "input1"
  },
  {
   "layers": [],
   "sourceUuid": "{10c582cc-ef71-4334-bfa9-90de649e6d17}",
   "sourcePort": "output0",
   "targetUuid": "{a337116c-5572-45b7-b647-5a16ce02d77e}",
   "targetPort": "vector"
  },
  {
   "layers": [],
   "sourceUuid": "{a337116c-5572-45b7-b647-5a16ce02d77e}",
   "sourcePort": "color",
   "targetUuid": "{32993341-6ed9-4311-8997-885436810373}",
   "targetPort": "input1"
  },
  {
   "layers": [],
   "sourceUuid": "{960add03-2cc5-4d4e-9ccd-a527e58a7b0d}",
   "sourcePort": "uv",
   "targetUuid": "{0dffcc07-e549-48fa-b269-8522619b7a29}",
   "targetPort": "vector"
  },
  {
   "layers": [],
   "sourceUuid": "{df2d6596-5a7d-4b5f-beed-20bac8139abc}",
   "sourcePort": "value",
   "targetUuid": "{10c582cc-ef71-4334-bfa9-90de649e6d17}",
   "targetPort": "input1"
  },
  {
   "layers": [],
   "sourceUuid": "{0c86a6a5-abc2-4c55-b735-b490697d8cdf}",
   "sourcePort": "value",
   "targetUuid": "{4d7e7c05-cf78-458e-a1db-80a593545e7f}",
   "targetPort": "input1"
  },
  {
   "layers": [],
   "sourceUuid": "{1fcefedd-9902-4f1f-aa37-106e196cc541}",
   "sourcePort": "value",
   "targetUuid": "{a8d27533-c033-421d-b591-7936e2db7f75}",
   "targetPort": "input1"
  },
  {
   "layers": [],
   "sourceUuid": "{4b370c9f-81bf-4d67-b94d-7063c6e2c57a}",
   "sourcePort": "value",
   "targetUuid": "{2da2a45d-b95a-4b3a-bcd7-bf1f54270a4f}",
   "targetPort": "input1"
  },
  {
   "layers": [],
   "sourceUuid": "{99eafc52-e7a0-45bd-abdb-b053345d288b}",
   "sourcePort": "value",
   "targetUuid": "{565d287d-5e10-4b07-8712-eba9baee27c5}",
   "targetPort": "input0"
  },
  {
   "layers": [],
   "sourceUuid": "{9e3f1b54-dd6c-4e99-9f5b-94b01fe51471}",
   "sourcePort": "value",
   "targetUuid": "{82bbac54-5751-474b-9d88-5d4f9fe4bb07}",
   "targetPort": "input1"
  },
  {
   "sourceUuid": "{39cbb9e5-933a-4518-b3be-a17aeab9e68a}",
   "sourcePort": "usesReflectionMap",
   "targetUuid": "{a337116c-5572-45b7-b647-5a16ce02d77e}",
   "targetPort": "useTexture"
  },
  {
   "sourceUuid": "{39cbb9e5-933a-4518-b3be-a17aeab9e68a}",
   "sourcePort": "reflectionMap",
   "targetUuid": "{a337116c-5572-45b7-b647-5a16ce02d77e}",
   "targetPort": "texture"
  },
  {
   "sourceUuid": "{39cbb9e5-933a-4518-b3be-a17aeab9e68a}",
   "sourcePort": "usesDiffuseMap",
   "targetUuid": "{0dffcc07-e549-48fa-b269-8522619b7a29}",
   "targetPort": "useTexture"
  },
  {
   "sourceUuid": "{39cbb9e5-933a-4518-b3be-a17aeab9e68a}",
   "sourcePort": "diffuseMap",
   "targetUuid": "{0dffcc07-e549-48fa-b269-8522619b7a29}",
   "targetPort": "texture"
  }
 ],
 "prototypes": {
  "BINARY_MATH_FUNCTION": {
   "inputs": [
    "input0",
    "input1"
   ],
   "outputs": [
    "output0"
   ],
   "parameters": {
    "firstType": {
     "type": "QShaderLanguage::VariableType",
     "value": "QShaderLanguage::Vec3"
    },
    "operation": "min",
    "outputType": {
     "type": "QShaderLanguage::VariableType",
     "value": "QShaderLanguage::Vec3"
    },
    "secondType": {
     "type": "QShaderLanguage::VariableType",
     "value": "QShaderLanguage::Vec3"
    }
   },
   "rules": [
    {
     "format": {
      "api": "OpenGLES",
      "major": 2,
      "minor": 0
     },
     "substitution": "highp $outputType $output0 = $operation($input0, $input1);"
    },
    {
     "format": {
      "api": "OpenGLCoreProfile",
      "major": 3,
      "minor": 0
     },
     "substitution": "$outputType $output0 = $operation($input0, $input1);"
    }
   ]
  },
  "BINARY_MATH_OPERATION": {
   "inputs": [
    "input0",
    "input1"
   ],
   "outputs": [
    "output0"
   ],
   "parameters": {
    "firstType": {
     "type": "QShaderLanguage::VariableType",
     "value": "QShaderLanguage::Vec3"
    },
    "operation": "+",
    "outputType": {
     "type": "QShaderLanguage::VariableType",
     "value": "QShaderLanguage::Vec3"
    },
    "secondType": {
     "type": "QShaderLanguage::VariableType",
     "value": "QShaderLanguage::Vec3"
    }
   },
   "rules": [
    {
     "format": {
      "api": "OpenGLES",
      "major": 2,
      "minor": 0
     },
     "substitution": "highp $outputType $output0 = ($input0) $operation ($input1);"
    },
    {
     "format": {
      "api": "OpenGLCoreProfile",
      "major": 3,
      "minor": 0
     },
     "substitution": "$outputType $output0 = ($input0) $operation ($input1);"
    }
   ]
  },
  "BSDF_TRANSPARENT": {
   "inputs": [
    "color"
   ],
   "outputs": [
    "bsdf"
   ],
   "rules": [
    {
     "format": {
      "api": "OpenGLES",
      "major": 2,
      "minor": 0
     },
     "substitution": "highp vec4 $bsdf = vec4($color.rgb, 1 - ($color.r + $color.g + $color.b) / 3);"
    },
    {
     "format": {
      "api": "OpenGLCoreProfile",
      "major": 3,
      "minor": 0
     },
     "substitution": "vec4 $bsdf = vec4($color.rgb, 1 - ($color.r + $color.g + $color.b) / 3);"
    }
   ]
  },
  "VECT_TRANSFORM": {
   "inputs": [
    "input"
   ],
   "outputs": [
    "transformed"
   ],
   "rules": [
    {
     "format": {
      "api": "OpenGLES",
      "major": 2,
      "minor": 0
     },
     "headerSnippets": [
      "#ifndef MODEL_VIEW",
      "#define MODEL_VIEW",
      "uniform highp mat4 modelView;",
      "#endif"
     ],
     "substitution": "highp vec3 $transformed = (modelView * vec4($input, 0.0)).xyz * vec3(1.0, 1.0, -1.0);"
    },
    {
     "format": {
      "api": "OpenGLCoreProfile",
      "major": 3,
      "minor": 0
     },
     "headerSnippets": [
      "#ifndef MODEL_VIEW",
      "#define MODEL_VIEW",
      "uniform  mat4 modelView;",
      "#endif"
     ],
     "substitution": "vec3 $transformed = (modelView * vec4($input, 0.0)).xyz * vec3(1.0, 1.0, -1.0);"
    }
   ]
  },
  "COLOR_TO_SHADER": {
   "inputs": [
    "color"
   ],
   "outputs": [
    "shader"
   ],
   "rules": [
    {
     "format": {
      "api": "OpenGLES",
      "major": 2,
      "minor": 0
     },
     "substitution": "highp vec4 $shader = vec4($color, 1.0);"
    },
    {
     "format": {
      "api": "OpenGLCoreProfile",
      "major": 3,
      "minor": 0
     },
     "substitution": "vec4 $shader = vec4($color, 1.0);"
    }
   ]
  },
  "BLEND_ALPHA": {
   "inputs": [
    "color",
    "alpha"
   ],
   "outputs": [
    "shader"
   ],
   "rules": [
    {
     "format": {
      "api": "OpenGLES",
      "major": 2,
      "minor": 0
     },
     "substitution": "highp vec4 $shader = vec4($color, $alpha);"
    },
    {
     "format": {
      "api": "OpenGLCoreProfile",
      "major": 3,
      "minor": 0
     },
     "substitution": "vec4 $shader = vec4($color, $alpha);"
    }
   ]
  },
  "COMBRGB": {
   "inputs": [
    "r",
    "g",
    "b"
   ],
   "outputs": [
    "image"
   ],
   "rules": [
    {
     "format": {
      "api": "OpenGLES",
      "major": 2,
      "minor": 0
     },
     "substitution": "highp vec3 $image = vec3($r, $g, $b);"
    },
    {
     "format": {
      "api": "OpenGLCoreProfile",
      "major": 3,
      "minor": 0
     },
     "substitution": "vec3 $image = vec3($r, $g, $b);"
    }
   ]
  },
  "COMBXYZ": {
   "inputs": [
    "x",
    "y",
    "z"
   ],
   "outputs": [
    "vector"
   ],
   "rules": [
    {
     "format": {
      "api": "OpenGLES",
      "major": 2,
      "minor": 0
     },
     "substitution": "highp vec3 $vector = vec3($x, $y, $z);"
    },
    {
     "format": {
      "api": "OpenGLCoreProfile",
      "major": 3,
      "minor": 0
     },
     "substitution": "vec3 $vector = vec3($x, $y, $z);"
    }
   ]
  },
  "MATERIAL_OUTPUT": {
   "inputs": [
    "color"
   ],
   "rules": [
    {
     "format": {
      "api": "OpenGLES",
      "major": 2,
      "minor": 0
     },
     "substitution": "gl_FragColor = clamp($color, 0.0, 1.0);"
    },
    {
     "format": {
      "api": "OpenGLES",
      "major": 3,
      "minor": 0
     },
     "headerSnippets": [
      "out highp vec4 fragColor;"
     ],
     "substitution": "fragColor = clamp($color, 0.0, 1.0);"
    },
    {
     "format": {
      "api": "OpenGLCoreProfile",
      "major": 3,
      "minor": 0
     },
     "headerSnippets": [
      "out vec4 fragColor;"
     ],
     "substitution": "fragColor = clamp($color, 0.0, 1.0);"
    }
   ]
  },
  "MIX": {
   "inputs": [
    "fac",
    "input1",
    "input2"
   ],
   "outputs": [
    "mixed"
   ],
   "parameters": {
    "type": {
     "type": "QShaderLanguage::VariableType",
     "value": "QShaderLanguage::Vec4"
    }
   },
   "rules": [
    {
     "format": {
      "api": "OpenGLES",
      "major": 2,
      "minor": 0
     },
     "substitution": "highp $type $mixed = mix($input1, $input2, $fac);"
    },
    {
     "format": {
      "api": "OpenGLCoreProfile",
      "major": 3,
      "minor": 0
     },
     "substitution": "$type $mixed = mix($input1, $input2, $fac);"
    }
   ]
  },
  "CLAMP": {
   "inputs": [
    "value",
    "min",
    "max"
   ],
   "outputs": [
    "result"
   ],
   "parameters": {
    "type": {
     "type": "QShaderLanguage::VariableType",
     "value": "QShaderLanguage::Vec4"
    }
   },
   "rules": [
    {
     "format": {
      "api": "OpenGLES",
      "major": 2,
      "minor": 0
     },
     "substitution": "highp $type $result = clamp($value, $min, $max);"
    },
    {
     "format": {
      "api": "OpenGLCoreProfile",
      "major": 3,
      "minor": 0
     },
     "substitution": "$type $result = clamp($value, $min, $max);"
    }
   ]
  },
  "NEW_GEOMETRY": {
   "outputs": [
    "position",
    "normal",
    "tangent"
   ],
   "rules": [
    {
     "format": {
      "api": "OpenGLES",
      "major": 2,
      "minor": 0
     },
     "headerSnippets": [
      "#ifndef NEW_GEOMETRY",
      "#define NEW_GEOMETRY",
      "varying highp vec3 worldPosition;",
      "varying highp vec3 worldNormal;",
      "varying highp vec4 worldTangent;",
      "#endif"
     ],
     "substitution": "highp vec3 $position = worldPosition;highp vec3 $normal = normalize(worldNormal);highp vec3 $tangent = worldTangent.xyz;"
    },
    {
     "format": {
      "api": "OpenGLCoreProfile",
      "major": 3,
      "minor": 0
     },
     "headerSnippets": [
      "#ifndef NEW_GEOMETRY",
      "#define NEW_GEOMETRY",
      "in vec3 worldPosition;",
      "in vec3 worldNormal;",
      "in vec4 vertexTan;",
      "#endif"
     ],
     "substitution": "vec3 $position = worldPosition;vec3 $normal = normalize(worldNormal);vec3 $tangent = worldTangent.xyz;"
    }
   ]
  },
  "SEPRGB": {
   "inputs": [
    "color"
   ],
   "outputs": [
    "r",
    "g",
    "b"
   ],
   "rules": [
    {
     "format": {
      "api": "OpenGLES",
      "major": 2,
      "minor": 0
     },
     "substitution": "highp float $r = $color.r;highp float $g = $color.g;highp float $b = $color.b;"
    },
    {
     "format": {
      "api": "OpenGLCoreProfile",
      "major": 3,
      "minor": 0
     },
     "substitution": "float $r = $color.r;float $g = $color.g;float $b = $color.b;"
    }
   ]
  },
  "SEPXYZ": {
   "inputs": [
    "vector"
   ],
   "outputs": [
    "x",
    "y",
    "z"
   ],
   "rules": [
    {
     "format": {
      "api": "OpenGLES",
      "major": 2,
      "minor": 0
     },
     "substitution": "highp float $x = $vector.x;highp float $y = $vector.y;highp float $z = $vector.z;"
    },
    {
     "format": {
      "api": "OpenGLCoreProfile",
      "major": 3,
      "minor": 0
     },
     "substitution": "float $x = $vector.x;float $y = $vector.y;float $z = $vector.z;"
    }
   ]
  },
  "TEX_COORD": {
   "outputs": [
    "uv"
   ],
   "rules": [
    {
     "format": {
      "api": "OpenGLES",
      "major": 2,
      "minor": 0
     },
     "headerSnippets": [
      "#ifndef TEX_COORD",
      "#define TEX_COORD",
      "varying highp vec2 texCoord;",
      "#endif"
     ],
     "substitution": "highp vec2 $uv = texCoord;"
    },
    {
     "format": {
      "api": "OpenGLCoreProfile",
      "major": 3,
      "minor": 0
     },
     "headerSnippets": [
      "#ifndef TEX_COORD",
      "#define TEX_COORD",
      "in vec2 texCoord;",
      "#endif"
     ],
     "substitution": "vec2 $uv = texCoord;"
    }
   ]
  },
  "TEX_IMAGE": {
   "inputs": [
    "texture",
    "useTexture",
    "vector"
   ],
   "outputs": [
    "color",
    "alpha",
    "inter"
   ],
   "parameters": {
    "defaultColor": "1.0, 1.0, 1.0, 1.0",
    "condition": "false",
    "name": "",
    "linearizer": ""
   },
   "rules": [
    {
     "format": {
      "api": "OpenGLES",
      "major": 2,
      "minor": 0
     },
     "headerSnippets": [
      "#ifndef SRGB_TO_LINEAR",
      "#define SRGB_TO_LINEAR",
      "highp vec3 sRGBtoLinear(highp vec3 srgb) { return pow(srgb, vec3(2.2)); }",
      "#endif"
     ],
     "substitution": "highp vec4 $inter = $useTexture ? texture2D($texture, $vector.xy) : vec4($defaultColor);highp vec3 $color = $linearizer($inter.rgb);highp float $alpha = $inter.a;"
    },
    {
     "format": {
      "api": "OpenGLCoreProfile",
      "major": 3,
      "minor": 0
     },
     "headerSnippets": [
      "#ifndef SRGB_TO_LINEAR",
      "#define SRGB_TO_LINEAR",
      "vec3 sRGBtoLinear(vec3 srgb) { return pow(srgb, vec3(2.2)); }",
      "#endif"
     ],
     "substitution": "vec4 $inter = $useTexture ? texture($texture, $vector.xy) : vec4($defaultColor);vec3 $color = $linearizer($inter.rgb);float $alpha = $inter.a;"
    }
   ]
  },
  "UNARY_MATH_FUNCTION": {
   "inputs": [
    "input0"
   ],
   "outputs": [
    "output0"
   ],
   "parameters": {
    "firstType": {
     "type": "QShaderLanguage::VariableType",
     "value": "QShaderLanguage::Vec3"
    },
    "operation": "round",
    "outputType": {
     "type": "QShaderLanguage::VariableType",
     "value": "QShaderLanguage::Vec3"
    }
   },
   "rules": [
    {
     "format": {
      "api": "OpenGLES",
      "major": 2,
      "minor": 0
     },
     "substitution": "highp $outputType $output0 = $operation($input0);"
    },
    {
     "format": {
      "api": "OpenGLCoreProfile",
      "major": 3,
      "minor": 0
     },
     "substitution": "$outputType $output0 = $operation($input0);"
    }
   ]
  },
  "VERTEX_COLOR": {
   "outputs": [
    "color",
    "alpha"
   ],
   "rules": [
    {
     "format": {
      "api": "OpenGLES",
      "major": 2,
      "minor": 0
     },
     "headerSnippets": [
      "#ifndef VERTEX_COLOR",
      "#define VERTEX_COLOR",
      "varying highp vec4 color;",
      "#endif"
     ],
     "substitution": "highp vec3 $color = color.rgb;highp float $alpha = color.a;"
    },
    {
     "format": {
      "api": "OpenGLCoreProfile",
      "major": 3,
      "minor": 0
     },
     "headerSnippets": [
      "#ifndef VERTEX_COLOR",
      "#define VERTEX_COLOR",
      "in vec4 color;",
      "#endif"
     ],
     "substitution": "vec3 $color = color.rgb;float $alpha = color.a;"
    }
   ]
  },
  "constant": {
   "outputs": [
    "value"
   ],
   "parameters": {
    "constant": "0.0",
    "type": {
     "type": "QShaderLanguage::VariableType",
     "value": "QShaderLanguage::Float"
    }
   },
   "rules": [
    {
     "format": {
      "api": "OpenGLES",
      "major": 2,
      "minor": 0
     },
     "substitution": "highp $type $value = $type($constant);"
    },
    {
     "format": {
      "api": "OpenGLCoreProfile",
      "major": 3,
      "minor": 0
     },
     "substitution": "$type $value = $type($constant);"
    }
   ]
  },
  "MATERIAL_PROPERTIES": {
   "outputs": [
    "usesReflectionMap",
    "reflectionMap",
    "usesDiffuseMap",
    "diffuseMap",
    "normalScaling",
    "normalDisturb",
    "reflectionGain",
    "reflectionInnerFilter",
    "reflectionOuterFilter",
    "diffuseGain",
    "diffuseInnerFilter",
    "diffuseOuterFilter",
    "postVertexColor",
    "postGain"
   ],
   "rules": [
    {
     "format": {
      "api": "OpenGLES",
      "major": 2,
      "minor": 0
     },
     "headerSnippets": [
      "struct MaterialProperties {\n    bool usesReflectionMap;\n    highp sampler2D reflectionMap;\n    bool usesDiffuseMap;\n    highp sampler2D diffuseMap;\n    highp vec3 normalScaling;\n    highp vec3 normalDisturb;\n    highp float reflectionGain;\n    highp vec3 reflectionInnerFilter;\n    highp vec3 reflectionOuterFilter;\n    highp float diffuseGain;\n    highp vec3 diffuseInnerFilter;\n    highp vec3 diffuseOuterFilter;\n    highp float postVertexColor;\n    highp float postGain;\n};\nuniform MaterialProperties properties;"
     ],
     "substitution": "MaterialProperties $properties = properties;bool $usesReflectionMap = properties.usesReflectionMap;highp sampler2D $reflectionMap = properties.reflectionMap;bool $usesDiffuseMap = properties.usesDiffuseMap;highp sampler2D $diffuseMap = properties.diffuseMap;highp vec3 $normalScaling = properties.normalScaling;highp vec3 $normalDisturb = properties.normalDisturb;highp float $reflectionGain = properties.reflectionGain;highp vec3 $reflectionInnerFilter = properties.reflectionInnerFilter;highp vec3 $reflectionOuterFilter = properties.reflectionOuterFilter;highp float $diffuseGain = properties.diffuseGain;highp vec3 $diffuseInnerFilter = properties.diffuseInnerFilter;highp vec3 $diffuseOuterFilter = properties.diffuseOuterFilter;highp float $postVertexColor = properties.postVertexColor;highp float $postGain = properties.postGain;"
    },
    {
     "format": {
      "api": "OpenGLCoreProfile",
      "major": 3,
      "minor": 0
     },
     "headerSnippets": [
      "struct MaterialProperties {\n    bool usesReflectionMap;\n    sampler2D reflectionMap;\n    bool usesDiffuseMap;\n    sampler2D diffuseMap;\n    vec3 normalScaling;\n    vec3 normalDisturb;\n    float reflectionGain;\n    vec3 reflectionInnerFilter;\n    vec3 reflectionOuterFilter;\n    float diffuseGain;\n    vec3 diffuseInnerFilter;\n    vec3 diffuseOuterFilter;\n    float postVertexColor;\n    float postGain;\n};\nuniform MaterialProperties properties;"
     ],
     "substitution": "MaterialProperties $properties = properties;bool $usesReflectionMap = properties.usesReflectionMap;sampler2D $reflectionMap = properties.reflectionMap;bool $usesDiffuseMap = properties.usesDiffuseMap;sampler2D $diffuseMap = properties.diffuseMap;vec3 $normalScaling = properties.normalScaling;vec3 $normalDisturb = properties.normalDisturb;float $reflectionGain = properties.reflectionGain;vec3 $reflectionInnerFilter = properties.reflectionInnerFilter;vec3 $reflectionOuterFilter = properties.reflectionOuterFilter;float $diffuseGain = properties.diffuseGain;vec3 $diffuseInnerFilter = properties.diffuseInnerFilter;vec3 $diffuseOuterFilter = properties.diffuseOuterFilter;float $postVertexColor = properties.postVertexColor;float $postGain = properties.postGain;"
    }
   ]
  }
 }
}