{
 "nodes": [
  {
   "layers": [],
   "parameters": {
    "operation": "*",
    "firstType": {
     "type": "QShaderLanguage::VariableType",
     "value": "QShaderLanguage::Vec3"
    },
    "secondType": {
     "type": "QShaderLanguage::VariableType",
     "value": "QShaderLanguage::Vec3"
    },
    "outputType": {
     "type": "QShaderLanguage::VariableType",
     "value": "QShaderLanguage::Vec3"
    }
   },
   "type": "BINARY_MATH_OPERATION",
   "uuid": "{b9d920f8-2519-40ca-a689-45ab85164e7d}"
  },
  {
   "layers": [],
   "parameters": {
    "operation": "+",
    "firstType": {
     "type": "QShaderLanguage::VariableType",
     "value": "QShaderLanguage::Vec3"
    },
    "secondType": {
     "type": "QShaderLanguage::VariableType",
     "value": "QShaderLanguage::Vec3"
    },
    "outputType": {
     "type": "QShaderLanguage::VariableType",
     "value": "QShaderLanguage::Vec3"
    }
   },
   "type": "BINARY_MATH_OPERATION",
   "uuid": "{2c1c020d-bca4-4efa-86aa-d2d4bc817234}"
  },
  {
   "layers": [],
   "parameters": {
    "operation": "*",
    "firstType": {
     "type": "QShaderLanguage::VariableType",
     "value": "QShaderLanguage::Vec3"
    },
    "secondType": {
     "type": "QShaderLanguage::VariableType",
     "value": "QShaderLanguage::Float"
    },
    "outputType": {
     "type": "QShaderLanguage::VariableType",
     "value": "QShaderLanguage::Vec3"
    }
   },
   "type": "BINARY_MATH_OPERATION",
   "uuid": "{ff4f7385-46ef-4402-b1a1-f44d1f3ca8d0}"
  },
  {
   "layers": [],
   "parameters": {
    "type": {
     "type": "QShaderLanguage::VariableType",
     "value": "QShaderLanguage::Vec3"
    }
   },
   "type": "MIX",
   "uuid": "{3e5a6ff8-e8f7-4691-8cc6-ec6d6f0ec9de}"
  },
  {
   "layers": [],
   "parameters": {
    "operation": "*",
    "firstType": {
     "type": "QShaderLanguage::VariableType",
     "value": "QShaderLanguage::Vec3"
    },
    "secondType": {
     "type": "QShaderLanguage::VariableType",
     "value": "QShaderLanguage::Vec3"
    },
    "outputType": {
     "type": "QShaderLanguage::VariableType",
     "value": "QShaderLanguage::Vec3"
    }
   },
   "type": "BINARY_MATH_OPERATION",
   "uuid": "{afd1dbf5-05e4-4ada-9037-05e75fdbd45c}"
  },
  {
   "layers": [],
   "parameters": {
    "operation": "*",
    "firstType": {
     "type": "QShaderLanguage::VariableType",
     "value": "QShaderLanguage::Float"
    },
    "secondType": {
     "type": "QShaderLanguage::VariableType",
     "value": "QShaderLanguage::Vec3"
    },
    "outputType": {
     "type": "QShaderLanguage::VariableType",
     "value": "QShaderLanguage::Vec3"
    }
   },
   "type": "BINARY_MATH_OPERATION",
   "uuid": "{1cfa2ba5-5c1c-4361-b0e4-92183ca1d8da}"
  },
  {
   "layers": [],
   "parameters": {
    "operation": "+",
    "firstType": {
     "type": "QShaderLanguage::VariableType",
     "value": "QShaderLanguage::Vec3"
    },
    "secondType": {
     "type": "QShaderLanguage::VariableType",
     "value": "QShaderLanguage::Vec3"
    },
    "outputType": {
     "type": "QShaderLanguage::VariableType",
     "value": "QShaderLanguage::Vec3"
    }
   },
   "type": "BINARY_MATH_OPERATION",
   "uuid": "{81c24672-0dd8-4181-afa1-0a932244dc1d}"
  },
  {
   "layers": [],
   "parameters": {
    "operation": "*",
    "firstType": {
     "type": "QShaderLanguage::VariableType",
     "value": "QShaderLanguage::Vec3"
    },
    "secondType": {
     "type": "QShaderLanguage::VariableType",
     "value": "QShaderLanguage::Vec3"
    },
    "outputType": {
     "type": "QShaderLanguage::VariableType",
     "value": "QShaderLanguage::Vec3"
    }
   },
   "type": "BINARY_MATH_OPERATION",
   "uuid": "{eed208fc-9a91-4a2d-9233-26a64ec485cc}"
  },
  {
   "layers": [],
   "parameters": {
    "operation": "normalize",
    "firstType": {
     "type": "QShaderLanguage::VariableType",
     "value": "QShaderLanguage::Vec3"
    },
    "secondType": {
     "type": "QShaderLanguage::VariableType",
     "value": "QShaderLanguage::Float"
    },
    "outputType": {
     "type": "QShaderLanguage::VariableType",
     "value": "QShaderLanguage::Vec3"
    }
   },
   "type": "UNARY_MATH_FUNCTION",
   "uuid": "{99153e28-1a35-4b5a-a8d3-edf529e45135}"
  },
  {
   "layers": [],
   "parameters": {
    "operation": "+",
    "firstType": {
     "type": "QShaderLanguage::VariableType",
     "value": "QShaderLanguage::Vec3"
    },
    "secondType": {
     "type": "QShaderLanguage::VariableType",
     "value": "QShaderLanguage::Vec3"
    },
    "outputType": {
     "type": "QShaderLanguage::VariableType",
     "value": "QShaderLanguage::Vec3"
    }
   },
   "type": "BINARY_MATH_OPERATION",
   "uuid": "{d5a6cb10-0cdb-4945-be91-826eeaa353ed}"
  },
  {
   "layers": [],
   "parameters": {
    "operation": "*",
    "firstType": {
     "type": "QShaderLanguage::VariableType",
     "value": "QShaderLanguage::Vec3"
    },
    "secondType": {
     "type": "QShaderLanguage::VariableType",
     "value": "QShaderLanguage::Vec3"
    },
    "outputType": {
     "type": "QShaderLanguage::VariableType",
     "value": "QShaderLanguage::Vec3"
    }
   },
   "type": "BINARY_MATH_OPERATION",
   "uuid": "{54a68c85-8f05-4c37-ad4d-8b67a43b2f7d}"
  },
  {
   "layers": [],
   "parameters": {
    "operation": "*",
    "firstType": {
     "type": "QShaderLanguage::VariableType",
     "value": "QShaderLanguage::Vec3"
    },
    "secondType": {
     "type": "QShaderLanguage::VariableType",
     "value": "QShaderLanguage::Vec3"
    },
    "outputType": {
     "type": "QShaderLanguage::VariableType",
     "value": "QShaderLanguage::Vec3"
    }
   },
   "type": "BINARY_MATH_OPERATION",
   "uuid": "{e374020e-7050-49d4-b1d7-5629e8772e5f}"
  },
  {
   "layers": [],
   "parameters": {},
   "type": "VECT_TRANSFORM",
   "uuid": "{867ef59a-bca8-4032-a053-debb55b1f277}"
  },
  {
   "layers": [],
   "parameters": {},
   "type": "NEW_GEOMETRY",
   "uuid": "{1e8591fa-305c-4b9f-9742-018614cecbd8}"
  },
  {
   "layers": [],
   "parameters": {
    "operation": "*",
    "firstType": {
     "type": "QShaderLanguage::VariableType",
     "value": "QShaderLanguage::Vec3"
    },
    "secondType": {
     "type": "QShaderLanguage::VariableType",
     "value": "QShaderLanguage::Vec3"
    },
    "outputType": {
     "type": "QShaderLanguage::VariableType",
     "value": "QShaderLanguage::Vec3"
    }
   },
   "type": "BINARY_MATH_OPERATION",
   "uuid": "{7f0e3075-1049-44dd-91b9-43f55e6bfb17}"
  },
  {
   "layers": [],
   "parameters": {
    "clamp": {
     "type": "QShaderLanguage::Bool",
     "value": "false"
    },
    "operation": "-",
    "firstType": {
     "type": "QShaderLanguage::VariableType",
     "value": "QShaderLanguage::Float"
    },
    "secondType": {
     "type": "QShaderLanguage::VariableType",
     "value": "QShaderLanguage::Float"
    },
    "outputType": {
     "type": "QShaderLanguage::VariableType",
     "value": "QShaderLanguage::Float"
    }
   },
   "type": "BINARY_MATH_OPERATION",
   "uuid": "{c0854fd5-a429-4b54-871b-b10be5ff4e2d}"
  },
  {
   "layers": [],
   "parameters": {},
   "type": "SEPXYZ",
   "uuid": "{108788e5-475c-4818-829c-4edb0539eb31}"
  },
  {
   "layers": [],
   "parameters": {
    "clamp": {
     "type": "QShaderLanguage::Bool",
     "value": "false"
    },
    "operation": "*",
    "firstType": {
     "type": "QShaderLanguage::VariableType",
     "value": "QShaderLanguage::Float"
    },
    "secondType": {
     "type": "QShaderLanguage::VariableType",
     "value": "QShaderLanguage::Float"
    },
    "outputType": {
     "type": "QShaderLanguage::VariableType",
     "value": "QShaderLanguage::Float"
    }
   },
   "type": "BINARY_MATH_OPERATION",
   "uuid": "{3b1dad81-bc04-4981-bd33-d82f9ffa17d7}"
  },
  {
   "layers": [],
   "parameters": {},
   "type": "TEX_COORD",
   "uuid": "{fee75c75-0282-49d4-a83f-e1c3f1fe6f2d}"
  },
  {
   "layers": [],
   "parameters": {},
   "type": "MATERIAL_OUTPUT",
   "uuid": "{c3df31f1-3b2f-4e1b-905a-0e3e51d7ea59}"
  },
  {
   "layers": [],
   "parameters": {},
   "type": "COLOR_TO_SHADER",
   "uuid": "{a19458f1-3c77-4946-92e8-2cdbed753ddf}"
  },
  {
   "layers": [],
   "parameters": {
    "defaultColor": "1.0, 1.0, 1.0, 1.0",
    "name": "reflectionMap",
    "condition": "usesReflectionMap",
    "linearizer": ""
   },
   "type": "TEX_IMAGE",
   "uuid": "{a0f3c235-59df-4ed7-a0b9-dc8ca5599528}"
  },
  {
   "layers": [],
   "parameters": {
    "defaultColor": "1.0, 1.0, 1.0, 1.0",
    "name": "diffuseMap",
    "condition": "usesDiffuseMap",
    "linearizer": ""
   },
   "type": "TEX_IMAGE",
   "uuid": "{dca5e0ab-165b-4351-8ce8-734a0b37db06}"
  },
  {
   "layers": [],
   "parameters": {
    "type": {
     "type": "QShaderLanguage::VariableType",
     "value": "QShaderLanguage::Vec3"
    }
   },
   "type": "MIX",
   "uuid": "{463ba628-bad3-4628-874e-49ad9757e141}"
  },
  {
   "layers": [],
   "parameters": {
    "operation": "*",
    "firstType": {
     "type": "QShaderLanguage::VariableType",
     "value": "QShaderLanguage::Vec3"
    },
    "secondType": {
     "type": "QShaderLanguage::VariableType",
     "value": "QShaderLanguage::Vec3"
    },
    "outputType": {
     "type": "QShaderLanguage::VariableType",
     "value": "QShaderLanguage::Vec3"
    }
   },
   "type": "BINARY_MATH_OPERATION",
   "uuid": "{984412e7-a131-491f-bfa1-72dd40ea4f33}"
  },
  {
   "layers": [],
   "parameters": {
    "operation": "*",
    "firstType": {
     "type": "QShaderLanguage::VariableType",
     "value": "QShaderLanguage::Vec3"
    },
    "secondType": {
     "type": "QShaderLanguage::VariableType",
     "value": "QShaderLanguage::Float"
    },
    "outputType": {
     "type": "QShaderLanguage::VariableType",
     "value": "QShaderLanguage::Vec3"
    }
   },
   "type": "BINARY_MATH_OPERATION",
   "uuid": "{752d25ef-2496-4ad3-a17a-aca32ba8da95}"
  },
  {
   "layers": [],
   "parameters": {},
   "type": "VERTEX_COLOR",
   "uuid": "{92ca313c-8930-4e0b-882a-8befcd5d0e17}"
  },
  {
   "layers": [],
   "parameters": {
    "type": {
     "type": "QShaderLanguage::VariableType",
     "value": "QShaderLanguage::Vec3"
    }
   },
   "type": "MIX",
   "uuid": "{ada47d2b-ad73-4053-b9e7-7db91062aa18}"
  },
  {
   "layers": [],
   "parameters": {},
   "type": "MATERIAL_PROPERTIES",
   "uuid": "{3602db48-0633-411d-9084-bb3bf0e029e1}"
  },
  {
   "layers": [],
   "parameters": {
    "constant": "0.5,0.5,0.0",
    "type": {
     "type": "QShaderLanguage::VariableType",
     "value": "QShaderLanguage::Vec3"
    }
   },
   "type": "constant",
   "uuid": "{233c65a4-3665-4920-9996-9c6760c6c6a0}"
  },
  {
   "layers": [],
   "parameters": {
    "constant": "0.5,0.5,0.0",
    "type": {
     "type": "QShaderLanguage::VariableType",
     "value": "QShaderLanguage::Vec3"
    }
   },
   "type": "constant",
   "uuid": "{7a071d2f-d233-44ab-8b9c-74d0865ffae2}"
  },
  {
   "layers": [],
   "parameters": {
    "constant": "1.0,1.0,-1.0",
    "type": {
     "type": "QShaderLanguage::VariableType",
     "value": "QShaderLanguage::Vec3"
    }
   },
   "type": "constant",
   "uuid": "{1929d46b-ccbf-4c61-b982-271c108eb526}"
  },
  {
   "layers": [],
   "parameters": {
    "constant": "1.0,1.0,0.0",
    "type": {
     "type": "QShaderLanguage::VariableType",
     "value": "QShaderLanguage::Vec3"
    }
   },
   "type": "constant",
   "uuid": "{edb6ec1c-007a-4c45-96d2-1aeb09d5736d}"
  },
  {
   "layers": [],
   "parameters": {
    "constant": "1.0",
    "type": {
     "type": "QShaderLanguage::VariableType",
     "value": "QShaderLanguage::Float"
    }
   },
   "type": "constant",
   "uuid": "{6975e61c-e3b3-4386-8485-33fa3cd4fc47}"
  },
  {
   "layers": [],
   "parameters": {
    "constant": "1.0,1.0,1.0",
    "type": {
     "type": "QShaderLanguage::VariableType",
     "value": "QShaderLanguage::Vec3"
    }
   },
   "type": "constant",
   "uuid": "{a9dcb527-e6db-43f8-bd55-1c00b811a595}"
  }
 ],
 "edges": [
  {
   "layers": [],
   "sourceUuid": "{3602db48-0633-411d-9084-bb3bf0e029e1}",
   "sourcePort": "reflectionInnerFilter",
   "targetUuid": "{463ba628-bad3-4628-874e-49ad9757e141}",
   "targetPort": "input1"
  },
  {
   "layers": [],
   "sourceUuid": "{3602db48-0633-411d-9084-bb3bf0e029e1}",
   "sourcePort": "reflectionOuterFilter",
   "targetUuid": "{463ba628-bad3-4628-874e-49ad9757e141}",
   "targetPort": "input2"
  },
  {
   "layers": [],
   "sourceUuid": "{3602db48-0633-411d-9084-bb3bf0e029e1}",
   "sourcePort": "diffuseInnerFilter",
   "targetUuid": "{3e5a6ff8-e8f7-4691-8cc6-ec6d6f0ec9de}",
   "targetPort": "input1"
  },
  {
   "layers": [],
   "sourceUuid": "{3602db48-0633-411d-9084-bb3bf0e029e1}",
   "sourcePort": "diffuseOuterFilter",
   "targetUuid": "{3e5a6ff8-e8f7-4691-8cc6-ec6d6f0ec9de}",
   "targetPort": "input2"
  },
  {
   "layers": [],
   "sourceUuid": "{463ba628-bad3-4628-874e-49ad9757e141}",
   "sourcePort": "mixed",
   "targetUuid": "{984412e7-a131-491f-bfa1-72dd40ea4f33}",
   "targetPort": "input0"
  },
  {
   "layers": [],
   "sourceUuid": "{3e5a6ff8-e8f7-4691-8cc6-ec6d6f0ec9de}",
   "sourcePort": "mixed",
   "targetUuid": "{afd1dbf5-05e4-4ada-9037-05e75fdbd45c}",
   "targetPort": "input0"
  },
  {
   "layers": [],
   "sourceUuid": "{984412e7-a131-491f-bfa1-72dd40ea4f33}",
   "sourcePort": "output0",
   "targetUuid": "{ff4f7385-46ef-4402-b1a1-f44d1f3ca8d0}",
   "targetPort": "input0"
  },
  {
   "layers": [],
   "sourceUuid": "{ff4f7385-46ef-4402-b1a1-f44d1f3ca8d0}",
   "sourcePort": "output0",
   "targetUuid": "{2c1c020d-bca4-4efa-86aa-d2d4bc817234}",
   "targetPort": "input0"
  },
  {
   "layers": [],
   "sourceUuid": "{1cfa2ba5-5c1c-4361-b0e4-92183ca1d8da}",
   "sourcePort": "output0",
   "targetUuid": "{2c1c020d-bca4-4efa-86aa-d2d4bc817234}",
   "targetPort": "input1"
  },
  {
   "layers": [],
   "sourceUuid": "{2c1c020d-bca4-4efa-86aa-d2d4bc817234}",
   "sourcePort": "output0",
   "targetUuid": "{b9d920f8-2519-40ca-a689-45ab85164e7d}",
   "targetPort": "input1"
  },
  {
   "layers": [],
   "sourceUuid": "{b9d920f8-2519-40ca-a689-45ab85164e7d}",
   "sourcePort": "output0",
   "targetUuid": "{a19458f1-3c77-4946-92e8-2cdbed753ddf}",
   "targetPort": "color"
  },
  {
   "layers": [],
   "sourceUuid": "{3602db48-0633-411d-9084-bb3bf0e029e1}",
   "sourcePort": "reflectionGain",
   "targetUuid": "{ff4f7385-46ef-4402-b1a1-f44d1f3ca8d0}",
   "targetPort": "input1"
  },
  {
   "layers": [],
   "sourceUuid": "{3602db48-0633-411d-9084-bb3bf0e029e1}",
   "sourcePort": "diffuseGain",
   "targetUuid": "{1cfa2ba5-5c1c-4361-b0e4-92183ca1d8da}",
   "targetPort": "input0"
  },
  {
   "layers": [],
   "sourceUuid": "{afd1dbf5-05e4-4ada-9037-05e75fdbd45c}",
   "sourcePort": "output0",
   "targetUuid": "{1cfa2ba5-5c1c-4361-b0e4-92183ca1d8da}",
   "targetPort": "input1"
  },
  {
   "layers": [],
   "sourceUuid": "{1e8591fa-305c-4b9f-9742-018614cecbd8}",
   "sourcePort": "normal",
   "targetUuid": "{867ef59a-bca8-4032-a053-debb55b1f277}",
   "targetPort": "input"
  },
  {
   "layers": [],
   "sourceUuid": "{867ef59a-bca8-4032-a053-debb55b1f277}",
   "sourcePort": "transformed",
   "targetUuid": "{e374020e-7050-49d4-b1d7-5629e8772e5f}",
   "targetPort": "input0"
  },
  {
   "layers": [],
   "sourceUuid": "{e374020e-7050-49d4-b1d7-5629e8772e5f}",
   "sourcePort": "output0",
   "targetUuid": "{54a68c85-8f05-4c37-ad4d-8b67a43b2f7d}",
   "targetPort": "input0"
  },
  {
   "layers": [],
   "sourceUuid": "{54a68c85-8f05-4c37-ad4d-8b67a43b2f7d}",
   "sourcePort": "output0",
   "targetUuid": "{d5a6cb10-0cdb-4945-be91-826eeaa353ed}",
   "targetPort": "input0"
  },
  {
   "layers": [],
   "sourceUuid": "{7f0e3075-1049-44dd-91b9-43f55e6bfb17}",
   "sourcePort": "output0",
   "targetUuid": "{d5a6cb10-0cdb-4945-be91-826eeaa353ed}",
   "targetPort": "input1"
  },
  {
   "layers": [],
   "sourceUuid": "{d5a6cb10-0cdb-4945-be91-826eeaa353ed}",
   "sourcePort": "output0",
   "targetUuid": "{99153e28-1a35-4b5a-a8d3-edf529e45135}",
   "targetPort": "input0"
  },
  {
   "layers": [],
   "sourceUuid": "{3602db48-0633-411d-9084-bb3bf0e029e1}",
   "sourcePort": "normalScaling",
   "targetUuid": "{54a68c85-8f05-4c37-ad4d-8b67a43b2f7d}",
   "targetPort": "input1"
  },
  {
   "layers": [],
   "sourceUuid": "{3602db48-0633-411d-9084-bb3bf0e029e1}",
   "sourcePort": "normalDisturb",
   "targetUuid": "{7f0e3075-1049-44dd-91b9-43f55e6bfb17}",
   "targetPort": "input0"
  },
  {
   "layers": [],
   "sourceUuid": "{eed208fc-9a91-4a2d-9233-26a64ec485cc}",
   "sourcePort": "output0",
   "targetUuid": "{81c24672-0dd8-4181-afa1-0a932244dc1d}",
   "targetPort": "input0"
  },
  {
   "layers": [],
   "sourceUuid": "{99153e28-1a35-4b5a-a8d3-edf529e45135}",
   "sourcePort": "output0",
   "targetUuid": "{eed208fc-9a91-4a2d-9233-26a64ec485cc}",
   "targetPort": "input0"
  },
  {
   "layers": [],
   "sourceUuid": "{108788e5-475c-4818-829c-4edb0539eb31}",
   "sourcePort": "z",
   "targetUuid": "{c0854fd5-a429-4b54-871b-b10be5ff4e2d}",
   "targetPort": "input1"
  },
  {
   "layers": [],
   "sourceUuid": "{c0854fd5-a429-4b54-871b-b10be5ff4e2d}",
   "sourcePort": "output0",
   "targetUuid": "{3b1dad81-bc04-4981-bd33-d82f9ffa17d7}",
   "targetPort": "input0"
  },
  {
   "layers": [],
   "sourceUuid": "{c0854fd5-a429-4b54-871b-b10be5ff4e2d}",
   "sourcePort": "output0",
   "targetUuid": "{3b1dad81-bc04-4981-bd33-d82f9ffa17d7}",
   "targetPort": "input1"
  },
  {
   "layers": [],
   "sourceUuid": "{3b1dad81-bc04-4981-bd33-d82f9ffa17d7}",
   "sourcePort": "output0",
   "targetUuid": "{463ba628-bad3-4628-874e-49ad9757e141}",
   "targetPort": "fac"
  },
  {
   "layers": [],
   "sourceUuid": "{3b1dad81-bc04-4981-bd33-d82f9ffa17d7}",
   "sourcePort": "output0",
   "targetUuid": "{3e5a6ff8-e8f7-4691-8cc6-ec6d6f0ec9de}",
   "targetPort": "fac"
  },
  {
   "layers": [],
   "sourceUuid": "{99153e28-1a35-4b5a-a8d3-edf529e45135}",
   "sourcePort": "output0",
   "targetUuid": "{108788e5-475c-4818-829c-4edb0539eb31}",
   "targetPort": "vector"
  },
  {
   "layers": [],
   "sourceUuid": "{92ca313c-8930-4e0b-882a-8befcd5d0e17}",
   "sourcePort": "color",
   "targetUuid": "{ada47d2b-ad73-4053-b9e7-7db91062aa18}",
   "targetPort": "input2"
  },
  {
   "layers": [],
   "sourceUuid": "{ada47d2b-ad73-4053-b9e7-7db91062aa18}",
   "sourcePort": "mixed",
   "targetUuid": "{752d25ef-2496-4ad3-a17a-aca32ba8da95}",
   "targetPort": "input0"
  },
  {
   "layers": [],
   "sourceUuid": "{3602db48-0633-411d-9084-bb3bf0e029e1}",
   "sourcePort": "postVertexColor",
   "targetUuid": "{ada47d2b-ad73-4053-b9e7-7db91062aa18}",
   "targetPort": "fac"
  },
  {
   "layers": [],
   "sourceUuid": "{3602db48-0633-411d-9084-bb3bf0e029e1}",
   "sourcePort": "postGain",
   "targetUuid": "{752d25ef-2496-4ad3-a17a-aca32ba8da95}",
   "targetPort": "input1"
  },
  {
   "layers": [],
   "sourceUuid": "{752d25ef-2496-4ad3-a17a-aca32ba8da95}",
   "sourcePort": "output0",
   "targetUuid": "{b9d920f8-2519-40ca-a689-45ab85164e7d}",
   "targetPort": "input0"
  },
  {
   "layers": [],
   "sourceUuid": "{a19458f1-3c77-4946-92e8-2cdbed753ddf}",
   "sourcePort": "shader",
   "targetUuid": "{c3df31f1-3b2f-4e1b-905a-0e3e51d7ea59}",
   "targetPort": "color"
  },
  {
   "layers": [],
   "sourceUuid": "{dca5e0ab-165b-4351-8ce8-734a0b37db06}",
   "sourcePort": "color",
   "targetUuid": "{afd1dbf5-05e4-4ada-9037-05e75fdbd45c}",
   "targetPort": "input1"
  },
  {
   "layers": [],
   "sourceUuid": "{81c24672-0dd8-4181-afa1-0a932244dc1d}",
   "sourcePort": "output0",
   "targetUuid": "{a0f3c235-59df-4ed7-a0b9-dc8ca5599528}",
   "targetPort": "vector"
  },
  {
   "layers": [],
   "sourceUuid": "{a0f3c235-59df-4ed7-a0b9-dc8ca5599528}",
   "sourcePort": "color",
   "targetUuid": "{984412e7-a131-491f-bfa1-72dd40ea4f33}",
   "targetPort": "input1"
  },
  {
   "layers": [],
   "sourceUuid": "{fee75c75-0282-49d4-a83f-e1c3f1fe6f2d}",
   "sourcePort": "uv",
   "targetUuid": "{dca5e0ab-165b-4351-8ce8-734a0b37db06}",
   "targetPort": "vector"
  },
  {
   "layers": [],
   "sourceUuid": "{233c65a4-3665-4920-9996-9c6760c6c6a0}",
   "sourcePort": "value",
   "targetUuid": "{81c24672-0dd8-4181-afa1-0a932244dc1d}",
   "targetPort": "input1"
  },
  {
   "layers": [],
   "sourceUuid": "{7a071d2f-d233-44ab-8b9c-74d0865ffae2}",
   "sourcePort": "value",
   "targetUuid": "{eed208fc-9a91-4a2d-9233-26a64ec485cc}",
   "targetPort": "input1"
  },
  {
   "layers": [],
   "sourceUuid": "{1929d46b-ccbf-4c61-b982-271c108eb526}",
   "sourcePort": "value",
   "targetUuid": "{e374020e-7050-49d4-b1d7-5629e8772e5f}",
   "targetPort": "input1"
  },
  {
   "layers": [],
   "sourceUuid": "{edb6ec1c-007a-4c45-96d2-1aeb09d5736d}",
   "sourcePort": "value",
   "targetUuid": "{7f0e3075-1049-44dd-91b9-43f55e6bfb17}",
   "targetPort": "input1"
  },
  {
   "layers": [],
   "sourceUuid": "{6975e61c-e3b3-4386-8485-33fa3cd4fc47}",
   "sourcePort": "value",
   "targetUuid": "{c0854fd5-a429-4b54-871b-b10be5ff4e2d}",
   "targetPort": "input0"
  },
  {
   "layers": [],
   "sourceUuid": "{a9dcb527-e6db-43f8-bd55-1c00b811a595}",
   "sourcePort": "value",
   "targetUuid": "{ada47d2b-ad73-4053-b9e7-7db91062aa18}",
   "targetPort": "input1"
  },
  {
   "sourceUuid": "{3602db48-0633-411d-9084-bb3bf0e029e1}",
   "sourcePort": "usesReflectionMap",
   "targetUuid": "{a0f3c235-59df-4ed7-a0b9-dc8ca5599528}",
   "targetPort": "useTexture"
  },
  {
   "sourceUuid": "{3602db48-0633-411d-9084-bb3bf0e029e1}",
   "sourcePort": "reflectionMap",
   "targetUuid": "{a0f3c235-59df-4ed7-a0b9-dc8ca5599528}",
   "targetPort": "texture"
  },
  {
   "sourceUuid": "{3602db48-0633-411d-9084-bb3bf0e029e1}",
   "sourcePort": "usesDiffuseMap",
   "targetUuid": "{dca5e0ab-165b-4351-8ce8-734a0b37db06}",
   "targetPort": "useTexture"
  },
  {
   "sourceUuid": "{3602db48-0633-411d-9084-bb3bf0e029e1}",
   "sourcePort": "diffuseMap",
   "targetUuid": "{dca5e0ab-165b-4351-8ce8-734a0b37db06}",
   "targetPort": "texture"
  }
 ],
 "prototypes": {
  "BINARY_MATH_FUNCTION": {
   "inputs": [
    "input0",
    "input1"
   ],
   "outputs": [
    "output0"
   ],
   "parameters": {
    "firstType": {
     "type": "QShaderLanguage::VariableType",
     "value": "QShaderLanguage::Vec3"
    },
    "operation": "min",
    "outputType": {
     "type": "QShaderLanguage::VariableType",
     "value": "QShaderLanguage::Vec3"
    },
    "secondType": {
     "type": "QShaderLanguage::VariableType",
     "value": "QShaderLanguage::Vec3"
    }
   },
   "rules": [
    {
     "format": {
      "api": "OpenGLES",
      "major": 2,
      "minor": 0
     },
     "substitution": "highp $outputType $output0 = $operation($input0, $input1);"
    },
    {
     "format": {
      "api": "OpenGLCoreProfile",
      "major": 3,
      "minor": 0
     },
     "substitution": "$outputType $output0 = $operation($input0, $input1);"
    }
   ]
  },
  "BINARY_MATH_OPERATION": {
   "inputs": [
    "input0",
    "input1"
   ],
   "outputs": [
    "output0"
   ],
   "parameters": {
    "firstType": {
     "type": "QShaderLanguage::VariableType",
     "value": "QShaderLanguage::Vec3"
    },
    "operation": "+",
    "outputType": {
     "type": "QShaderLanguage::VariableType",
     "value": "QShaderLanguage::Vec3"
    },
    "secondType": {
     "type": "QShaderLanguage::VariableType",
     "value": "QShaderLanguage::Vec3"
    }
   },
   "rules": [
    {
     "format": {
      "api": "OpenGLES",
      "major": 2,
      "minor": 0
     },
     "substitution": "highp $outputType $output0 = ($input0) $operation ($input1);"
    },
    {
     "format": {
      "api": "OpenGLCoreProfile",
      "major": 3,
      "minor": 0
     },
     "substitution": "$outputType $output0 = ($input0) $operation ($input1);"
    }
   ]
  },
  "BSDF_TRANSPARENT": {
   "inputs": [
    "color"
   ],
   "outputs": [
    "bsdf"
   ],
   "rules": [
    {
     "format": {
      "api": "OpenGLES",
      "major": 2,
      "minor": 0
     },
     "substitution": "highp vec4 $bsdf = vec4($color.rgb, 1 - ($color.r + $color.g + $color.b) / 3);"
    },
    {
     "format": {
      "api": "OpenGLCoreProfile",
      "major": 3,
      "minor": 0
     },
     "substitution": "vec4 $bsdf = vec4($color.rgb, 1 - ($color.r + $color.g + $color.b) / 3);"
    }
   ]
  },
  "VECT_TRANSFORM": {
   "inputs": [
    "input"
   ],
   "outputs": [
    "transformed"
   ],
   "rules": [
    {
     "format": {
      "api": "OpenGLES",
      "major": 2,
      "minor": 0
     },
     "headerSnippets": [
      "#ifndef MODEL_VIEW",
      "#define MODEL_VIEW",
      "uniform highp mat4 modelView;",
      "#endif"
     ],
     "substitution": "highp vec3 $transformed = (modelView * vec4($input, 0.0)).xyz * vec3(1.0, 1.0, -1.0);"
    },
    {
     "format": {
      "api": "OpenGLCoreProfile",
      "major": 3,
      "minor": 0
     },
     "headerSnippets": [
      "#ifndef MODEL_VIEW",
      "#define MODEL_VIEW",
      "uniform  mat4 modelView;",
      "#endif"
     ],
     "substitution": "vec3 $transformed = (modelView * vec4($input, 0.0)).xyz * vec3(1.0, 1.0, -1.0);"
    }
   ]
  },
  "COLOR_TO_SHADER": {
   "inputs": [
    "color"
   ],
   "outputs": [
    "shader"
   ],
   "rules": [
    {
     "format": {
      "api": "OpenGLES",
      "major": 2,
      "minor": 0
     },
     "substitution": "highp vec4 $shader = vec4($color, 1.0);"
    },
    {
     "format": {
      "api": "OpenGLCoreProfile",
      "major": 3,
      "minor": 0
     },
     "substitution": "vec4 $shader = vec4($color, 1.0);"
    }
   ]
  },
  "BLEND_ALPHA": {
   "inputs": [
    "color",
    "alpha"
   ],
   "outputs": [
    "shader"
   ],
   "rules": [
    {
     "format": {
      "api": "OpenGLES",
      "major": 2,
      "minor": 0
     },
     "substitution": "highp vec4 $shader = vec4($color, $alpha);"
    },
    {
     "format": {
      "api": "OpenGLCoreProfile",
      "major": 3,
      "minor": 0
     },
     "substitution": "vec4 $shader = vec4($color, $alpha);"
    }
   ]
  },
  "COMBRGB": {
   "inputs": [
    "r",
    "g",
    "b"
   ],
   "outputs": [
    "image"
   ],
   "rules": [
    {
     "format": {
      "api": "OpenGLES",
      "major": 2,
      "minor": 0
     },
     "substitution": "highp vec3 $image = vec3($r, $g, $b);"
    },
    {
     "format": {
      "api": "OpenGLCoreProfile",
      "major": 3,
      "minor": 0
     },
     "substitution": "vec3 $image = vec3($r, $g, $b);"
    }
   ]
  },
  "COMBXYZ": {
   "inputs": [
    "x",
    "y",
    "z"
   ],
   "outputs": [
    "vector"
   ],
   "rules": [
    {
     "format": {
      "api": "OpenGLES",
      "major": 2,
      "minor": 0
     },
     "substitution": "highp vec3 $vector = vec3($x, $y, $z);"
    },
    {
     "format": {
      "api": "OpenGLCoreProfile",
      "major": 3,
      "minor": 0
     },
     "substitution": "vec3 $vector = vec3($x, $y, $z);"
    }
   ]
  },
  "MATERIAL_OUTPUT": {
   "inputs": [
    "color"
   ],
   "rules": [
    {
     "format": {
      "api": "OpenGLES",
      "major": 2,
      "minor": 0
     },
     "substitution": "gl_FragColor = clamp($color, 0.0, 1.0);"
    },
    {
     "format": {
      "api": "OpenGLES",
      "major": 3,
      "minor": 0
     },
     "headerSnippets": [
      "out highp vec4 fragColor;"
     ],
     "substitution": "fragColor = clamp($color, 0.0, 1.0);"
    },
    {
     "format": {
      "api": "OpenGLCoreProfile",
      "major": 3,
      "minor": 0
     },
     "headerSnippets": [
      "out vec4 fragColor;"
     ],
     "substitution": "fragColor = clamp($color, 0.0, 1.0);"
    }
   ]
  },
  "MIX": {
   "inputs": [
    "fac",
    "input1",
    "input2"
   ],
   "outputs": [
    "mixed"
   ],
   "parameters": {
    "type": {
     "type": "QShaderLanguage::VariableType",
     "value": "QShaderLanguage::Vec4"
    }
   },
   "rules": [
    {
     "format": {
      "api": "OpenGLES",
      "major": 2,
      "minor": 0
     },
     "substitution": "highp $type $mixed = mix($input1, $input2, $fac);"
    },
    {
     "format": {
      "api": "OpenGLCoreProfile",
      "major": 3,
      "minor": 0
     },
     "substitution": "$type $mixed = mix($input1, $input2, $fac);"
    }
   ]
  },
  "CLAMP": {
   "inputs": [
    "value",
    "min",
    "max"
   ],
   "outputs": [
    "result"
   ],
   "parameters": {
    "type": {
     "type": "QShaderLanguage::VariableType",
     "value": "QShaderLanguage::Vec4"
    }
   },
   "rules": [
    {
     "format": {
      "api": "OpenGLES",
      "major": 2,
      "minor": 0
     },
     "substitution": "highp $type $result = clamp($value, $min, $max);"
    },
    {
     "format": {
      "api": "OpenGLCoreProfile",
      "major": 3,
      "minor": 0
     },
     "substitution": "$type $result = clamp($value, $min, $max);"
    }
   ]
  },
  "NEW_GEOMETRY": {
   "outputs": [
    "position",
    "normal",
    "tangent"
   ],
   "rules": [
    {
     "format": {
      "api": "OpenGLES",
      "major": 2,
      "minor": 0
     },
     "headerSnippets": [
      "#ifndef NEW_GEOMETRY",
      "#define NEW_GEOMETRY",
      "varying highp vec3 worldPosition;",
      "varying highp vec3 worldNormal;",
      "varying highp vec4 worldTangent;",
      "#endif"
     ],
     "substitution": "highp vec3 $position = worldPosition;highp vec3 $normal = normalize(worldNormal);highp vec3 $tangent = worldTangent.xyz;"
    },
    {
     "format": {
      "api": "OpenGLCoreProfile",
      "major": 3,
      "minor": 0
     },
     "headerSnippets": [
      "#ifndef NEW_GEOMETRY",
      "#define NEW_GEOMETRY",
      "in vec3 worldPosition;",
      "in vec3 worldNormal;",
      "in vec4 vertexTan;",
      "#endif"
     ],
     "substitution": "vec3 $position = worldPosition;vec3 $normal = normalize(worldNormal);vec3 $tangent = worldTangent.xyz;"
    }
   ]
  },
  "SEPRGB": {
   "inputs": [
    "color"
   ],
   "outputs": [
    "r",
    "g",
    "b"
   ],
   "rules": [
    {
     "format": {
      "api": "OpenGLES",
      "major": 2,
      "minor": 0
     },
     "substitution": "highp float $r = $color.r;highp float $g = $color.g;highp float $b = $color.b;"
    },
    {
     "format": {
      "api": "OpenGLCoreProfile",
      "major": 3,
      "minor": 0
     },
     "substitution": "float $r = $color.r;float $g = $color.g;float $b = $color.b;"
    }
   ]
  },
  "SEPXYZ": {
   "inputs": [
    "vector"
   ],
   "outputs": [
    "x",
    "y",
    "z"
   ],
   "rules": [
    {
     "format": {
      "api": "OpenGLES",
      "major": 2,
      "minor": 0
     },
     "substitution": "highp float $x = $vector.x;highp float $y = $vector.y;highp float $z = $vector.z;"
    },
    {
     "format": {
      "api": "OpenGLCoreProfile",
      "major": 3,
      "minor": 0
     },
     "substitution": "float $x = $vector.x;float $y = $vector.y;float $z = $vector.z;"
    }
   ]
  },
  "TEX_COORD": {
   "outputs": [
    "uv"
   ],
   "rules": [
    {
     "format": {
      "api": "OpenGLES",
      "major": 2,
      "minor": 0
     },
     "headerSnippets": [
      "#ifndef TEX_COORD",
      "#define TEX_COORD",
      "varying highp vec2 texCoord;",
      "#endif"
     ],
     "substitution": "highp vec2 $uv = texCoord;"
    },
    {
     "format": {
      "api": "OpenGLCoreProfile",
      "major": 3,
      "minor": 0
     },
     "headerSnippets": [
      "#ifndef TEX_COORD",
      "#define TEX_COORD",
      "in vec2 texCoord;",
      "#endif"
     ],
     "substitution": "vec2 $uv = texCoord;"
    }
   ]
  },
  "TEX_IMAGE": {
   "inputs": [
    "texture",
    "useTexture",
    "vector"
   ],
   "outputs": [
    "color",
    "alpha",
    "inter"
   ],
   "parameters": {
    "defaultColor": "1.0, 1.0, 1.0, 1.0",
    "condition": "false",
    "name": "",
    "linearizer": ""
   },
   "rules": [
    {
     "format": {
      "api": "OpenGLES",
      "major": 2,
      "minor": 0
     },
     "headerSnippets": [
      "#ifndef SRGB_TO_LINEAR",
      "#define SRGB_TO_LINEAR",
      "highp vec3 sRGBtoLinear(highp vec3 srgb) { return pow(srgb, vec3(2.2)); }",
      "#endif"
     ],
     "substitution": "highp vec4 $inter = $useTexture ? texture2D($texture, $vector.xy) : vec4($defaultColor);highp vec3 $color = $linearizer($inter.rgb);highp float $alpha = $inter.a;"
    },
    {
     "format": {
      "api": "OpenGLCoreProfile",
      "major": 3,
      "minor": 0
     },
     "headerSnippets": [
      "#ifndef SRGB_TO_LINEAR",
      "#define SRGB_TO_LINEAR",
      "vec3 sRGBtoLinear(vec3 srgb) { return pow(srgb, vec3(2.2)); }",
      "#endif"
     ],
     "substitution": "vec4 $inter = $useTexture ? texture($texture, $vector.xy) : vec4($defaultColor);vec3 $color = $linearizer($inter.rgb);float $alpha = $inter.a;"
    }
   ]
  },
  "UNARY_MATH_FUNCTION": {
   "inputs": [
    "input0"
   ],
   "outputs": [
    "output0"
   ],
   "parameters": {
    "firstType": {
     "type": "QShaderLanguage::VariableType",
     "value": "QShaderLanguage::Vec3"
    },
    "operation": "round",
    "outputType": {
     "type": "QShaderLanguage::VariableType",
     "value": "QShaderLanguage::Vec3"
    }
   },
   "rules": [
    {
     "format": {
      "api": "OpenGLES",
      "major": 2,
      "minor": 0
     },
     "substitution": "highp $outputType $output0 = $operation($input0);"
    },
    {
     "format": {
      "api": "OpenGLCoreProfile",
      "major": 3,
      "minor": 0
     },
     "substitution": "$outputType $output0 = $operation($input0);"
    }
   ]
  },
  "VERTEX_COLOR": {
   "outputs": [
    "color",
    "alpha"
   ],
   "rules": [
    {
     "format": {
      "api": "OpenGLES",
      "major": 2,
      "minor": 0
     },
     "headerSnippets": [
      "#ifndef VERTEX_COLOR",
      "#define VERTEX_COLOR",
      "varying highp vec4 color;",
      "#endif"
     ],
     "substitution": "highp vec3 $color = color.rgb;highp float $alpha = color.a;"
    },
    {
     "format": {
      "api": "OpenGLCoreProfile",
      "major": 3,
      "minor": 0
     },
     "headerSnippets": [
      "#ifndef VERTEX_COLOR",
      "#define VERTEX_COLOR",
      "in vec4 color;",
      "#endif"
     ],
     "substitution": "vec3 $color = color.rgb;float $alpha = color.a;"
    }
   ]
  },
  "constant": {
   "outputs": [
    "value"
   ],
   "parameters": {
    "constant": "0.0",
    "type": {
     "type": "QShaderLanguage::VariableType",
     "value": "QShaderLanguage::Float"
    }
   },
   "rules": [
    {
     "format": {
      "api": "OpenGLES",
      "major": 2,
      "minor": 0
     },
     "substitution": "highp $type $value = $type($constant);"
    },
    {
     "format": {
      "api": "OpenGLCoreProfile",
      "major": 3,
      "minor": 0
     },
     "substitution": "$type $value = $type($constant);"
    }
   ]
  },
  "MATERIAL_PROPERTIES": {
   "outputs": [
    "usesReflectionMap",
    "reflectionMap",
    "usesDiffuseMap",
    "diffuseMap",
    "normalScaling",
    "normalDisturb",
    "reflectionGain",
    "reflectionInnerFilter",
    "reflectionOuterFilter",
    "diffuseGain",
    "diffuseInnerFilter",
    "diffuseOuterFilter",
    "postVertexColor",
    "postGain"
   ],
   "rules": [
    {
     "format": {
      "api": "OpenGLES",
      "major": 2,
      "minor": 0
     },
     "headerSnippets": [
      "struct MaterialProperties {\n    bool usesReflectionMap;\n    highp sampler2D reflectionMap;\n    bool usesDiffuseMap;\n    highp sampler2D diffuseMap;\n    highp vec3 normalScaling;\n    highp vec3 normalDisturb;\n    highp float reflectionGain;\n    highp vec3 reflectionInnerFilter;\n    highp vec3 reflectionOuterFilter;\n    highp float diffuseGain;\n    highp vec3 diffuseInnerFilter;\n    highp vec3 diffuseOuterFilter;\n    highp float postVertexColor;\n    highp float postGain;\n};\nuniform MaterialProperties properties;"
     ],
     "substitution": "MaterialProperties $properties = properties;bool $usesReflectionMap = properties.usesReflectionMap;highp sampler2D $reflectionMap = properties.reflectionMap;bool $usesDiffuseMap = properties.usesDiffuseMap;highp sampler2D $diffuseMap = properties.diffuseMap;highp vec3 $normalScaling = properties.normalScaling;highp vec3 $normalDisturb = properties.normalDisturb;highp float $reflectionGain = properties.reflectionGain;highp vec3 $reflectionInnerFilter = properties.reflectionInnerFilter;highp vec3 $reflectionOuterFilter = properties.reflectionOuterFilter;highp float $diffuseGain = properties.diffuseGain;highp vec3 $diffuseInnerFilter = properties.diffuseInnerFilter;highp vec3 $diffuseOuterFilter = properties.diffuseOuterFilter;highp float $postVertexColor = properties.postVertexColor;highp float $postGain = properties.postGain;"
    },
    {
     "format": {
      "api": "OpenGLCoreProfile",
      "major": 3,
      "minor": 0
     },
     "headerSnippets": [
      "struct MaterialProperties {\n    bool usesReflectionMap;\n    sampler2D reflectionMap;\n    bool usesDiffuseMap;\n    sampler2D diffuseMap;\n    vec3 normalScaling;\n    vec3 normalDisturb;\n    float reflectionGain;\n    vec3 reflectionInnerFilter;\n    vec3 reflectionOuterFilter;\n    float diffuseGain;\n    vec3 diffuseInnerFilter;\n    vec3 diffuseOuterFilter;\n    float postVertexColor;\n    float postGain;\n};\nuniform MaterialProperties properties;"
     ],
     "substitution": "MaterialProperties $properties = properties;bool $usesReflectionMap = properties.usesReflectionMap;sampler2D $reflectionMap = properties.reflectionMap;bool $usesDiffuseMap = properties.usesDiffuseMap;sampler2D $diffuseMap = properties.diffuseMap;vec3 $normalScaling = properties.normalScaling;vec3 $normalDisturb = properties.normalDisturb;float $reflectionGain = properties.reflectionGain;vec3 $reflectionInnerFilter = properties.reflectionInnerFilter;vec3 $reflectionOuterFilter = properties.reflectionOuterFilter;float $diffuseGain = properties.diffuseGain;vec3 $diffuseInnerFilter = properties.diffuseInnerFilter;vec3 $diffuseOuterFilter = properties.diffuseOuterFilter;float $postVertexColor = properties.postVertexColor;float $postGain = properties.postGain;"
    }
   ]
  }
 }
}