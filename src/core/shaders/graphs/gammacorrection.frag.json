{
    "edges": [
        {
            "layers": [
            ],
            "sourcePort": "value",
            "sourceUuid": "{3ed342dd-62f8-4848-ae65-8dbb4216833c}",
            "targetPort": "gamma",
            "targetUuid": "{0f29d421-d458-4682-bbcc-f4be1e3b07c2}"
        },
        {
            "layers": [
            ],
            "sourcePort": "outputColor",
            "sourceUuid": "{0f29d421-d458-4682-bbcc-f4be1e3b07c2}",
            "targetPort": "first",
            "targetUuid": "{e7d81f3f-b8d8-4925-bc5a-5fd8673cc0b1}"
        },
        {
            "layers": [
            ],
            "sourcePort": "output",
            "sourceUuid": "{e7d81f3f-b8d8-4925-bc5a-5fd8673cc0b1}",
            "targetPort": "fragColor",
            "targetUuid": "{11403ec0-928f-459a-800b-5d036a4bf3fd}"
        },
        {
            "layers": [
            ],
            "sourcePort": "value",
            "sourceUuid": "{8a90fa90-bb64-43a7-b9a7-fe603a07883a}",
            "targetPort": "coord",
            "targetUuid": "{b5232847-0e3f-4407-a2fc-8dda60677978}"
        },
        {
            "layers": [
            ],
            "sourcePort": "color",
            "sourceUuid": "{b5232847-0e3f-4407-a2fc-8dda60677978}",
            "targetPort": "input",
            "targetUuid": "{e9fd8e73-8e85-472c-9322-a3f00e6310a9}"
        },
        {
            "layers": [
            ],
            "sourcePort": "output",
            "sourceUuid": "{e9fd8e73-8e85-472c-9322-a3f00e6310a9}",
            "targetPort": "second",
            "targetUuid": "{e7d81f3f-b8d8-4925-bc5a-5fd8673cc0b1}"
        },
        {
            "layers": [
            ],
            "sourcePort": "color",
            "sourceUuid": "{b5232847-0e3f-4407-a2fc-8dda60677978}",
            "targetPort": "input",
            "targetUuid": "{bb7fbe61-45ee-4ba9-bb5e-256586a04699}"
        },
        {
            "layers": [
                "useFilmicToneMap"
            ],
            "sourcePort": "outputColor",
            "sourceUuid": "{ebf1b974-7778-4e9a-bfcb-821d66d82ed3}",
            "targetPort": "color",
            "targetUuid": "{0f29d421-d458-4682-bbcc-f4be1e3b07c2}"
        },
        {
            "layers": [
                "useReinhardToneMap"
            ],
            "sourcePort": "outputColor",
            "sourceUuid": "{e9c5c22b-32f7-4a6b-b659-f9c8fcbcf203}",
            "targetPort": "color",
            "targetUuid": "{0f29d421-d458-4682-bbcc-f4be1e3b07c2}"
        },
        {
            "layers": [
            ],
            "sourcePort": "output",
            "sourceUuid": "{bb7fbe61-45ee-4ba9-bb5e-256586a04699}",
            "targetPort": "color",
            "targetUuid": "{d933bd63-903f-4ff1-9214-0886d09c4723}"
        },
        {
            "layers": [
                "useFilmicToneMap"
            ],
            "sourcePort": "outputColor",
            "sourceUuid": "{d933bd63-903f-4ff1-9214-0886d09c4723}",
            "targetPort": "color",
            "targetUuid": "{ebf1b974-7778-4e9a-bfcb-821d66d82ed3}"
        },
        {
            "layers": [
                "useReinhardToneMap"
            ],
            "sourcePort": "outputColor",
            "sourceUuid": "{d933bd63-903f-4ff1-9214-0886d09c4723}",
            "targetPort": "color",
            "targetUuid": "{e9c5c22b-32f7-4a6b-b659-f9c8fcbcf203}"
        },
        {
            "layers": [
            ],
            "sourcePort": "value",
            "sourceUuid": "{e5f27a50-dbec-4168-a896-3602783501de}",
            "targetPort": "exposure",
            "targetUuid": "{d933bd63-903f-4ff1-9214-0886d09c4723}"
        },
        {
            "layers": [
                "noToneMap"
            ],
            "sourcePort": "outputColor",
            "sourceUuid": "{d933bd63-903f-4ff1-9214-0886d09c4723}",
            "targetPort": "color",
            "targetUuid": "{0f29d421-d458-4682-bbcc-f4be1e3b07c2}"
        }
    ],
    "nodes": [
        {
            "layers": [
            ],
            "parameters": {
            },
            "type": "kuesa_gammaCorrect",
            "uuid": "{0f29d421-d458-4682-bbcc-f4be1e3b07c2}"
        },
        {
            "layers": [
            ],
            "parameters": {
                "name": "gamma",
                "qualifier": {
                    "type": "QShaderLanguage::StorageQualifier",
                    "value": "QShaderLanguage::Uniform"
                },
                "type": {
                    "type": "QShaderLanguage::VariableType",
                    "value": "QShaderLanguage::Float"
                }
            },
            "type": "input",
            "uuid": "{3ed342dd-62f8-4848-ae65-8dbb4216833c}"
        },
        {
            "layers": [
            ],
            "parameters": {
            },
            "type": "fragColor",
            "uuid": "{11403ec0-928f-459a-800b-5d036a4bf3fd}"
        },
        {
            "layers": [
            ],
            "parameters": {
                "type": {
                    "type": "QShaderLanguage::VariableType",
                    "value": "QShaderLanguage::Vec4"
                },
                "typeOfFirst": {
                    "type": "QShaderLanguage::VariableType",
                    "value": "QShaderLanguage::Vec3"
                },
                "typeOfSecond": {
                    "type": "QShaderLanguage::VariableType",
                    "value": "QShaderLanguage::Float"
                }
            },
            "type": "join2",
            "uuid": "{e7d81f3f-b8d8-4925-bc5a-5fd8673cc0b1}"
        },
        {
            "layers": [
            ],
            "parameters": {
                "name": "inputTexture"
            },
            "type": "sampleTexture",
            "uuid": "{b5232847-0e3f-4407-a2fc-8dda60677978}"
        },
        {
            "layers": [
            ],
            "parameters": {
                "name": "texCoord",
                "qualifier": {
                    "type": "QShaderLanguage::StorageQualifier",
                    "value": "QShaderLanguage::Input"
                },
                "type": {
                    "type": "QShaderLanguage::VariableType",
                    "value": "QShaderLanguage::Vec2"
                }
            },
            "type": "input",
            "uuid": "{8a90fa90-bb64-43a7-b9a7-fe603a07883a}"
        },
        {
            "layers": [
            ],
            "parameters": {
                "fields": "a",
                "inputType": {
                    "type": "QShaderLanguage::VariableType",
                    "value": "QShaderLanguage::Vec4"
                },
                "type": {
                    "type": "QShaderLanguage::VariableType",
                    "value": "QShaderLanguage::Float"
                }
            },
            "type": "swizzle",
            "uuid": "{e9fd8e73-8e85-472c-9322-a3f00e6310a9}"
        },
        {
            "layers": [
            ],
            "parameters": {
                "fields": "rgb",
                "inputType": {
                    "type": "QShaderLanguage::VariableType",
                    "value": "QShaderLanguage::Vec4"
                },
                "type": {
                    "type": "QShaderLanguage::VariableType",
                    "value": "QShaderLanguage::Vec3"
                }
            },
            "type": "swizzle",
            "uuid": "{bb7fbe61-45ee-4ba9-bb5e-256586a04699}"
        },
        {
            "layers": [
                "useReinhardToneMap"
            ],
            "parameters": {
            },
            "type": "kuesa_reinhardToneMap",
            "uuid": "{e9c5c22b-32f7-4a6b-b659-f9c8fcbcf203}"
        },
        {
            "layers": [
                "useFilmicToneMap"
            ],
            "parameters": {
            },
            "type": "kuesa_filmicToneMap",
            "uuid": "{ebf1b974-7778-4e9a-bfcb-821d66d82ed3}"
        },
        {
            "layers": [
            ],
            "parameters": {
            },
            "type": "kuesa_exposureCorrect",
            "uuid": "{d933bd63-903f-4ff1-9214-0886d09c4723}"
        },
        {
            "layers": [
            ],
            "parameters": {
                "name": "finalExposure",
                "qualifier": {
                    "type": "QShaderLanguage::StorageQualifier",
                    "value": "QShaderLanguage::Uniform"
                },
                "type": {
                    "type": "QShaderLanguage::VariableType",
                    "value": "QShaderLanguage::Float"
                }
            },
            "type": "input",
            "uuid": "{e5f27a50-dbec-4168-a896-3602783501de}"
        }
    ],
    "prototypes": {
        "fragColor": {
            "inputs": [
                "fragColor"
            ],
            "rules": [
                {
                    "format": {
                        "api": "OpenGLES",
                        "major": 2,
                        "minor": 0
                    },
                    "substitution": "gl_FragColor = $fragColor;"
                },
                {
                    "format": {
                        "api": "OpenGLES",
                        "major": 3,
                        "minor": 0
                    },
                    "headerSnippets": [
                        "out highp vec4 fragColor;"
                    ],
                    "substitution": "fragColor = $fragColor;"
                },
                {
                    "format": {
                        "api": "OpenGLCoreProfile",
                        "major": 3,
                        "minor": 0
                    },
                    "headerSnippets": [
                        "out vec4 fragColor;"
                    ],
                    "substitution": "fragColor = $fragColor;"
                }
            ]
        },
        "input": {
            "outputs": [
                "value"
            ],
            "parameters": {
                "name": "defaultName",
                "qualifier": {
                    "type": "QShaderLanguage::StorageQualifier",
                    "value": "QShaderLanguage::Input"
                },
                "type": {
                    "type": "QShaderLanguage::VariableType",
                    "value": "QShaderLanguage::Vec3"
                }
            },
            "rules": [
                {
                    "format": {
                        "api": "OpenGLES",
                        "major": 2,
                        "minor": 0
                    },
                    "headerSnippets": [
                        "$qualifier highp $type $name;"
                    ],
                    "substitution": "highp $type $value = $name;"
                },
                {
                    "format": {
                        "api": "OpenGLCoreProfile",
                        "major": 3,
                        "minor": 0
                    },
                    "headerSnippets": [
                        "$qualifier $type $name;"
                    ],
                    "substitution": "$type $value = $name;"
                }
            ]
        },
        "join2": {
            "inputs": [
                "first",
                "second"
            ],
            "outputs": [
                "output"
            ],
            "parameters": {
                "type": {
                    "type": "QShaderLanguage::VariableType",
                    "value": "QShaderLanguage::Vec2"
                },
                "typeOfFirst": {
                    "type": "QShaderLanguage::VariableType",
                    "value": "QShaderLanguage::Float"
                },
                "typeOfSecond": {
                    "type": "QShaderLanguage::VariableType",
                    "value": "QShaderLanguage::Float"
                }
            },
            "rules": [
                {
                    "format": {
                        "api": "OpenGLES",
                        "major": 2,
                        "minor": 0
                    },
                    "substitution": "highp $type $output = $type($first, $second);"
                },
                {
                    "format": {
                        "api": "OpenGLCoreProfile",
                        "major": 3,
                        "minor": 0
                    },
                    "substitution": "$type $output = $type($first, $second);"
                }
            ]
        },
        "kuesa_exposureCorrect": {
            "inputs": [
                "color",
                "exposure"
            ],
            "outputs": [
                "outputColor"
            ],
            "rules": [
                {
                    "format": {
                        "api": "OpenGLCoreProfile",
                        "major": 3,
                        "minor": 1
                    },
                    "substitution": "vec3 $outputColor = $color * pow(2.0, $exposure);"
                },
                {
                    "format": {
                        "api": "OpenGLES",
                        "major": 2,
                        "minor": 0
                    },
                    "substitution": "highp vec3 $outputColor = $color * pow(2.0, $exposure);"
                },
                {
                    "format": {
                        "api": "OpenGLES",
                        "major": 3,
                        "minor": 0
                    },
                    "substitution": "highp vec3 $outputColor = $color * pow(2.0, $exposure);"
                }
            ]
        },
        "kuesa_filmicToneMap": {
            "inputs": [
                "color"
            ],
            "outputs": [
                "outputColor"
            ],
            "rules": [
                {
                    "format": {
                        "api": "OpenGLCoreProfile",
                        "major": 3,
                        "minor": 1
                    },
                    "headerSnippets": [
                        "vec3 filmicToneMap(const in vec3 c) {\n                                           vec3 x = max(vec3(0.0), c - vec3(0.4));    \n                                           return (x * (6.2 * x + vec3(0.5))) / (x * (6.2 * x + vec3(1.7)) + vec3(0.06));\n                                       }"
                    ],
                    "substitution": "vec3 $outputColor = filmicToneMap($color);"
                },
                {
                    "format": {
                        "api": "OpenGLES",
                        "major": 2,
                        "minor": 0
                    },
                    "headerSnippets": [
                        "highp vec3 filmicToneMap(const in highp vec3 c) {\n                                           highp vec3 x = max(vec3(0.0), c - vec3(0.4));    \n                                           return (x * (6.2 * x + vec3(0.5))) / (x * (6.2 * x + vec3(1.7)) + vec3(0.06));\n                                       }"
                    ],
                    "substitution": "highp vec3 $outputColor = filmicToneMap($color);"
                },
                {
                    "format": {
                        "api": "OpenGLES",
                        "major": 3,
                        "minor": 0
                    },
                    "headerSnippets": [
                        "highp vec3 filmicToneMap(const in highp vec3 c) {\n                                           highp vec3 x = max(vec3(0.0), c - vec3(0.4));    \n                                           return (x * (6.2 * x + vec3(0.5))) / (x * (6.2 * x + vec3(1.7)) + vec3(0.06));\n                                       }"
                    ],
                    "substitution": "highp vec3 $outputColor = filmicToneMap($color);"
                }
            ]
        },
        "kuesa_gammaCorrect": {
            "inputs": [
                "color",
                "gamma"
            ],
            "outputs": [
                "outputColor"
            ],
            "rules": [
                {
                    "format": {
                        "api": "OpenGLCoreProfile",
                        "major": 3,
                        "minor": 1
                    },
                    "substitution": "vec3 $outputColor = pow($color, vec3(1.0 / $gamma));"
                },
                {
                    "format": {
                        "api": "OpenGLES",
                        "major": 2,
                        "minor": 0
                    },
                    "substitution": "highp vec3 $outputColor = pow($color, vec3(1.0 / $gamma));"
                },
                {
                    "format": {
                        "api": "OpenGLES",
                        "major": 3,
                        "minor": 0
                    },
                    "substitution": "highp vec3 $outputColor = pow($color, vec3(1.0 / $gamma));"
                }
            ]
        },
        "kuesa_reinhardToneMap": {
            "inputs": [
                "color"
            ],
            "outputs": [
                "outputColor"
            ],
            "rules": [
                {
                    "format": {
                        "api": "OpenGLCoreProfile",
                        "major": 3,
                        "minor": 1
                    },
                    "substitution": "vec3 $outputColor = $color / ($color + vec3(1.0));"
                },
                {
                    "format": {
                        "api": "OpenGLES",
                        "major": 2,
                        "minor": 0
                    },
                    "substitution": "highp vec3 $outputColor = $color / ($color + vec3(1.0));"
                },
                {
                    "format": {
                        "api": "OpenGLES",
                        "major": 3,
                        "minor": 0
                    },
                    "substitution": "highp vec3 $outputColor = $color / ($color + vec3(1.0));"
                }
            ]
        },
        "sampleTexture": {
            "inputs": [
                "coord"
            ],
            "outputs": [
                "color"
            ],
            "parameters": {
                "name": "defaultName"
            },
            "rules": [
                {
                    "format": {
                        "api": "OpenGLES",
                        "major": 2,
                        "minor": 0
                    },
                    "headerSnippets": [
                        "uniform sampler2D $name;"
                    ],
                    "substitution": "highp vec4 $color = texture2D($name, $coord);"
                },
                {
                    "format": {
                        "api": "OpenGLES",
                        "major": 3,
                        "minor": 0
                    },
                    "headerSnippets": [
                        "uniform sampler2D $name;"
                    ],
                    "substitution": "highp vec4 $color = texture($name, $coord);"
                },
                {
                    "format": {
                        "api": "OpenGLCoreProfile",
                        "major": 3,
                        "minor": 0
                    },
                    "headerSnippets": [
                        "uniform sampler2D $name;"
                    ],
                    "substitution": "vec4 $color = texture($name, $coord);"
                }
            ]
        },
        "swizzle": {
            "inputs": [
                "input"
            ],
            "outputs": [
                "output"
            ],
            "parameters": {
                "fields": "x",
                "inputType": {
                    "type": "QShaderLanguage::VariableType",
                    "value": "QShaderLanguage::Vec3"
                },
                "type": {
                    "type": "QShaderLanguage::VariableType",
                    "value": "QShaderLanguage::Vec3"
                }
            },
            "rules": [
                {
                    "format": {
                        "api": "OpenGLES",
                        "major": 2,
                        "minor": 0
                    },
                    "substitution": "highp $type $output = $input.$fields;"
                },
                {
                    "format": {
                        "api": "OpenGLCoreProfile",
                        "major": 3,
                        "minor": 0
                    },
                    "substitution": "$type $output = $input.$fields;"
                }
            ]
        }
    }
}
