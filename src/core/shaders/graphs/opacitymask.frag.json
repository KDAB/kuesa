{
    "edges": [
        {
            "layers": [
            ],
            "sourcePort": "value",
            "sourceUuid": "{faa048f4-bfb7-4369-ae83-09892d3d0942}",
            "targetPort": "second",
            "targetUuid": "{f1dba7e5-3798-4882-abf7-ef99fca3607c}"
        },
        {
            "layers": [
                "premultiplied_alpha"
            ],
            "sourcePort": "output",
            "sourceUuid": "{6fc41ef9-add0-4365-8823-f9b76f8cd82f}",
            "targetPort": "first",
            "targetUuid": "{f1dba7e5-3798-4882-abf7-ef99fca3607c}"
        },
        {
            "layers": [
            ],
            "sourcePort": "color",
            "sourceUuid": "{388a2be2-54d2-414d-b16a-041fd2e11ef6}",
            "targetPort": "input",
            "targetUuid": "{6fc41ef9-add0-4365-8823-f9b76f8cd82f}"
        },
        {
            "layers": [
            ],
            "sourcePort": "product",
            "sourceUuid": "{70939243-be4d-4d57-9b51-14dfdbd15221}",
            "targetPort": "second",
            "targetUuid": "{cdd4b6a8-be3e-4516-98d3-e7cabb98ce5f}"
        },
        {
            "layers": [
                "regular"
            ],
            "sourcePort": "output",
            "sourceUuid": "{b81daced-f535-409f-a783-6f28b6cf5fa9}",
            "targetPort": "first",
            "targetUuid": "{cdd4b6a8-be3e-4516-98d3-e7cabb98ce5f}"
        },
        {
            "layers": [
            ],
            "sourcePort": "color",
            "sourceUuid": "{738d9846-00ad-48f2-a1a9-e06f93aa1e05}",
            "targetPort": "input",
            "targetUuid": "{166d7f71-0cf0-470a-ab1c-a3d797a80380}"
        },
        {
            "layers": [
                "premultiplied_alpha"
            ],
            "sourcePort": "value",
            "sourceUuid": "{f1dba7e5-3798-4882-abf7-ef99fca3607c}",
            "targetPort": "second",
            "targetUuid": "{a088b3cc-aae3-406a-8440-26cd29a7c8ee}"
        },
        {
            "layers": [
            ],
            "sourcePort": "value",
            "sourceUuid": "{b278be38-ac50-411c-bf4a-701808cd1988}",
            "targetPort": "coord",
            "targetUuid": "{738d9846-00ad-48f2-a1a9-e06f93aa1e05}"
        },
        {
            "layers": [
                "premultiplied_alpha"
            ],
            "sourcePort": "quotient",
            "sourceUuid": "{a088b3cc-aae3-406a-8440-26cd29a7c8ee}",
            "targetPort": "first",
            "targetUuid": "{cdd4b6a8-be3e-4516-98d3-e7cabb98ce5f}"
        },
        {
            "layers": [
            ],
            "sourcePort": "output",
            "sourceUuid": "{cdd4b6a8-be3e-4516-98d3-e7cabb98ce5f}",
            "targetPort": "fragColor",
            "targetUuid": "{38285788-33e6-4891-b67e-7e9b723dcb5e}"
        },
        {
            "layers": [
            ],
            "sourcePort": "value",
            "sourceUuid": "{b278be38-ac50-411c-bf4a-701808cd1988}",
            "targetPort": "coord",
            "targetUuid": "{388a2be2-54d2-414d-b16a-041fd2e11ef6}"
        },
        {
            "layers": [
            ],
            "sourcePort": "output",
            "sourceUuid": "{166d7f71-0cf0-470a-ab1c-a3d797a80380}",
            "targetPort": "second",
            "targetUuid": "{70939243-be4d-4d57-9b51-14dfdbd15221}"
        },
        {
            "layers": [
            ],
            "sourcePort": "output",
            "sourceUuid": "{6fc41ef9-add0-4365-8823-f9b76f8cd82f}",
            "targetPort": "first",
            "targetUuid": "{70939243-be4d-4d57-9b51-14dfdbd15221}"
        },
        {
            "layers": [
            ],
            "sourcePort": "color",
            "sourceUuid": "{738d9846-00ad-48f2-a1a9-e06f93aa1e05}",
            "targetPort": "input",
            "targetUuid": "{b81daced-f535-409f-a783-6f28b6cf5fa9}"
        },
        {
            "layers": [
                "premultiplied_alpha"
            ],
            "sourcePort": "output",
            "sourceUuid": "{b81daced-f535-409f-a783-6f28b6cf5fa9}",
            "targetPort": "first",
            "targetUuid": "{a088b3cc-aae3-406a-8440-26cd29a7c8ee}"
        }
    ],
    "nodes": [
        {
            "layers": [
            ],
            "parameters": {
                "fields": "a",
                "inputType": {
                    "type": "QShaderLanguage::VariableType",
                    "value": "QShaderLanguage::Vec4"
                },
                "type": {
                    "type": "QShaderLanguage::VariableType",
                    "value": "QShaderLanguage::Float"
                }
            },
            "type": "swizzle",
            "uuid": "{6fc41ef9-add0-4365-8823-f9b76f8cd82f}"
        },
        {
            "layers": [
            ],
            "parameters": {
            },
            "type": "fragColor",
            "uuid": "{38285788-33e6-4891-b67e-7e9b723dcb5e}"
        },
        {
            "layers": [
            ],
            "parameters": {
                "fields": "a",
                "inputType": {
                    "type": "QShaderLanguage::VariableType",
                    "value": "QShaderLanguage::Vec4"
                },
                "type": {
                    "type": "QShaderLanguage::VariableType",
                    "value": "QShaderLanguage::Float"
                }
            },
            "type": "swizzle",
            "uuid": "{166d7f71-0cf0-470a-ab1c-a3d797a80380}"
        },
        {
            "layers": [
                "premultiplied_alpha"
            ],
            "parameters": {
                "secondType": {
                    "type": "QShaderLanguage::VariableType",
                    "value": "QShaderLanguage::Float"
                },
                "type": {
                    "type": "QShaderLanguage::VariableType",
                    "value": "QShaderLanguage::Float"
                }
            },
            "type": "max",
            "uuid": "{f1dba7e5-3798-4882-abf7-ef99fca3607c}"
        },
        {
            "layers": [
            ],
            "parameters": {
                "constant": "0.01",
                "type": {
                    "type": "QShaderLanguage::VariableType",
                    "value": "QShaderLanguage::Float"
                }
            },
            "type": "constant",
            "uuid": "{faa048f4-bfb7-4369-ae83-09892d3d0942}"
        },
        {
            "layers": [
            ],
            "parameters": {
                "fields": "rgb",
                "inputType": {
                    "type": "QShaderLanguage::VariableType",
                    "value": "QShaderLanguage::Vec4"
                }
            },
            "type": "swizzle",
            "uuid": "{b81daced-f535-409f-a783-6f28b6cf5fa9}"
        },
        {
            "layers": [
                "premultiplied_alpha"
            ],
            "parameters": {
                "secondType": {
                    "type": "QShaderLanguage::VariableType",
                    "value": "QShaderLanguage::Float"
                }
            },
            "type": "divide",
            "uuid": "{a088b3cc-aae3-406a-8440-26cd29a7c8ee}"
        },
        {
            "layers": [
            ],
            "parameters": {
                "name": "maskTexture"
            },
            "type": "sampleTexture",
            "uuid": "{388a2be2-54d2-414d-b16a-041fd2e11ef6}"
        },
        {
            "layers": [
            ],
            "parameters": {
                "secondType": {
                    "type": "QShaderLanguage::VariableType",
                    "value": "QShaderLanguage::Float"
                },
                "type": {
                    "type": "QShaderLanguage::VariableType",
                    "value": "QShaderLanguage::Float"
                }
            },
            "type": "multiply",
            "uuid": "{70939243-be4d-4d57-9b51-14dfdbd15221}"
        },
        {
            "layers": [
            ],
            "parameters": {
                "type": {
                    "type": "QShaderLanguage::VariableType",
                    "value": "QShaderLanguage::Vec4"
                },
                "typeOfFirst": {
                    "type": "QShaderLanguage::VariableType",
                    "value": "QShaderLanguage::Vec3"
                }
            },
            "type": "join2",
            "uuid": "{cdd4b6a8-be3e-4516-98d3-e7cabb98ce5f}"
        },
        {
            "layers": [
            ],
            "parameters": {
                "name": "texCoord",
                "type": {
                    "type": "QShaderLanguage::VariableType",
                    "value": "QShaderLanguage::Vec2"
                }
            },
            "type": "input",
            "uuid": "{b278be38-ac50-411c-bf4a-701808cd1988}"
        },
        {
            "layers": [
            ],
            "parameters": {
                "name": "inputTexture"
            },
            "type": "sampleTexture",
            "uuid": "{738d9846-00ad-48f2-a1a9-e06f93aa1e05}"
        }
    ],
    "prototypes": {
        "constant": {
            "inputs": [
            ],
            "name": "constant",
            "outputs": [
                "value"
            ],
            "parameters": {
                "constant": {
                    "type": "QString",
                    "value": "0.0"
                },
                "type": {
                    "type": "QShaderLanguage::VariableType",
                    "value": "QShaderLanguage::Float"
                }
            },
            "rules": [
                {
                    "format": {
                        "api": "OpenGLES",
                        "major": 2,
                        "minor": 0
                    },
                    "headerSnippets": [
                    ],
                    "substitution": "highp $type $value = $type($constant);"
                },
                {
                    "format": {
                        "api": "OpenGLCoreProfile",
                        "major": 3,
                        "minor": 0
                    },
                    "headerSnippets": [
                    ],
                    "substitution": "$type $value = $type($constant);"
                },
                {
                    "format": {
                        "api": "RHI",
                        "major": 1,
                        "minor": 0
                    },
                    "headerSnippets": [
                    ],
                    "substitution": "$type $value = $type($constant);"
                }
            ]
        },
        "divide": {
            "inputs": [
                "first",
                "second"
            ],
            "name": "divide",
            "outputs": [
                "quotient"
            ],
            "parameters": {
                "firstType": {
                    "type": "QShaderLanguage::VariableType",
                    "value": "QShaderLanguage::Vec3"
                },
                "secondType": {
                    "type": "QShaderLanguage::VariableType",
                    "value": "QShaderLanguage::Vec3"
                },
                "type": {
                    "type": "QShaderLanguage::VariableType",
                    "value": "QShaderLanguage::Vec3"
                }
            },
            "rules": [
                {
                    "format": {
                        "api": "OpenGLES",
                        "major": 2,
                        "minor": 0
                    },
                    "headerSnippets": [
                    ],
                    "substitution": "highp $type $quotient = $first / $second;"
                },
                {
                    "format": {
                        "api": "OpenGLCoreProfile",
                        "major": 3,
                        "minor": 0
                    },
                    "headerSnippets": [
                    ],
                    "substitution": "$type $quotient = $first / $second;"
                },
                {
                    "format": {
                        "api": "RHI",
                        "major": 1,
                        "minor": 0
                    },
                    "headerSnippets": [
                    ],
                    "substitution": "$type $quotient = $first / $second;"
                }
            ]
        },
        "fragColor": {
            "inputs": [
                "fragColor"
            ],
            "name": "fragColor",
            "outputs": [
            ],
            "parameters": {
            },
            "rules": [
                {
                    "format": {
                        "api": "OpenGLES",
                        "major": 2,
                        "minor": 0
                    },
                    "headerSnippets": [
                    ],
                    "substitution": "gl_FragColor = $fragColor;"
                },
                {
                    "format": {
                        "api": "OpenGLES",
                        "major": 3,
                        "minor": 0
                    },
                    "headerSnippets": [
                        "out highp vec4 fragColor;"
                    ],
                    "substitution": "fragColor = $fragColor;"
                },
                {
                    "format": {
                        "api": "OpenGLCoreProfile",
                        "major": 3,
                        "minor": 0
                    },
                    "headerSnippets": [
                        "out vec4 fragColor;"
                    ],
                    "substitution": "fragColor = $fragColor;"
                },
                {
                    "format": {
                        "api": "RHI",
                        "major": 1,
                        "minor": 0
                    },
                    "headerSnippets": [
                        "layout(location=0) out vec4 fragColor;"
                    ],
                    "substitution": "fragColor = $fragColor;"
                }
            ]
        },
        "input": {
            "inputs": [
            ],
            "name": "input",
            "outputs": [
                "value"
            ],
            "parameters": {
                "location": {
                    "type": "QString",
                    "value": "0"
                },
                "name": {
                    "type": "QString",
                    "value": "defaultName"
                },
                "type": {
                    "type": "QShaderLanguage::VariableType",
                    "value": "QShaderLanguage::Vec3"
                }
            },
            "rules": [
                {
                    "format": {
                        "api": "OpenGLES",
                        "major": 2,
                        "minor": 0
                    },
                    "headerSnippets": [
                        "attribute highp $type $name;"
                    ],
                    "substitution": "highp $type $value = $name;"
                },
                {
                    "format": {
                        "api": "OpenGLES",
                        "major": 2,
                        "minor": 0
                    },
                    "headerSnippets": [
                        "in highp $type $name;"
                    ],
                    "substitution": "highp $type $value = $name;"
                },
                {
                    "format": {
                        "api": "OpenGLCoreProfile",
                        "major": 3,
                        "minor": 0
                    },
                    "headerSnippets": [
                        "in $type $name;"
                    ],
                    "substitution": "$type $value = $name;"
                },
                {
                    "format": {
                        "api": "RHI",
                        "major": 1,
                        "minor": 0
                    },
                    "headerSnippets": [
                        "layout(location = $location) in $type $name;"
                    ],
                    "substitution": "$type $value = $name;"
                }
            ]
        },
        "join2": {
            "inputs": [
                "first",
                "second"
            ],
            "name": "join2",
            "outputs": [
                "output"
            ],
            "parameters": {
                "type": {
                    "type": "QShaderLanguage::VariableType",
                    "value": "QShaderLanguage::Vec2"
                },
                "typeOfFirst": {
                    "type": "QShaderLanguage::VariableType",
                    "value": "QShaderLanguage::Float"
                },
                "typeOfSecond": {
                    "type": "QShaderLanguage::VariableType",
                    "value": "QShaderLanguage::Float"
                }
            },
            "rules": [
                {
                    "format": {
                        "api": "OpenGLES",
                        "major": 2,
                        "minor": 0
                    },
                    "headerSnippets": [
                    ],
                    "substitution": "highp $type $output = $type($first, $second);"
                },
                {
                    "format": {
                        "api": "OpenGLCoreProfile",
                        "major": 3,
                        "minor": 0
                    },
                    "headerSnippets": [
                    ],
                    "substitution": "$type $output = $type($first, $second);"
                },
                {
                    "format": {
                        "api": "RHI",
                        "major": 1,
                        "minor": 0
                    },
                    "headerSnippets": [
                    ],
                    "substitution": "$type $output = $type($first, $second);"
                }
            ]
        },
        "max": {
            "inputs": [
                "first",
                "second"
            ],
            "name": "max",
            "outputs": [
                "value"
            ],
            "parameters": {
                "secondType": {
                    "type": "QShaderLanguage::VariableType",
                    "value": "QShaderLanguage::Vec3"
                },
                "type": {
                    "type": "QShaderLanguage::VariableType",
                    "value": "QShaderLanguage::Vec3"
                }
            },
            "rules": [
                {
                    "format": {
                        "api": "OpenGLES",
                        "major": 2,
                        "minor": 0
                    },
                    "headerSnippets": [
                    ],
                    "substitution": "highp $type $value = max($first, $second);"
                },
                {
                    "format": {
                        "api": "OpenGLCoreProfile",
                        "major": 3,
                        "minor": 0
                    },
                    "headerSnippets": [
                    ],
                    "substitution": "$type $value = max($first, $second);"
                },
                {
                    "format": {
                        "api": "RHI",
                        "major": 1,
                        "minor": 0
                    },
                    "headerSnippets": [
                    ],
                    "substitution": "$type $value = max($first, $second);"
                }
            ]
        },
        "multiply": {
            "inputs": [
                "first",
                "second"
            ],
            "name": "multiply",
            "outputs": [
                "product"
            ],
            "parameters": {
                "firstType": {
                    "type": "QShaderLanguage::VariableType",
                    "value": "QShaderLanguage::Vec3"
                },
                "secondType": {
                    "type": "QShaderLanguage::VariableType",
                    "value": "QShaderLanguage::Vec3"
                },
                "type": {
                    "type": "QShaderLanguage::VariableType",
                    "value": "QShaderLanguage::Vec3"
                }
            },
            "rules": [
                {
                    "format": {
                        "api": "OpenGLES",
                        "major": 2,
                        "minor": 0
                    },
                    "headerSnippets": [
                    ],
                    "substitution": "highp $type $product = $first * $second;"
                },
                {
                    "format": {
                        "api": "OpenGLCoreProfile",
                        "major": 3,
                        "minor": 0
                    },
                    "headerSnippets": [
                    ],
                    "substitution": "$type $product = $first * $second;"
                },
                {
                    "format": {
                        "api": "RHI",
                        "major": 1,
                        "minor": 0
                    },
                    "headerSnippets": [
                    ],
                    "substitution": "$type $product = $first * $second;"
                }
            ]
        },
        "sampleTexture": {
            "inputs": [
                "coord"
            ],
            "name": "sampleTexture",
            "outputs": [
                "color"
            ],
            "parameters": {
                "name": {
                    "type": "QString",
                    "value": "defaultName"
                }
            },
            "rules": [
                {
                    "format": {
                        "api": "OpenGLES",
                        "major": 2,
                        "minor": 0
                    },
                    "headerSnippets": [
                        "uniform sampler2D $name;"
                    ],
                    "substitution": "highp vec4 $color = texture2D($name, $coord);"
                },
                {
                    "format": {
                        "api": "OpenGLES",
                        "major": 3,
                        "minor": 0
                    },
                    "headerSnippets": [
                        "uniform sampler2D $name;"
                    ],
                    "substitution": "highp vec4 $color = texture($name, $coord);"
                },
                {
                    "format": {
                        "api": "OpenGLCoreProfile",
                        "major": 3,
                        "minor": 0
                    },
                    "headerSnippets": [
                        "uniform sampler2D $name;"
                    ],
                    "substitution": "vec4 $color = texture($name, $coord);"
                },
                {
                    "format": {
                        "api": "RHI",
                        "major": 1,
                        "minor": 0
                    },
                    "headerSnippets": [
                        "add-sampler sampler2D $name"
                    ],
                    "substitution": "vec4 $color = texture($name, $coord);"
                }
            ]
        },
        "swizzle": {
            "inputs": [
                "input"
            ],
            "name": "swizzle",
            "outputs": [
                "output"
            ],
            "parameters": {
                "fields": {
                    "type": "QString",
                    "value": "xyz"
                },
                "inputType": {
                    "type": "QShaderLanguage::VariableType",
                    "value": "QShaderLanguage::Vec3"
                },
                "type": {
                    "type": "QShaderLanguage::VariableType",
                    "value": "QShaderLanguage::Vec3"
                }
            },
            "rules": [
                {
                    "format": {
                        "api": "OpenGLES",
                        "major": 2,
                        "minor": 0
                    },
                    "headerSnippets": [
                    ],
                    "substitution": "highp $type $output = ($input).$fields;"
                },
                {
                    "format": {
                        "api": "OpenGLCoreProfile",
                        "major": 3,
                        "minor": 0
                    },
                    "headerSnippets": [
                    ],
                    "substitution": "$type $output = ($input).$fields;"
                },
                {
                    "format": {
                        "api": "RHI",
                        "major": 1,
                        "minor": 0
                    },
                    "headerSnippets": [
                    ],
                    "substitution": "$type $output = ($input).$fields;"
                }
            ]
        }
    }
}
