{
    "edges": [
        {
            "layers": [
            ],
            "sourcePort": "value",
            "sourceUuid": "{7784bd36-53a1-4d56-8440-394fd53e9951}",
            "targetPort": "minuend",
            "targetUuid": "{a0338f03-cb57-4ad1-88ea-2642f59a0707}"
        },
        {
            "layers": [
            ],
            "sourcePort": "value",
            "sourceUuid": "{21771e1d-921e-4523-a528-6f17f84fabed}",
            "targetPort": "subtrahend",
            "targetUuid": "{a0338f03-cb57-4ad1-88ea-2642f59a0707}"
        },
        {
            "layers": [
            ],
            "sourcePort": "value",
            "sourceUuid": "{efc2f70c-85ae-400a-88c1-87491329417d}",
            "targetPort": "second",
            "targetUuid": "{21771e1d-921e-4523-a528-6f17f84fabed}"
        },
        {
            "layers": [
            ],
            "sourcePort": "difference",
            "sourceUuid": "{a0338f03-cb57-4ad1-88ea-2642f59a0707}",
            "targetPort": "first",
            "targetUuid": "{e3c06825-7426-45ae-a13b-40034dca4d91}"
        },
        {
            "layers": [
            ],
            "sourcePort": "difference",
            "sourceUuid": "{a0338f03-cb57-4ad1-88ea-2642f59a0707}",
            "targetPort": "second",
            "targetUuid": "{e3c06825-7426-45ae-a13b-40034dca4d91}"
        },
        {
            "layers": [
            ],
            "sourcePort": "output",
            "sourceUuid": "{afe0af61-0314-42ec-9fdc-38180fc1cda6}",
            "targetPort": "first",
            "targetUuid": "{6fa48911-a592-47b0-861c-c85f09bd20a8}"
        },
        {
            "layers": [
            ],
            "sourcePort": "value",
            "sourceUuid": "{6dd86a69-1de6-471a-b05a-5b59e0fd3e46}",
            "targetPort": "second",
            "targetUuid": "{6fa48911-a592-47b0-861c-c85f09bd20a8}"
        },
        {
            "layers": [
            ],
            "sourcePort": "product",
            "sourceUuid": "{6fa48911-a592-47b0-861c-c85f09bd20a8}",
            "targetPort": "first",
            "targetUuid": "{56b4555d-01fa-4586-94f1-de04cb6db055}"
        },
        {
            "layers": [
            ],
            "sourcePort": "value",
            "sourceUuid": "{71ff8ab6-efd4-49b5-a642-0cb98d536b3a}",
            "targetPort": "second",
            "targetUuid": "{56b4555d-01fa-4586-94f1-de04cb6db055}"
        },
        {
            "layers": [
            ],
            "sourcePort": "value",
            "sourceUuid": "{1731c3d9-1880-4a30-a4ba-bd45ce65ae7e}",
            "targetPort": "input",
            "targetUuid": "{bad7b54b-8c21-42b1-a704-e83238bdd1a5}"
        },
        {
            "layers": [
            ],
            "sourcePort": "output",
            "sourceUuid": "{bad7b54b-8c21-42b1-a704-e83238bdd1a5}",
            "targetPort": "first",
            "targetUuid": "{21771e1d-921e-4523-a528-6f17f84fabed}"
        },
        {
            "layers": [
            ],
            "sourcePort": "output",
            "sourceUuid": "{bad7b54b-8c21-42b1-a704-e83238bdd1a5}",
            "targetPort": "input",
            "targetUuid": "{afe0af61-0314-42ec-9fdc-38180fc1cda6}"
        },
        {
            "layers": [
            ],
            "sourcePort": "sum",
            "sourceUuid": "{56b4555d-01fa-4586-94f1-de04cb6db055}",
            "targetPort": "coord",
            "targetUuid": "{ec60b513-4d7f-4301-bdb9-c0d9a50d0b8a}"
        },
        {
            "layers": [
            ],
            "sourcePort": "value",
            "sourceUuid": "{574cb53b-2acc-458a-953b-480b9192251d}",
            "targetPort": "texture",
            "targetUuid": "{ec60b513-4d7f-4301-bdb9-c0d9a50d0b8a}"
        },
        {
            "layers": [
            ],
            "sourcePort": "shaderData",
            "sourceUuid": "{33b148bb-5e2a-4834-a5e2-c137c2c04dd7}",
            "targetPort": "shaderData",
            "targetUuid": "{574cb53b-2acc-458a-953b-480b9192251d}"
        },
        {
            "layers": [
            ],
            "sourcePort": "product",
            "sourceUuid": "{7f9e4f7b-0e54-4335-84ca-bf93dc7eef63}",
            "targetPort": "first",
            "targetUuid": "{23fd3e72-8e78-440b-bcb7-33c7f38ba079}"
        },
        {
            "layers": [
            ],
            "sourcePort": "value",
            "sourceUuid": "{4eaa9bdd-23cf-420c-adbb-eb89550fe1ca}",
            "targetPort": "second",
            "targetUuid": "{23fd3e72-8e78-440b-bcb7-33c7f38ba079}"
        },
        {
            "layers": [
            ],
            "sourcePort": "shaderData",
            "sourceUuid": "{33b148bb-5e2a-4834-a5e2-c137c2c04dd7}",
            "targetPort": "shaderData",
            "targetUuid": "{4eaa9bdd-23cf-420c-adbb-eb89550fe1ca}"
        },
        {
            "layers": [
            ],
            "sourcePort": "value",
            "sourceUuid": "{5bb30f72-010f-4d3c-9da8-6fa8e8f4f43f}",
            "targetPort": "second",
            "targetUuid": "{bf688074-3dff-44cd-9fce-9a9d8b28c1ec}"
        },
        {
            "layers": [
            ],
            "sourcePort": "output",
            "sourceUuid": "{bf688074-3dff-44cd-9fce-9a9d8b28c1ec}",
            "targetPort": "second",
            "targetUuid": "{86332063-822b-425c-97ea-d5f21869c7e8}"
        },
        {
            "layers": [
            ],
            "sourcePort": "value",
            "sourceUuid": "{d8f77a87-65c4-4db5-83a8-8aa2d6208e70}",
            "targetPort": "first",
            "targetUuid": "{86332063-822b-425c-97ea-d5f21869c7e8}"
        },
        {
            "layers": [
            ],
            "sourcePort": "sum",
            "sourceUuid": "{e1d93e2b-84c4-4d9e-9c69-fc052cbf01c6}",
            "targetPort": "first",
            "targetUuid": "{bf688074-3dff-44cd-9fce-9a9d8b28c1ec}"
        },
        {
            "layers": [
            ],
            "sourcePort": "product",
            "sourceUuid": "{23fd3e72-8e78-440b-bcb7-33c7f38ba079}",
            "targetPort": "second",
            "targetUuid": "{e1d93e2b-84c4-4d9e-9c69-fc052cbf01c6}"
        },
        {
            "layers": [
            ],
            "sourcePort": "linear",
            "sourceUuid": "{524f66a4-69cb-49f1-8637-e0f555cd8d64}",
            "targetPort": "input",
            "targetUuid": "{d7a9bf30-ea15-4fa4-9944-fc9e9d599ca3}"
        },
        {
            "layers": [
            ],
            "sourcePort": "color",
            "sourceUuid": "{ec60b513-4d7f-4301-bdb9-c0d9a50d0b8a}",
            "targetPort": "sRGB",
            "targetUuid": "{524f66a4-69cb-49f1-8637-e0f555cd8d64}"
        },
        {
            "layers": [
            ],
            "sourcePort": "linear",
            "sourceUuid": "{9c2f4294-2941-4376-a93a-8a2944c42316}",
            "targetPort": "input",
            "targetUuid": "{8cda0b21-d68d-4227-a591-0c99e39216e5}"
        },
        {
            "layers": [
            ],
            "sourcePort": "color",
            "sourceUuid": "{131b8800-5750-4eec-b680-ce480e1ca551}",
            "targetPort": "sRGB",
            "targetUuid": "{9c2f4294-2941-4376-a93a-8a2944c42316}"
        },
        {
            "layers": [
            ],
            "sourcePort": "value",
            "sourceUuid": "{8f298165-8a49-49ca-b8b7-eb381e82b5d0}",
            "targetPort": "coord",
            "targetUuid": "{131b8800-5750-4eec-b680-ce480e1ca551}"
        },
        {
            "layers": [
            ],
            "sourcePort": "shaderData",
            "sourceUuid": "{33b148bb-5e2a-4834-a5e2-c137c2c04dd7}",
            "targetPort": "shaderData",
            "targetUuid": "{1c0a5e8a-42bc-45c6-b9ad-a465c0aa3ddb}"
        },
        {
            "layers": [
            ],
            "sourcePort": "shaderData",
            "sourceUuid": "{33b148bb-5e2a-4834-a5e2-c137c2c04dd7}",
            "targetPort": "shaderData",
            "targetUuid": "{aa59dcb5-a756-4eab-83e9-c8b5eb43ecba}"
        },
        {
            "layers": [
            ],
            "sourcePort": "shaderData",
            "sourceUuid": "{33b148bb-5e2a-4834-a5e2-c137c2c04dd7}",
            "targetPort": "shaderData",
            "targetUuid": "{33186db8-ca0b-44f3-a202-ea32932e16a6}"
        },
        {
            "layers": [
            ],
            "sourcePort": "shaderData",
            "sourceUuid": "{33b148bb-5e2a-4834-a5e2-c137c2c04dd7}",
            "targetPort": "shaderData",
            "targetUuid": "{7d02885d-0690-4f90-bbec-bb6fbf849085}"
        },
        {
            "layers": [
            ],
            "sourcePort": "shaderData",
            "sourceUuid": "{33b148bb-5e2a-4834-a5e2-c137c2c04dd7}",
            "targetPort": "shaderData",
            "targetUuid": "{2ea14f0e-5ab8-4c77-ab44-2b9aed624827}"
        },
        {
            "layers": [
            ],
            "sourcePort": "value",
            "sourceUuid": "{33186db8-ca0b-44f3-a202-ea32932e16a6}",
            "targetPort": "texture",
            "targetUuid": "{131b8800-5750-4eec-b680-ce480e1ca551}"
        },
        {
            "layers": [
            ],
            "sourcePort": "product",
            "sourceUuid": "{e3c06825-7426-45ae-a13b-40034dca4d91}",
            "targetPort": "a",
            "targetUuid": "{2bdccab4-4a25-473b-b0f0-d60651c8019d}"
        },
        {
            "layers": [
            ],
            "sourcePort": "value",
            "sourceUuid": "{7d02885d-0690-4f90-bbec-bb6fbf849085}",
            "targetPort": "x",
            "targetUuid": "{2bdccab4-4a25-473b-b0f0-d60651c8019d}"
        },
        {
            "layers": [
            ],
            "sourcePort": "value",
            "sourceUuid": "{2ea14f0e-5ab8-4c77-ab44-2b9aed624827}",
            "targetPort": "y",
            "targetUuid": "{2bdccab4-4a25-473b-b0f0-d60651c8019d}"
        },
        {
            "layers": [
            ],
            "sourcePort": "output",
            "sourceUuid": "{2bdccab4-4a25-473b-b0f0-d60651c8019d}",
            "targetPort": "second",
            "targetUuid": "{f054eb8f-5b8e-47ab-b25a-cb260f61d513}"
        },
        {
            "layers": [
            ],
            "sourcePort": "value",
            "sourceUuid": "{aa59dcb5-a756-4eab-83e9-c8b5eb43ecba}",
            "targetPort": "x",
            "targetUuid": "{e3b7bc6f-c5ea-4943-917c-d9f05fd52804}"
        },
        {
            "layers": [
            ],
            "sourcePort": "value",
            "sourceUuid": "{1c0a5e8a-42bc-45c6-b9ad-a465c0aa3ddb}",
            "targetPort": "y",
            "targetUuid": "{e3b7bc6f-c5ea-4943-917c-d9f05fd52804}"
        },
        {
            "layers": [
            ],
            "sourcePort": "product",
            "sourceUuid": "{e3c06825-7426-45ae-a13b-40034dca4d91}",
            "targetPort": "a",
            "targetUuid": "{e3b7bc6f-c5ea-4943-917c-d9f05fd52804}"
        },
        {
            "layers": [
            ],
            "sourcePort": "output",
            "sourceUuid": "{e3b7bc6f-c5ea-4943-917c-d9f05fd52804}",
            "targetPort": "second",
            "targetUuid": "{7f9e4f7b-0e54-4335-84ca-bf93dc7eef63}"
        },
        {
            "layers": [
            ],
            "sourcePort": "product",
            "sourceUuid": "{39a76b94-54a7-43dc-a5b1-8d4b3ac5e3e4}",
            "targetPort": "first",
            "targetUuid": "{e1d93e2b-84c4-4d9e-9c69-fc052cbf01c6}"
        },
        {
            "layers": [
            ],
            "sourcePort": "product",
            "sourceUuid": "{f054eb8f-5b8e-47ab-b25a-cb260f61d513}",
            "targetPort": "first",
            "targetUuid": "{39a76b94-54a7-43dc-a5b1-8d4b3ac5e3e4}"
        },
        {
            "layers": [
            ],
            "sourcePort": "value",
            "sourceUuid": "{7bee04c5-1d10-41b8-895e-d3684a72d5cf}",
            "targetPort": "second",
            "targetUuid": "{39a76b94-54a7-43dc-a5b1-8d4b3ac5e3e4}"
        },
        {
            "layers": [
            ],
            "sourcePort": "shaderData",
            "sourceUuid": "{33b148bb-5e2a-4834-a5e2-c137c2c04dd7}",
            "targetPort": "shaderData",
            "targetUuid": "{7bee04c5-1d10-41b8-895e-d3684a72d5cf}"
        },
        {
            "layers": [
            ],
            "sourcePort": "product",
            "sourceUuid": "{86332063-822b-425c-97ea-d5f21869c7e8}",
            "targetPort": "first",
            "targetUuid": "{53471c60-54bf-4d5b-b082-f6f8bf994b58}"
        },
        {
            "layers": [
            ],
            "sourcePort": "value",
            "sourceUuid": "{58dbb4e6-749c-4d54-8b6c-d56b9a484045}",
            "targetPort": "second",
            "targetUuid": "{53471c60-54bf-4d5b-b082-f6f8bf994b58}"
        },
        {
            "layers": [
            ],
            "sourcePort": "output",
            "sourceUuid": "{ae3e3f37-adf5-4429-bc85-365764e9a244}",
            "targetPort": "first",
            "targetUuid": "{f054eb8f-5b8e-47ab-b25a-cb260f61d513}"
        },
        {
            "layers": [
            ],
            "sourcePort": "shaderData",
            "sourceUuid": "{33b148bb-5e2a-4834-a5e2-c137c2c04dd7}",
            "targetPort": "shaderData",
            "targetUuid": "{a60ed9cb-7858-4c7f-924a-39488ee8a77d}"
        },
        {
            "layers": [
            ],
            "sourcePort": "value",
            "sourceUuid": "{a60ed9cb-7858-4c7f-924a-39488ee8a77d}",
            "targetPort": "condition",
            "targetUuid": "{ae3e3f37-adf5-4429-bc85-365764e9a244}"
        },
        {
            "layers": [
            ],
            "sourcePort": "output",
            "sourceUuid": "{8cda0b21-d68d-4227-a591-0c99e39216e5}",
            "targetPort": "true",
            "targetUuid": "{ae3e3f37-adf5-4429-bc85-365764e9a244}"
        },
        {
            "layers": [
            ],
            "sourcePort": "value",
            "sourceUuid": "{ef0af3a2-4161-492c-8424-dc8933e07c06}",
            "targetPort": "false",
            "targetUuid": "{ae3e3f37-adf5-4429-bc85-365764e9a244}"
        },
        {
            "layers": [
            ],
            "sourcePort": "value",
            "sourceUuid": "{ef0af3a2-4161-492c-8424-dc8933e07c06}",
            "targetPort": "false",
            "targetUuid": "{882ef0e2-9398-4557-a508-0b21527fe205}"
        },
        {
            "layers": [
            ],
            "sourcePort": "shaderData",
            "sourceUuid": "{33b148bb-5e2a-4834-a5e2-c137c2c04dd7}",
            "targetPort": "shaderData",
            "targetUuid": "{424f4f1b-81bd-4656-b8e7-989187b7bf6e}"
        },
        {
            "layers": [
            ],
            "sourcePort": "value",
            "sourceUuid": "{424f4f1b-81bd-4656-b8e7-989187b7bf6e}",
            "targetPort": "condition",
            "targetUuid": "{882ef0e2-9398-4557-a508-0b21527fe205}"
        },
        {
            "layers": [
            ],
            "sourcePort": "output",
            "sourceUuid": "{882ef0e2-9398-4557-a508-0b21527fe205}",
            "targetPort": "first",
            "targetUuid": "{7f9e4f7b-0e54-4335-84ca-bf93dc7eef63}"
        },
        {
            "layers": [
            ],
            "sourcePort": "output",
            "sourceUuid": "{d7a9bf30-ea15-4fa4-9944-fc9e9d599ca3}",
            "targetPort": "true",
            "targetUuid": "{882ef0e2-9398-4557-a508-0b21527fe205}"
        },
        {
            "layers": [
            ],
            "sourcePort": "product",
            "sourceUuid": "{53471c60-54bf-4d5b-b082-f6f8bf994b58}",
            "targetPort": "fragColor",
            "targetUuid": "{bf0f709c-10e1-41aa-8902-d67814e9e380}"
        }
    ],
    "groups": [
        {
            "id": 0,
            "name": "semFresnel",
            "position": {
                "x": 768,
                "y": 28
            }
        },
        {
            "id": 1,
            "name": "semS",
            "position": {
                "x": 646,
                "y": 192
            }
        }
    ],
    "layers": [
    ],
    "nodes": [
        {
            "collapsed": false,
            "displayName": "kuesa_iroDiffuseHemiShaderData",
            "group": -1,
            "id": 0,
            "inputValues": {
            },
            "layers": [
            ],
            "parameters": {
            },
            "position": {
                "x": 155,
                "y": 765
            },
            "type": "kuesa_iroDiffuseHemiShaderData",
            "uuid": "{33b148bb-5e2a-4834-a5e2-c137c2c04dd7}"
        },
        {
            "collapsed": false,
            "displayName": "input",
            "group": -1,
            "id": 1,
            "inputValues": {
            },
            "layers": [
            ],
            "parameters": {
                "name": "texCoord",
                "qualifier": {
                    "type": "QShaderLanguage::StorageQualifier",
                    "value": "QShaderLanguage::Input"
                },
                "type": {
                    "type": "QShaderLanguage::VariableType",
                    "value": "QShaderLanguage::Vec2"
                }
            },
            "position": {
                "x": 163,
                "y": 483
            },
            "type": "input",
            "uuid": "{8f298165-8a49-49ca-b8b7-eb381e82b5d0}"
        },
        {
            "collapsed": false,
            "displayName": "input",
            "group": -1,
            "id": 2,
            "inputValues": {
            },
            "layers": [
            ],
            "parameters": {
                "name": "postColor",
                "qualifier": {
                    "type": "QShaderLanguage::StorageQualifier",
                    "value": "QShaderLanguage::Input"
                },
                "type": {
                    "type": "QShaderLanguage::VariableType",
                    "value": "QShaderLanguage::Vec4"
                }
            },
            "position": {
                "x": 3876,
                "y": 459
            },
            "type": "input",
            "uuid": "{d8f77a87-65c4-4db5-83a8-8aa2d6208e70}"
        },
        {
            "collapsed": false,
            "displayName": "input",
            "group": -1,
            "id": 3,
            "inputValues": {
            },
            "layers": [
            ],
            "parameters": {
                "name": "normalSem",
                "qualifier": {
                    "type": "QShaderLanguage::StorageQualifier",
                    "value": "QShaderLanguage::Input"
                },
                "type": {
                    "type": "QShaderLanguage::VariableType",
                    "value": "QShaderLanguage::Vec3"
                }
            },
            "position": {
                "x": 134,
                "y": 9
            },
            "type": "input",
            "uuid": "{1731c3d9-1880-4a30-a4ba-bd45ce65ae7e}"
        },
        {
            "collapsed": true,
            "displayName": "constant",
            "group": 0,
            "id": 5,
            "inputValues": {
            },
            "layers": [
            ],
            "parameters": {
                "constant": "0.0,0.0,1.0",
                "type": {
                    "type": "QShaderLanguage::VariableType",
                    "value": "QShaderLanguage::Vec3"
                }
            },
            "position": {
                "x": 778,
                "y": 104
            },
            "type": "constant",
            "uuid": "{efc2f70c-85ae-400a-88c1-87491329417d}"
        },
        {
            "collapsed": false,
            "displayName": "dot",
            "group": 0,
            "id": 6,
            "inputValues": {
                "first": "",
                "second": ""
            },
            "layers": [
            ],
            "parameters": {
                "outputType": {
                    "type": "QShaderLanguage::VariableType",
                    "value": "QShaderLanguage::Float"
                },
                "type": {
                    "type": "QShaderLanguage::VariableType",
                    "value": "QShaderLanguage::Vec3"
                }
            },
            "position": {
                "x": 901,
                "y": 64
            },
            "type": "dot",
            "uuid": "{21771e1d-921e-4523-a528-6f17f84fabed}"
        },
        {
            "collapsed": false,
            "displayName": "subtract",
            "group": 0,
            "id": 7,
            "inputValues": {
                "minuend": "",
                "subtrahend": "0.0"
            },
            "layers": [
            ],
            "parameters": {
                "type": {
                    "type": "QShaderLanguage::VariableType",
                    "value": "QShaderLanguage::Float"
                }
            },
            "position": {
                "x": 1170,
                "y": 64
            },
            "type": "subtract",
            "uuid": "{a0338f03-cb57-4ad1-88ea-2642f59a0707}"
        },
        {
            "collapsed": true,
            "displayName": "constant",
            "group": 0,
            "id": 8,
            "inputValues": {
            },
            "layers": [
            ],
            "parameters": {
                "constant": "1.0",
                "type": {
                    "type": "QShaderLanguage::VariableType",
                    "value": "QShaderLanguage::Float"
                }
            },
            "position": {
                "x": 1062,
                "y": 87
            },
            "type": "constant",
            "uuid": "{7784bd36-53a1-4d56-8440-394fd53e9951}"
        },
        {
            "collapsed": false,
            "displayName": "multiply",
            "group": 0,
            "id": 9,
            "inputValues": {
                "first": "0.0",
                "second": "0.0"
            },
            "layers": [
            ],
            "parameters": {
                "firstType": {
                    "type": "QShaderLanguage::VariableType",
                    "value": "QShaderLanguage::Float"
                },
                "secondType": {
                    "type": "QShaderLanguage::VariableType",
                    "value": "QShaderLanguage::Float"
                },
                "type": {
                    "type": "QShaderLanguage::VariableType",
                    "value": "QShaderLanguage::Float"
                }
            },
            "position": {
                "x": 1407,
                "y": 63
            },
            "type": "multiply",
            "uuid": "{e3c06825-7426-45ae-a13b-40034dca4d91}"
        },
        {
            "collapsed": false,
            "displayName": "swizzle",
            "group": 1,
            "id": 10,
            "inputValues": {
                "input": ""
            },
            "layers": [
            ],
            "parameters": {
                "fields": "xy",
                "inputType": {
                    "type": "QShaderLanguage::VariableType",
                    "value": "QShaderLanguage::Vec3"
                },
                "type": {
                    "type": "QShaderLanguage::VariableType",
                    "value": "QShaderLanguage::Vec2"
                }
            },
            "position": {
                "x": 656,
                "y": 227
            },
            "type": "swizzle",
            "uuid": "{afe0af61-0314-42ec-9fdc-38180fc1cda6}"
        },
        {
            "collapsed": true,
            "displayName": "constant",
            "group": 1,
            "id": 11,
            "inputValues": {
            },
            "layers": [
            ],
            "parameters": {
                "constant": "0.5",
                "type": {
                    "type": "QShaderLanguage::VariableType",
                    "value": "QShaderLanguage::Float"
                }
            },
            "position": {
                "x": 692,
                "y": 275
            },
            "type": "constant",
            "uuid": "{6dd86a69-1de6-471a-b05a-5b59e0fd3e46}"
        },
        {
            "collapsed": false,
            "displayName": "multiply",
            "group": 1,
            "id": 12,
            "inputValues": {
                "first": "",
                "second": "0.0"
            },
            "layers": [
            ],
            "parameters": {
                "firstType": {
                    "type": "QShaderLanguage::VariableType",
                    "value": "QShaderLanguage::Vec2"
                },
                "secondType": {
                    "type": "QShaderLanguage::VariableType",
                    "value": "QShaderLanguage::Float"
                },
                "type": {
                    "type": "QShaderLanguage::VariableType",
                    "value": "QShaderLanguage::Vec2"
                }
            },
            "position": {
                "x": 815,
                "y": 227
            },
            "type": "multiply",
            "uuid": "{6fa48911-a592-47b0-861c-c85f09bd20a8}"
        },
        {
            "collapsed": false,
            "displayName": "add",
            "group": 1,
            "id": 13,
            "inputValues": {
                "first": "",
                "second": ""
            },
            "layers": [
            ],
            "parameters": {
                "type": {
                    "type": "QShaderLanguage::VariableType",
                    "value": "QShaderLanguage::Vec2"
                }
            },
            "position": {
                "x": 995,
                "y": 243
            },
            "type": "add",
            "uuid": "{56b4555d-01fa-4586-94f1-de04cb6db055}"
        },
        {
            "collapsed": true,
            "displayName": "constant",
            "group": 1,
            "id": 14,
            "inputValues": {
            },
            "layers": [
            ],
            "parameters": {
                "constant": "0.5,0.5",
                "type": {
                    "type": "QShaderLanguage::VariableType",
                    "value": "QShaderLanguage::Vec2"
                }
            },
            "position": {
                "x": 878,
                "y": 289
            },
            "type": "constant",
            "uuid": "{71ff8ab6-efd4-49b5-a642-0cb98d536b3a}"
        },
        {
            "collapsed": false,
            "displayName": "normalize",
            "group": -1,
            "id": 15,
            "inputValues": {
                "input": ""
            },
            "layers": [
            ],
            "parameters": {
                "type": {
                    "type": "QShaderLanguage::VariableType",
                    "value": "QShaderLanguage::Vec3"
                }
            },
            "position": {
                "x": 478,
                "y": 66
            },
            "type": "normalize",
            "uuid": "{bad7b54b-8c21-42b1-a704-e83238bdd1a5}"
        },
        {
            "collapsed": false,
            "displayName": "kuesa_sampleTexture",
            "group": -1,
            "id": 17,
            "inputValues": {
                "coord": "",
                "texture": ""
            },
            "layers": [
            ],
            "parameters": {
            },
            "position": {
                "x": 1547,
                "y": 550
            },
            "type": "kuesa_sampleTexture",
            "uuid": "{ec60b513-4d7f-4301-bdb9-c0d9a50d0b8a}"
        },
        {
            "collapsed": false,
            "displayName": "kuesa_ShaderDataInput",
            "group": -1,
            "id": 18,
            "inputValues": {
                "shaderData": ""
            },
            "layers": [
            ],
            "parameters": {
                "name": "reflectionMap",
                "type": {
                    "type": "QShaderLanguage::VariableType",
                    "value": "QShaderLanguage::Sampler2D"
                }
            },
            "position": {
                "x": 1162,
                "y": 616
            },
            "type": "kuesa_ShaderDataInput",
            "uuid": "{574cb53b-2acc-458a-953b-480b9192251d}"
        },
        {
            "collapsed": false,
            "displayName": "swizzle",
            "group": -1,
            "id": 19,
            "inputValues": {
                "input": ""
            },
            "layers": [
            ],
            "parameters": {
                "fields": "xyz",
                "inputType": {
                    "type": "QShaderLanguage::VariableType",
                    "value": "QShaderLanguage::Vec4"
                },
                "type": {
                    "type": "QShaderLanguage::VariableType",
                    "value": "QShaderLanguage::Vec3"
                }
            },
            "position": {
                "x": 2107,
                "y": 622
            },
            "type": "swizzle",
            "uuid": "{d7a9bf30-ea15-4fa4-9944-fc9e9d599ca3}"
        },
        {
            "collapsed": false,
            "displayName": "multiply",
            "group": -1,
            "id": 20,
            "inputValues": {
                "first": "",
                "second": ""
            },
            "layers": [
            ],
            "parameters": {
                "firstType": {
                    "type": "QShaderLanguage::VariableType",
                    "value": "QShaderLanguage::Vec3"
                },
                "secondType": {
                    "type": "QShaderLanguage::VariableType",
                    "value": "QShaderLanguage::Vec3"
                },
                "type": {
                    "type": "QShaderLanguage::VariableType",
                    "value": "QShaderLanguage::Vec3"
                }
            },
            "position": {
                "x": 2998,
                "y": 680
            },
            "type": "multiply",
            "uuid": "{7f9e4f7b-0e54-4335-84ca-bf93dc7eef63}"
        },
        {
            "collapsed": false,
            "displayName": "multiply",
            "group": -1,
            "id": 21,
            "inputValues": {
                "first": "",
                "second": "0.0"
            },
            "layers": [
            ],
            "parameters": {
                "firstType": {
                    "type": "QShaderLanguage::VariableType",
                    "value": "QShaderLanguage::Vec3"
                },
                "secondType": {
                    "type": "QShaderLanguage::VariableType",
                    "value": "QShaderLanguage::Float"
                },
                "type": {
                    "type": "QShaderLanguage::VariableType",
                    "value": "QShaderLanguage::Vec3"
                }
            },
            "position": {
                "x": 3294,
                "y": 574
            },
            "type": "multiply",
            "uuid": "{23fd3e72-8e78-440b-bcb7-33c7f38ba079}"
        },
        {
            "collapsed": false,
            "displayName": "kuesa_ShaderDataInput",
            "group": -1,
            "id": 22,
            "inputValues": {
                "shaderData": ""
            },
            "layers": [
            ],
            "parameters": {
                "name": "reflectionGain",
                "type": {
                    "type": "QShaderLanguage::VariableType",
                    "value": "QShaderLanguage::Float"
                }
            },
            "position": {
                "x": 2960,
                "y": 766
            },
            "type": "kuesa_ShaderDataInput",
            "uuid": "{4eaa9bdd-23cf-420c-adbb-eb89550fe1ca}"
        },
        {
            "collapsed": false,
            "displayName": "join2",
            "group": -1,
            "id": 23,
            "inputValues": {
                "first": "0.0",
                "second": "0.0"
            },
            "layers": [
            ],
            "parameters": {
                "type": {
                    "type": "QShaderLanguage::VariableType",
                    "value": "QShaderLanguage::Vec4"
                },
                "typeOfFirst": {
                    "type": "QShaderLanguage::VariableType",
                    "value": "QShaderLanguage::Vec3"
                },
                "typeOfSecond": {
                    "type": "QShaderLanguage::VariableType",
                    "value": "QShaderLanguage::Float"
                }
            },
            "position": {
                "x": 3888,
                "y": 572
            },
            "type": "join2",
            "uuid": "{bf688074-3dff-44cd-9fce-9a9d8b28c1ec}"
        },
        {
            "collapsed": true,
            "displayName": "constant",
            "group": -1,
            "id": 24,
            "inputValues": {
            },
            "layers": [
            ],
            "parameters": {
                "constant": "1.0",
                "type": {
                    "type": "QShaderLanguage::VariableType",
                    "value": "QShaderLanguage::Float"
                }
            },
            "position": {
                "x": 3695,
                "y": 613
            },
            "type": "constant",
            "uuid": "{5bb30f72-010f-4d3c-9da8-6fa8e8f4f43f}"
        },
        {
            "collapsed": false,
            "displayName": "multiply",
            "group": -1,
            "id": 25,
            "inputValues": {
                "first": "",
                "second": ""
            },
            "layers": [
            ],
            "parameters": {
                "firstType": {
                    "type": "QShaderLanguage::VariableType",
                    "value": "QShaderLanguage::Vec4"
                },
                "secondType": {
                    "type": "QShaderLanguage::VariableType",
                    "value": "QShaderLanguage::Vec4"
                },
                "type": {
                    "type": "QShaderLanguage::VariableType",
                    "value": "QShaderLanguage::Vec4"
                }
            },
            "position": {
                "x": 4237,
                "y": 562
            },
            "type": "multiply",
            "uuid": "{86332063-822b-425c-97ea-d5f21869c7e8}"
        },
        {
            "collapsed": false,
            "displayName": "add",
            "group": -1,
            "id": 26,
            "inputValues": {
                "first": "",
                "second": ""
            },
            "layers": [
            ],
            "parameters": {
                "type": {
                    "type": "QShaderLanguage::VariableType",
                    "value": "QShaderLanguage::Vec3"
                }
            },
            "position": {
                "x": 3662,
                "y": 546
            },
            "type": "add",
            "uuid": "{e1d93e2b-84c4-4d9e-9c69-fc052cbf01c6}"
        },
        {
            "collapsed": false,
            "displayName": "multiply",
            "group": -1,
            "id": 27,
            "inputValues": {
                "first": "",
                "second": ""
            },
            "layers": [
            ],
            "parameters": {
                "firstType": {
                    "type": "QShaderLanguage::VariableType",
                    "value": "QShaderLanguage::Vec3"
                },
                "secondType": {
                    "type": "QShaderLanguage::VariableType",
                    "value": "QShaderLanguage::Vec3"
                },
                "type": {
                    "type": "QShaderLanguage::VariableType",
                    "value": "QShaderLanguage::Vec3"
                }
            },
            "position": {
                "x": 2646,
                "y": 398
            },
            "type": "multiply",
            "uuid": "{f054eb8f-5b8e-47ab-b25a-cb260f61d513}"
        },
        {
            "collapsed": false,
            "displayName": "sRGBtoLinear",
            "group": -1,
            "id": 29,
            "inputValues": {
                "sRGB": ""
            },
            "layers": [
            ],
            "parameters": {
            },
            "position": {
                "x": 1892,
                "y": 606
            },
            "type": "sRGBtoLinear",
            "uuid": "{524f66a4-69cb-49f1-8637-e0f555cd8d64}"
        },
        {
            "collapsed": false,
            "displayName": "sRGBtoLinear",
            "group": -1,
            "id": 30,
            "inputValues": {
                "sRGB": ""
            },
            "layers": [
            ],
            "parameters": {
            },
            "position": {
                "x": 1355,
                "y": 340
            },
            "type": "sRGBtoLinear",
            "uuid": "{9c2f4294-2941-4376-a93a-8a2944c42316}"
        },
        {
            "collapsed": false,
            "displayName": "swizzle",
            "group": -1,
            "id": 31,
            "inputValues": {
                "input": ""
            },
            "layers": [
            ],
            "parameters": {
                "fields": "xyz",
                "inputType": {
                    "type": "QShaderLanguage::VariableType",
                    "value": "QShaderLanguage::Vec3"
                },
                "type": {
                    "type": "QShaderLanguage::VariableType",
                    "value": "QShaderLanguage::Vec3"
                }
            },
            "position": {
                "x": 1530,
                "y": 318
            },
            "type": "swizzle",
            "uuid": "{8cda0b21-d68d-4227-a591-0c99e39216e5}"
        },
        {
            "collapsed": false,
            "displayName": "kuesa_sampleTexture",
            "group": -1,
            "id": 32,
            "inputValues": {
                "coord": "",
                "texture": ""
            },
            "layers": [
            ],
            "parameters": {
            },
            "position": {
                "x": 667,
                "y": 488
            },
            "type": "kuesa_sampleTexture",
            "uuid": "{131b8800-5750-4eec-b680-ce480e1ca551}"
        },
        {
            "collapsed": false,
            "displayName": "kuesa_ShaderDataInput",
            "group": -1,
            "id": 34,
            "inputValues": {
                "shaderData": ""
            },
            "layers": [
            ],
            "parameters": {
                "name": "diffuseMap",
                "type": {
                    "type": "QShaderLanguage::VariableType",
                    "value": "QShaderLanguage::Sampler2D"
                }
            },
            "position": {
                "x": 407,
                "y": 638
            },
            "type": "kuesa_ShaderDataInput",
            "uuid": "{33186db8-ca0b-44f3-a202-ea32932e16a6}"
        },
        {
            "collapsed": false,
            "displayName": "kuesa_ShaderDataInput",
            "group": -1,
            "id": 36,
            "inputValues": {
                "shaderData": ""
            },
            "layers": [
            ],
            "parameters": {
                "name": "diffuseOuterFilter",
                "type": {
                    "type": "QShaderLanguage::VariableType",
                    "value": "QShaderLanguage::Vec3"
                }
            },
            "position": {
                "x": 1543,
                "y": 463
            },
            "type": "kuesa_ShaderDataInput",
            "uuid": "{2ea14f0e-5ab8-4c77-ab44-2b9aed624827}"
        },
        {
            "collapsed": false,
            "displayName": "kuesa_ShaderDataInput",
            "group": -1,
            "id": 37,
            "inputValues": {
                "shaderData": ""
            },
            "layers": [
            ],
            "parameters": {
                "name": "diffuseInnerFilter",
                "type": {
                    "type": "QShaderLanguage::VariableType",
                    "value": "QShaderLanguage::Vec3"
                }
            },
            "position": {
                "x": 1533,
                "y": 393
            },
            "type": "kuesa_ShaderDataInput",
            "uuid": "{7d02885d-0690-4f90-bbec-bb6fbf849085}"
        },
        {
            "collapsed": false,
            "displayName": "kuesa_ShaderDataInput",
            "group": -1,
            "id": 43,
            "inputValues": {
                "shaderData": ""
            },
            "layers": [
            ],
            "parameters": {
                "name": "reflectionInnerFilter",
                "type": {
                    "type": "QShaderLanguage::VariableType",
                    "value": "QShaderLanguage::Vec3"
                }
            },
            "position": {
                "x": 1532,
                "y": 668
            },
            "type": "kuesa_ShaderDataInput",
            "uuid": "{aa59dcb5-a756-4eab-83e9-c8b5eb43ecba}"
        },
        {
            "collapsed": false,
            "displayName": "kuesa_ShaderDataInput",
            "group": -1,
            "id": 44,
            "inputValues": {
                "shaderData": ""
            },
            "layers": [
            ],
            "parameters": {
                "name": "reflectionOuterFilter",
                "type": {
                    "type": "QShaderLanguage::VariableType",
                    "value": "QShaderLanguage::Vec3"
                }
            },
            "position": {
                "x": 1538,
                "y": 752
            },
            "type": "kuesa_ShaderDataInput",
            "uuid": "{1c0a5e8a-42bc-45c6-b9ad-a465c0aa3ddb}"
        },
        {
            "collapsed": false,
            "displayName": "mix",
            "group": -1,
            "id": 48,
            "inputValues": {
                "a": "",
                "x": "",
                "y": ""
            },
            "layers": [
            ],
            "parameters": {
            },
            "position": {
                "x": 2464,
                "y": 493
            },
            "type": "mix",
            "uuid": "{2bdccab4-4a25-473b-b0f0-d60651c8019d}"
        },
        {
            "collapsed": false,
            "displayName": "mix",
            "group": -1,
            "id": 49,
            "inputValues": {
                "a": "",
                "x": "",
                "y": ""
            },
            "layers": [
            ],
            "parameters": {
            },
            "position": {
                "x": 2149,
                "y": 714
            },
            "type": "mix",
            "uuid": "{e3b7bc6f-c5ea-4943-917c-d9f05fd52804}"
        },
        {
            "collapsed": false,
            "displayName": "multiply",
            "group": -1,
            "id": 50,
            "inputValues": {
                "first": "",
                "second": "0.0"
            },
            "layers": [
            ],
            "parameters": {
                "firstType": {
                    "type": "QShaderLanguage::VariableType",
                    "value": "QShaderLanguage::Vec3"
                },
                "secondType": {
                    "type": "QShaderLanguage::VariableType",
                    "value": "QShaderLanguage::Float"
                },
                "type": {
                    "type": "QShaderLanguage::VariableType",
                    "value": "QShaderLanguage::Vec3"
                }
            },
            "position": {
                "x": 3333,
                "y": 402
            },
            "type": "multiply",
            "uuid": "{39a76b94-54a7-43dc-a5b1-8d4b3ac5e3e4}"
        },
        {
            "collapsed": false,
            "displayName": "kuesa_ShaderDataInput",
            "group": -1,
            "id": 51,
            "inputValues": {
                "shaderData": ""
            },
            "layers": [
            ],
            "parameters": {
                "name": "diffuseGain",
                "type": {
                    "type": "QShaderLanguage::VariableType",
                    "value": "QShaderLanguage::Vec3"
                }
            },
            "position": {
                "x": 2941,
                "y": 855
            },
            "type": "kuesa_ShaderDataInput",
            "uuid": "{7bee04c5-1d10-41b8-895e-d3684a72d5cf}"
        },
        {
            "collapsed": false,
            "displayName": "multiply",
            "group": -1,
            "id": 52,
            "inputValues": {
                "first": "",
                "second": ""
            },
            "layers": [
            ],
            "parameters": {
                "firstType": {
                    "type": "QShaderLanguage::VariableType",
                    "value": "QShaderLanguage::Vec4"
                },
                "secondType": {
                    "type": "QShaderLanguage::VariableType",
                    "value": "QShaderLanguage::Vec4"
                },
                "type": {
                    "type": "QShaderLanguage::VariableType",
                    "value": "QShaderLanguage::Vec4"
                }
            },
            "position": {
                "x": 4437,
                "y": 590
            },
            "type": "multiply",
            "uuid": "{53471c60-54bf-4d5b-b082-f6f8bf994b58}"
        },
        {
            "collapsed": false,
            "displayName": "input",
            "group": -1,
            "id": 53,
            "inputValues": {
            },
            "layers": [
            ],
            "parameters": {
                "name": "postHemi",
                "qualifier": {
                    "type": "QShaderLanguage::StorageQualifier",
                    "value": "QShaderLanguage::Input"
                },
                "type": {
                    "type": "QShaderLanguage::VariableType",
                    "value": "QShaderLanguage::Vec4"
                }
            },
            "position": {
                "x": 4031,
                "y": 708
            },
            "type": "input",
            "uuid": "{58dbb4e6-749c-4d54-8b6c-d56b9a484045}"
        },
        {
            "collapsed": false,
            "displayName": "if",
            "group": -1,
            "id": 54,
            "inputValues": {
                "condition": "",
                "false": "",
                "true": ""
            },
            "layers": [
            ],
            "parameters": {
                "conditionType": {
                    "type": "QShaderLanguage::VariableType",
                    "value": "QShaderLanguage::Bool"
                },
                "type": {
                    "type": "QShaderLanguage::VariableType",
                    "value": "QShaderLanguage::Vec3"
                }
            },
            "position": {
                "x": 2131,
                "y": 304
            },
            "type": "if",
            "uuid": "{ae3e3f37-adf5-4429-bc85-365764e9a244}"
        },
        {
            "collapsed": false,
            "displayName": "kuesa_ShaderDataInput",
            "group": -1,
            "id": 55,
            "inputValues": {
                "shaderData": ""
            },
            "layers": [
            ],
            "parameters": {
                "name": "usesDiffuseMap",
                "type": {
                    "type": "QShaderLanguage::VariableType",
                    "value": "QShaderLanguage::Bool"
                }
            },
            "position": {
                "x": 1424,
                "y": 200
            },
            "type": "kuesa_ShaderDataInput",
            "uuid": "{a60ed9cb-7858-4c7f-924a-39488ee8a77d}"
        },
        {
            "collapsed": false,
            "displayName": "constant",
            "group": -1,
            "id": 56,
            "inputValues": {
            },
            "layers": [
            ],
            "parameters": {
                "constant": "1.0,1.0,1.0",
                "type": {
                    "type": "QShaderLanguage::VariableType",
                    "value": "QShaderLanguage::Vec3"
                }
            },
            "position": {
                "x": 1799,
                "y": 86
            },
            "type": "constant",
            "uuid": "{ef0af3a2-4161-492c-8424-dc8933e07c06}"
        },
        {
            "collapsed": false,
            "displayName": "if",
            "group": -1,
            "id": 57,
            "inputValues": {
                "condition": "",
                "false": "",
                "true": ""
            },
            "layers": [
            ],
            "parameters": {
                "conditionType": {
                    "type": "QShaderLanguage::VariableType",
                    "value": "QShaderLanguage::Bool"
                },
                "type": {
                    "type": "QShaderLanguage::VariableType",
                    "value": "QShaderLanguage::Vec3"
                }
            },
            "position": {
                "x": 2426,
                "y": 625
            },
            "type": "if",
            "uuid": "{882ef0e2-9398-4557-a508-0b21527fe205}"
        },
        {
            "collapsed": false,
            "displayName": "kuesa_ShaderDataInput",
            "group": -1,
            "id": 58,
            "inputValues": {
                "shaderData": ""
            },
            "layers": [
            ],
            "parameters": {
                "name": "usesReflectionMap",
                "type": {
                    "type": "QShaderLanguage::VariableType",
                    "value": "QShaderLanguage::Bool"
                }
            },
            "position": {
                "x": 1382,
                "y": 1071
            },
            "type": "kuesa_ShaderDataInput",
            "uuid": "{424f4f1b-81bd-4656-b8e7-989187b7bf6e}"
        },
        {
            "collapsed": false,
            "displayName": "fragColor",
            "group": -1,
            "id": 59,
            "inputValues": {
                "fragColor": ""
            },
            "layers": [
            ],
            "parameters": {
            },
            "position": {
                "x": 4675,
                "y": 587
            },
            "type": "fragColor",
            "uuid": "{bf0f709c-10e1-41aa-8902-d67814e9e380}"
        }
    ],
    "project": {
        "position": {
            "x": 3781.333333333333,
            "y": 148.16666666666674
        },
        "scale": 1
    },
    "prototypes": {
        "add": {
            "inputs": [
                "first",
                "second"
            ],
            "outputs": [
                "sum"
            ],
            "parameters": {
                "type": {
                    "type": "QShaderLanguage::VariableType",
                    "value": "QShaderLanguage::Vec3"
                }
            },
            "rules": [
                {
                    "format": {
                        "api": "OpenGLES",
                        "major": 2,
                        "minor": 0
                    },
                    "substitution": "highp $type $sum = $first + $second;"
                },
                {
                    "format": {
                        "api": "OpenGLCoreProfile",
                        "major": 3,
                        "minor": 0
                    },
                    "substitution": "$type $sum = $first + $second;"
                }
            ]
        },
        "and": {
            "inputs": [
                "input1",
                "input2"
            ],
            "outputs": [
                "output"
            ],
            "parameters": {
                "type": {
                    "type": "QShaderLanguage::VariableType",
                    "value": "QShaderLanguage::Bool"
                }
            },
            "rules": [
                {
                    "format": {
                        "api": "OpenGLES",
                        "major": 2,
                        "minor": 0
                    },
                    "substitution": "$type $output = $input1 && $input2;"
                },
                {
                    "format": {
                        "api": "OpenGLCoreProfile",
                        "major": 3,
                        "minor": 0
                    },
                    "substitution": "$type $output = $input1 && $input2;"
                }
            ]
        },
        "atIndex": {
            "inputs": [
                "index",
                "input"
            ],
            "outputs": [
                "output"
            ],
            "parameters": {
                "indexType": {
                    "type": "QShaderLanguage::VariableType",
                    "value": "QShaderLanguage::Int"
                },
                "inputType": {
                    "type": "QShaderLanguage::VariableType",
                    "value": "QShaderLanguage::Vec3"
                },
                "outType": {
                    "type": "QShaderLanguage::VariableType",
                    "value": "QShaderLanguage::Float"
                }
            },
            "rules": [
                {
                    "format": {
                        "api": "OpenGLES",
                        "major": 2,
                        "minor": 0
                    },
                    "substitution": "highp $outType $output = $input[$index];"
                },
                {
                    "format": {
                        "api": "OpenGLCoreProfile",
                        "major": 3,
                        "minor": 0
                    },
                    "substitution": "$outType $output = $input[$index];"
                }
            ]
        },
        "boolInput": {
            "outputs": [
                "value"
            ],
            "parameters": {
                "name": "defaultName",
                "qualifier": {
                    "type": "QShaderLanguage::StorageQualifier",
                    "value": "QShaderLanguage::Input"
                },
                "type": {
                    "type": "QShaderLanguage::VariableType",
                    "value": "QShaderLanguage::Bool"
                }
            },
            "rules": [
                {
                    "format": {
                        "api": "OpenGLES",
                        "major": 2,
                        "minor": 0
                    },
                    "headerSnippets": [
                        "$qualifier $type $name;"
                    ],
                    "substitution": "$type $value = $name;"
                },
                {
                    "format": {
                        "api": "OpenGLCoreProfile",
                        "major": 3,
                        "minor": 0
                    },
                    "headerSnippets": [
                        "$qualifier $type $name;"
                    ],
                    "substitution": "$type $value = $name;"
                }
            ]
        },
        "cast": {
            "inputs": [
                "input"
            ],
            "outputs": [
                "output"
            ],
            "parameters": {
                "inputType": {
                    "type": "QShaderLanguage::VariableType",
                    "value": "QShaderLanguage::Float"
                },
                "type": {
                    "type": "QShaderLanguage::VariableType",
                    "value": "QShaderLanguage::Vec3"
                }
            },
            "rules": [
                {
                    "format": {
                        "api": "OpenGLES",
                        "major": 2,
                        "minor": 0
                    },
                    "substitution": "highp $type $output = $type($input);"
                },
                {
                    "format": {
                        "api": "OpenGLCoreProfile",
                        "major": 3,
                        "minor": 0
                    },
                    "substitution": "$type $output = $type($input);"
                }
            ]
        },
        "constant": {
            "outputs": [
                "value"
            ],
            "parameters": {
                "constant": "0.0",
                "type": {
                    "type": "QShaderLanguage::VariableType",
                    "value": "QShaderLanguage::Float"
                }
            },
            "rules": [
                {
                    "format": {
                        "api": "OpenGLES",
                        "major": 2,
                        "minor": 0
                    },
                    "substitution": "highp $type $value = $type($constant);"
                },
                {
                    "format": {
                        "api": "OpenGLCoreProfile",
                        "major": 3,
                        "minor": 0
                    },
                    "substitution": "$type $value = $type($constant);"
                }
            ]
        },
        "discard": {
            "outputs": [
                "output"
            ],
            "rules": [
                {
                    "format": {
                        "api": "OpenGLES",
                        "major": 2,
                        "minor": 0
                    },
                    "substitution": "discard;"
                },
                {
                    "format": {
                        "api": "OpenGLCoreProfile",
                        "major": 3,
                        "minor": 0
                    },
                    "substitution": "discard;"
                }
            ]
        },
        "discard_if": {
            "inputs": [
                "condition",
                "value"
            ],
            "outputs": [
                "output"
            ],
            "parameters": {
                "conditionType": {
                    "type": "QShaderLanguage::VariableType",
                    "value": "QShaderLanguage::Bool"
                },
                "type": {
                    "type": "QShaderLanguage::VariableType",
                    "value": "QShaderLanguage::Vec3"
                }
            },
            "rules": [
                {
                    "format": {
                        "api": "OpenGLES",
                        "major": 2,
                        "minor": 0
                    },
                    "headerSnippets": [
                        "highp $type discard_if_$type(bool shouldDiscard, highp $type value) { if (shouldDiscard) discard; return value; }"
                    ],
                    "substitution": "highp $type $output = discard_if_$type($condition, $value);"
                },
                {
                    "format": {
                        "api": "OpenGLCoreProfile",
                        "major": 3,
                        "minor": 0
                    },
                    "headerSnippets": [
                        "$type discard_if_$type(bool shouldDiscard, $type value) { if (shouldDiscard) discard; return value; }"
                    ],
                    "substitution": "$type $output = discard_if_$type($condition, $value);"
                }
            ]
        },
        "divide": {
            "inputs": [
                "first",
                "second"
            ],
            "outputs": [
                "quotient"
            ],
            "parameters": {
                "firstType": {
                    "type": "QShaderLanguage::VariableType",
                    "value": "QShaderLanguage::Vec3"
                },
                "secondType": {
                    "type": "QShaderLanguage::VariableType",
                    "value": "QShaderLanguage::Vec3"
                },
                "type": {
                    "type": "QShaderLanguage::VariableType",
                    "value": "QShaderLanguage::Vec3"
                }
            },
            "rules": [
                {
                    "format": {
                        "api": "OpenGLES",
                        "major": 2,
                        "minor": 0
                    },
                    "substitution": "highp $type $quotient = $first / $second;"
                },
                {
                    "format": {
                        "api": "OpenGLCoreProfile",
                        "major": 3,
                        "minor": 0
                    },
                    "substitution": "$type $quotient = $first / $second;"
                }
            ]
        },
        "dot": {
            "inputs": [
                "first",
                "second"
            ],
            "outputs": [
                "value"
            ],
            "parameters": {
                "outputType": {
                    "type": "QShaderLanguage::VariableType",
                    "value": "QShaderLanguage::Float"
                },
                "type": {
                    "type": "QShaderLanguage::VariableType",
                    "value": "QShaderLanguage::Vec3"
                }
            },
            "rules": [
                {
                    "format": {
                        "api": "OpenGLES",
                        "major": 2,
                        "minor": 0
                    },
                    "substitution": "highp $outputType $value = dot($first, $second);"
                },
                {
                    "format": {
                        "api": "OpenGLCoreProfile",
                        "major": 3,
                        "minor": 0
                    },
                    "substitution": "$outputType $value = dot($first, $second);"
                }
            ]
        },
        "equal": {
            "inputs": [
                "input1",
                "input2"
            ],
            "outputs": [
                "output"
            ],
            "parameters": {
                "type": {
                    "type": "QShaderLanguage::VariableType",
                    "value": "QShaderLanguage::Bool"
                },
                "valueType": {
                    "type": "QShaderLanguage::VariableType",
                    "value": "QShaderLanguage::Vec3"
                }
            },
            "rules": [
                {
                    "format": {
                        "api": "OpenGLES",
                        "major": 2,
                        "minor": 0
                    },
                    "substitution": "$type $output = $input1 == $input2;"
                },
                {
                    "format": {
                        "api": "OpenGLCoreProfile",
                        "major": 3,
                        "minor": 0
                    },
                    "substitution": "$type $output = $input1 == $input2;"
                }
            ]
        },
        "eyePosition": {
            "outputs": [
                "eyePosition"
            ],
            "rules": [
                {
                    "format": {
                        "api": "OpenGLES",
                        "major": 2,
                        "minor": 0
                    },
                    "headerSnippets": [
                        "uniform highp vec3 eyePosition;"
                    ],
                    "substitution": "highp vec3 $eyePosition = eyePosition;"
                },
                {
                    "format": {
                        "api": "OpenGLCoreProfile",
                        "major": 3,
                        "minor": 0
                    },
                    "headerSnippets": [
                        "uniform vec3 eyePosition;"
                    ],
                    "substitution": "vec3 $eyePosition = eyePosition;"
                }
            ]
        },
        "fragColor": {
            "inputs": [
                "fragColor"
            ],
            "rules": [
                {
                    "format": {
                        "api": "OpenGLES",
                        "major": 2,
                        "minor": 0
                    },
                    "substitution": "gl_FragColor = $fragColor;"
                },
                {
                    "format": {
                        "api": "OpenGLES",
                        "major": 3,
                        "minor": 0
                    },
                    "headerSnippets": [
                        "out highp vec4 fragColor;"
                    ],
                    "substitution": "fragColor = $fragColor;"
                },
                {
                    "format": {
                        "api": "OpenGLCoreProfile",
                        "major": 3,
                        "minor": 0
                    },
                    "headerSnippets": [
                        "out vec4 fragColor;"
                    ],
                    "substitution": "fragColor = $fragColor;"
                }
            ]
        },
        "gl_Position": {
            "inputs": [
                "position"
            ],
            "rules": [
                {
                    "format": {
                        "api": "OpenGLES",
                        "major": 2,
                        "minor": 0
                    },
                    "substitution": "gl_Position = $position;"
                },
                {
                    "format": {
                        "api": "OpenGLES",
                        "major": 3,
                        "minor": 0
                    },
                    "substitution": "gl_Position = $position;"
                },
                {
                    "format": {
                        "api": "OpenGLCoreProfile",
                        "major": 3,
                        "minor": 0
                    },
                    "substitution": "gl_Position = $position;"
                }
            ]
        },
        "greater": {
            "inputs": [
                "input1",
                "input2"
            ],
            "outputs": [
                "output"
            ],
            "parameters": {
                "type": {
                    "type": "QShaderLanguage::VariableType",
                    "value": "QShaderLanguage::Bool"
                },
                "valueType": {
                    "type": "QShaderLanguage::VariableType",
                    "value": "QShaderLanguage::Vec3"
                }
            },
            "rules": [
                {
                    "format": {
                        "api": "OpenGLES",
                        "major": 2,
                        "minor": 0
                    },
                    "substitution": "$type $output = $input1 > $input2;"
                },
                {
                    "format": {
                        "api": "OpenGLCoreProfile",
                        "major": 3,
                        "minor": 0
                    },
                    "substitution": "$type $output = $input1 > $input2;"
                }
            ]
        },
        "if": {
            "inputs": [
                "condition",
                "false",
                "true"
            ],
            "outputs": [
                "output"
            ],
            "parameters": {
                "conditionType": {
                    "type": "QShaderLanguage::VariableType",
                    "value": "QShaderLanguage::Bool"
                },
                "type": {
                    "type": "QShaderLanguage::VariableType",
                    "value": "QShaderLanguage::Vec3"
                }
            },
            "rules": [
                {
                    "format": {
                        "api": "OpenGLES",
                        "major": 2,
                        "minor": 0
                    },
                    "substitution": "highp $type $output = ($condition) ? $true : $false;"
                },
                {
                    "format": {
                        "api": "OpenGLCoreProfile",
                        "major": 3,
                        "minor": 0
                    },
                    "substitution": "$type $output = ($condition) ? $true : $false;"
                }
            ]
        },
        "input": {
            "outputs": [
                "value"
            ],
            "parameters": {
                "name": "defaultName",
                "qualifier": {
                    "type": "QShaderLanguage::StorageQualifier",
                    "value": "QShaderLanguage::Input"
                },
                "type": {
                    "type": "QShaderLanguage::VariableType",
                    "value": "QShaderLanguage::Vec3"
                }
            },
            "rules": [
                {
                    "format": {
                        "api": "OpenGLES",
                        "major": 2,
                        "minor": 0
                    },
                    "headerSnippets": [
                        "$qualifier highp $type $name;"
                    ],
                    "substitution": "highp $type $value = $name;"
                },
                {
                    "format": {
                        "api": "OpenGLCoreProfile",
                        "major": 3,
                        "minor": 0
                    },
                    "headerSnippets": [
                        "$qualifier $type $name;"
                    ],
                    "substitution": "$type $value = $name;"
                }
            ]
        },
        "join2": {
            "inputs": [
                "first",
                "second"
            ],
            "outputs": [
                "output"
            ],
            "parameters": {
                "type": {
                    "type": "QShaderLanguage::VariableType",
                    "value": "QShaderLanguage::Vec2"
                },
                "typeOfFirst": {
                    "type": "QShaderLanguage::VariableType",
                    "value": "QShaderLanguage::Float"
                },
                "typeOfSecond": {
                    "type": "QShaderLanguage::VariableType",
                    "value": "QShaderLanguage::Float"
                }
            },
            "rules": [
                {
                    "format": {
                        "api": "OpenGLES",
                        "major": 2,
                        "minor": 0
                    },
                    "substitution": "highp $type $output = $type($first, $second);"
                },
                {
                    "format": {
                        "api": "OpenGLCoreProfile",
                        "major": 3,
                        "minor": 0
                    },
                    "substitution": "$type $output = $type($first, $second);"
                }
            ]
        },
        "join3": {
            "inputs": [
                "first",
                "second",
                "third"
            ],
            "outputs": [
                "output"
            ],
            "parameters": {
                "type": {
                    "type": "QShaderLanguage::VariableType",
                    "value": "QShaderLanguage::Vec3"
                },
                "typeOfFirst": {
                    "type": "QShaderLanguage::VariableType",
                    "value": "QShaderLanguage::Float"
                },
                "typeOfSecond": {
                    "type": "QShaderLanguage::VariableType",
                    "value": "QShaderLanguage::Float"
                },
                "typeOfThird": {
                    "type": "QShaderLanguage::VariableType",
                    "value": "QShaderLanguage::Float"
                }
            },
            "rules": [
                {
                    "format": {
                        "api": "OpenGLES",
                        "major": 2,
                        "minor": 0
                    },
                    "substitution": "highp $type $output = $type($first, $second, $third);"
                },
                {
                    "format": {
                        "api": "OpenGLCoreProfile",
                        "major": 3,
                        "minor": 0
                    },
                    "substitution": "$type $output = $type($first, $second, $third);"
                }
            ]
        },
        "join4d": {
            "inputs": [
                "first",
                "fourth",
                "second",
                "third"
            ],
            "outputs": [
                "output"
            ],
            "parameters": {
                "type": {
                    "type": "QShaderLanguage::VariableType",
                    "value": "QShaderLanguage::Vec4"
                },
                "typeOfFirst": {
                    "type": "QShaderLanguage::VariableType",
                    "value": "QShaderLanguage::Float"
                },
                "typeOfFourth": {
                    "type": "QShaderLanguage::VariableType",
                    "value": "QShaderLanguage::Float"
                },
                "typeOfSecond": {
                    "type": "QShaderLanguage::VariableType",
                    "value": "QShaderLanguage::Float"
                },
                "typeOfThird": {
                    "type": "QShaderLanguage::VariableType",
                    "value": "QShaderLanguage::Float"
                }
            },
            "rules": [
                {
                    "format": {
                        "api": "OpenGLES",
                        "major": 2,
                        "minor": 0
                    },
                    "substitution": "highp $type $output = $type($first, $second, $third, $fourth);"
                },
                {
                    "format": {
                        "api": "OpenGLCoreProfile",
                        "major": 3,
                        "minor": 0
                    },
                    "substitution": "$type $output = $type($first, $second, $third, $fourth);"
                }
            ]
        },
        "kuesa_ShaderDataInput": {
            "inputs": [
                "shaderData"
            ],
            "outputs": [
                "value"
            ],
            "parameters": {
                "name": "defaultName",
                "type": {
                    "type": "QShaderLanguage::VariableType",
                    "value": "QShaderLanguage::Vec3"
                }
            },
            "rules": [
                {
                    "format": {
                        "api": "OpenGLES",
                        "major": 2,
                        "minor": 0
                    },
                    "substitution": "highp $type $value = $shaderData.$name;"
                },
                {
                    "format": {
                        "api": "OpenGLCoreProfile",
                        "major": 3,
                        "minor": 0
                    },
                    "substitution": "$type $value = $shaderData.$name;"
                }
            ]
        },
        "kuesa_exposureCorrect": {
            "inputs": [
                "color",
                "exposure"
            ],
            "outputs": [
                "outputColor"
            ],
            "rules": [
                {
                    "format": {
                        "api": "OpenGLCoreProfile",
                        "major": 3,
                        "minor": 1
                    },
                    "substitution": "vec3 $outputColor = $color * pow(2.0, $exposure);"
                },
                {
                    "format": {
                        "api": "OpenGLES",
                        "major": 2,
                        "minor": 0
                    },
                    "substitution": "highp vec3 $outputColor = $color * pow(2.0, $exposure);"
                },
                {
                    "format": {
                        "api": "OpenGLES",
                        "major": 3,
                        "minor": 0
                    },
                    "substitution": "highp vec3 $outputColor = $color * pow(2.0, $exposure);"
                }
            ]
        },
        "kuesa_filmicToneMap": {
            "inputs": [
                "color"
            ],
            "outputs": [
                "outputColor"
            ],
            "rules": [
                {
                    "format": {
                        "api": "OpenGLCoreProfile",
                        "major": 3,
                        "minor": 1
                    },
                    "headerSnippets": [
                        "vec3 filmicToneMap(const in vec3 c) {\n                                           vec3 x = max(vec3(0.0), c - vec3(0.4));    \n                                           return (x * (6.2 * x + vec3(0.5))) / (x * (6.2 * x + vec3(1.7)) + vec3(0.06));\n                                       }"
                    ],
                    "substitution": "vec3 $outputColor = filmicToneMap($color);"
                },
                {
                    "format": {
                        "api": "OpenGLES",
                        "major": 2,
                        "minor": 0
                    },
                    "headerSnippets": [
                        "highp vec3 filmicToneMap(const in highp vec3 c) {\n                                           highp vec3 x = max(vec3(0.0), c - vec3(0.4));    \n                                           return (x * (6.2 * x + vec3(0.5))) / (x * (6.2 * x + vec3(1.7)) + vec3(0.06));\n                                       }"
                    ],
                    "substitution": "highp vec3 $outputColor = filmicToneMap($color);"
                },
                {
                    "format": {
                        "api": "OpenGLES",
                        "major": 3,
                        "minor": 0
                    },
                    "headerSnippets": [
                        "highp vec3 filmicToneMap(const in highp vec3 c) {\n                                           highp vec3 x = max(vec3(0.0), c - vec3(0.4));    \n                                           return (x * (6.2 * x + vec3(0.5))) / (x * (6.2 * x + vec3(1.7)) + vec3(0.06));\n                                       }"
                    ],
                    "substitution": "highp vec3 $outputColor = filmicToneMap($color);"
                }
            ]
        },
        "kuesa_gammaCorrect": {
            "inputs": [
                "color",
                "gamma"
            ],
            "outputs": [
                "outputColor"
            ],
            "rules": [
                {
                    "format": {
                        "api": "OpenGLCoreProfile",
                        "major": 3,
                        "minor": 1
                    },
                    "substitution": "vec3 $outputColor = pow($color, vec3(1.0 / $gamma));"
                },
                {
                    "format": {
                        "api": "OpenGLES",
                        "major": 2,
                        "minor": 0
                    },
                    "substitution": "highp vec3 $outputColor = pow($color, vec3(1.0 / $gamma));"
                },
                {
                    "format": {
                        "api": "OpenGLES",
                        "major": 3,
                        "minor": 0
                    },
                    "substitution": "highp vec3 $outputColor = pow($color, vec3(1.0 / $gamma));"
                }
            ]
        },
        "kuesa_iroDiffuseHemiShaderData": {
            "outputs": [
                "shaderData"
            ],
            "rules": [
                {
                    "format": {
                        "api": "OpenGLES",
                        "major": 2,
                        "minor": 0
                    },
                    "headerSnippets": [
                        "#pragma include :/kuesa/shaders/es2/kuesa_iroDiffuseHemiShaderData.inc.frag"
                    ],
                    "substitution": "MaterialProperties $shaderData = properties;"
                },
                {
                    "format": {
                        "api": "OpenGLES",
                        "major": 3,
                        "minor": 0
                    },
                    "headerSnippets": [
                        "#pragma include :/kuesa/shaders/es3/kuesa_iroDiffuseHemiShaderData.inc.frag"
                    ],
                    "substitution": "MaterialProperties $shaderData = properties;"
                },
                {
                    "format": {
                        "api": "OpenGLCoreProfile",
                        "major": 3,
                        "minor": 1
                    },
                    "headerSnippets": [
                        "#pragma include :/kuesa/shaders/gl3/kuesa_iroDiffuseHemiShaderData.inc.frag"
                    ],
                    "substitution": "MaterialProperties $shaderData = properties;"
                }
            ]
        },
        "kuesa_iroDiffuseShaderData": {
            "outputs": [
                "shaderData"
            ],
            "rules": [
                {
                    "format": {
                        "api": "OpenGLES",
                        "major": 2,
                        "minor": 0
                    },
                    "headerSnippets": [
                        "#pragma include :/kuesa/shaders/es2/kuesa_iroDiffuseShaderData.inc.frag"
                    ],
                    "substitution": "MaterialProperties $shaderData = properties;"
                },
                {
                    "format": {
                        "api": "OpenGLES",
                        "major": 3,
                        "minor": 0
                    },
                    "headerSnippets": [
                        "#pragma include :/kuesa/shaders/es3/kuesa_iroDiffuseShaderData.inc.frag"
                    ],
                    "substitution": "MaterialProperties $shaderData = properties;"
                },
                {
                    "format": {
                        "api": "OpenGLCoreProfile",
                        "major": 3,
                        "minor": 1
                    },
                    "headerSnippets": [
                        "#pragma include :/kuesa/shaders/gl3/kuesa_iroDiffuseShaderData.inc.frag"
                    ],
                    "substitution": "MaterialProperties $shaderData = properties;"
                }
            ]
        },
        "kuesa_metalRoughFunction": {
            "inputs": [
                "ambientOcclusion",
                "baseColor",
                "emissive",
                "metalness",
                "roughness",
                "worldNormal",
                "worldPosition",
                "worldView"
            ],
            "outputs": [
                "outputColor"
            ],
            "rules": [
                {
                    "format": {
                        "api": "OpenGLCoreProfile",
                        "major": 3,
                        "minor": 1
                    },
                    "headerSnippets": [
                        "#pragma include :/kuesa/shaders/gl3/kuesa_metalrough.inc.frag"
                    ],
                    "substitution": "vec3 $outputColor = kuesa_metalRoughFunction($baseColor, $metalness, $roughness, $ambientOcclusion, $emissive, $worldPosition, $worldView, $worldNormal);"
                },
                {
                    "format": {
                        "api": "OpenGLES",
                        "major": 2,
                        "minor": 0
                    },
                    "headerSnippets": [
                        "#pragma include :/kuesa/shaders/es2/kuesa_metalrough.inc.frag"
                    ],
                    "substitution": "highp vec3 $outputColor = kuesa_metalRoughFunction($baseColor, $metalness, $roughness, $ambientOcclusion, $emissive, $worldPosition, $worldView, $worldNormal);"
                },
                {
                    "format": {
                        "api": "OpenGLES",
                        "major": 3,
                        "minor": 0
                    },
                    "headerSnippets": [
                        "#pragma include :/kuesa/shaders/es3/kuesa_metalrough.inc.frag"
                    ],
                    "substitution": "highp vec3 $outputColor = kuesa_metalRoughFunction($baseColor, $metalness, $roughness, $ambientOcclusion, $emissive, $worldPosition, $worldView, $worldNormal);"
                }
            ]
        },
        "kuesa_metallicRoughnessShaderData": {
            "outputs": [
                "shaderData"
            ],
            "rules": [
                {
                    "format": {
                        "api": "OpenGLES",
                        "major": 2,
                        "minor": 0
                    },
                    "headerSnippets": [
                        "#pragma include :/kuesa/shaders/es2/kuesa_metallicRoughnessShaderData.inc.frag"
                    ],
                    "substitution": "MetallicRoughness $shaderData = metallicRoughness;"
                },
                {
                    "format": {
                        "api": "OpenGLES",
                        "major": 3,
                        "minor": 0
                    },
                    "headerSnippets": [
                        "#pragma include :/kuesa/shaders/es3/kuesa_metallicRoughnessShaderData.inc.frag"
                    ],
                    "substitution": "MetallicRoughness $shaderData = metallicRoughness;"
                },
                {
                    "format": {
                        "api": "OpenGLCoreProfile",
                        "major": 3,
                        "minor": 1
                    },
                    "headerSnippets": [
                        "#pragma include :/kuesa/shaders/gl3/kuesa_metallicRoughnessShaderData.inc.frag"
                    ],
                    "substitution": "MetallicRoughness $shaderData = metallicRoughness;"
                }
            ]
        },
        "kuesa_morphTargetsNormal": {
            "inputs": [
                "vNormal",
                "weights"
            ],
            "outputs": [
                "normal"
            ],
            "rules": [
                {
                    "format": {
                        "api": "OpenGLES",
                        "major": 2,
                        "minor": 0
                    },
                    "headerSnippets": [
                        "#pragma include :/kuesa/shaders/es2/kuesa_morphtargets_normal.inc.vert"
                    ],
                    "substitution": "highp vec3 $normal = kuesa_morphNormal($vNormal);"
                },
                {
                    "format": {
                        "api": "OpenGLES",
                        "major": 3,
                        "minor": 0
                    },
                    "headerSnippets": [
                        "#pragma include :/kuesa/shaders/es3/kuesa_morphtargets_normal.inc.vert"
                    ],
                    "substitution": "highp vec3 $normal = kuesa_morphNormal($vNormal);"
                },
                {
                    "format": {
                        "api": "OpenGLCoreProfile",
                        "major": 3,
                        "minor": 1
                    },
                    "headerSnippets": [
                        "#pragma include :/kuesa/shaders/gl3/kuesa_morphtargets_normal.inc.vert"
                    ],
                    "substitution": "vec3 $normal = kuesa_morphNormal($vNormal);"
                }
            ]
        },
        "kuesa_morphTargetsPosition": {
            "inputs": [
                "vPosition",
                "weights"
            ],
            "outputs": [
                "position"
            ],
            "rules": [
                {
                    "format": {
                        "api": "OpenGLES",
                        "major": 2,
                        "minor": 0
                    },
                    "headerSnippets": [
                        "#pragma include :/kuesa/shaders/es2/kuesa_morphtargets_position.inc.vert"
                    ],
                    "substitution": "highp vec3 $position = kuesa_morphPosition($vPosition);"
                },
                {
                    "format": {
                        "api": "OpenGLES",
                        "major": 3,
                        "minor": 0
                    },
                    "headerSnippets": [
                        "#pragma include :/kuesa/shaders/es3/kuesa_morphtargets_position.inc.vert"
                    ],
                    "substitution": "highp vec3 $position = kuesa_morphPosition($vPosition);"
                },
                {
                    "format": {
                        "api": "OpenGLCoreProfile",
                        "major": 3,
                        "minor": 1
                    },
                    "headerSnippets": [
                        "#pragma include :/kuesa/shaders/gl3/kuesa_morphtargets_position.inc.vert"
                    ],
                    "substitution": "vec3 $position = kuesa_morphPosition($vPosition);"
                }
            ]
        },
        "kuesa_morphTargetsTangent": {
            "inputs": [
                "vTangent",
                "weights"
            ],
            "outputs": [
                "tangent"
            ],
            "rules": [
                {
                    "format": {
                        "api": "OpenGLES",
                        "major": 2,
                        "minor": 0
                    },
                    "headerSnippets": [
                        "#pragma include :/kuesa/shaders/es2/kuesa_morphtargets_tangent.inc.vert"
                    ],
                    "substitution": "highp vec4 $tangent = kuesa_morphTangent($vTangent);"
                },
                {
                    "format": {
                        "api": "OpenGLES",
                        "major": 3,
                        "minor": 0
                    },
                    "headerSnippets": [
                        "#pragma include :/kuesa/shaders/es3/kuesa_morphtargets_tangent.inc.vert"
                    ],
                    "substitution": "highp vec4 $tangent = kuesa_morphTangent($vTangent);"
                },
                {
                    "format": {
                        "api": "OpenGLCoreProfile",
                        "major": 3,
                        "minor": 1
                    },
                    "headerSnippets": [
                        "#pragma include :/kuesa/shaders/gl3/kuesa_morphtargets_tangent.inc.vert"
                    ],
                    "substitution": "vec4 $tangent = kuesa_morphTangent($vTangent);"
                }
            ]
        },
        "kuesa_morphTargetsWeights": {
            "outputs": [
                "weights"
            ],
            "rules": [
                {
                    "format": {
                        "api": "OpenGLES",
                        "major": 2,
                        "minor": 0
                    },
                    "headerSnippets": [
                        "#pragma include :/kuesa/shaders/es2/kuesa_morphtargets_weights.inc.vert"
                    ],
                    "substitution": ""
                },
                {
                    "format": {
                        "api": "OpenGLES",
                        "major": 3,
                        "minor": 0
                    },
                    "headerSnippets": [
                        "#pragma include :/kuesa/shaders/es3/kuesa_morphtargets_weights.inc.vert"
                    ],
                    "substitution": ""
                },
                {
                    "format": {
                        "api": "OpenGLCoreProfile",
                        "major": 3,
                        "minor": 1
                    },
                    "headerSnippets": [
                        "#pragma include :/kuesa/shaders/gl3/kuesa_morphtargets_weights.inc.vert"
                    ],
                    "substitution": ""
                }
            ]
        },
        "kuesa_morphWeight": {
            "inputs": [
                "index",
                "weights"
            ],
            "outputs": [
                "weight"
            ],
            "rules": [
                {
                    "format": {
                        "api": "OpenGLCoreProfile",
                        "major": 3,
                        "minor": 0
                    },
                    "substitution": "float $weight = morphWeights.weight$index;"
                },
                {
                    "format": {
                        "api": "OpenGLES",
                        "major": 2,
                        "minor": 0
                    },
                    "substitution": "highp float $weight = morphWeights.weight$index;"
                },
                {
                    "format": {
                        "api": "OpenGLES",
                        "major": 3,
                        "minor": 0
                    },
                    "substitution": "highp float $weight = morphWeights.weight$index;"
                }
            ]
        },
        "kuesa_morphWeightsUniform": {
            "outputs": [
                "weights"
            ],
            "rules": [
                {
                    "format": {
                        "api": "OpenGLCoreProfile",
                        "major": 3,
                        "minor": 1
                    },
                    "headerSnippets": [
                        "struct MorphWeights {\n float weight0;\n float weight1;\n float weight2;\n float weight3; \n float weight4; \n float weight5;\n float weight6;\n float weight7; };",
                        "uniform MorphWeights morphWeights;"
                    ],
                    "substitution": ""
                },
                {
                    "format": {
                        "api": "OpenGLES",
                        "major": 2,
                        "minor": 0
                    },
                    "headerSnippets": [
                        "struct MorphWeights {\n highp float weight0;\n highp float weight1;\n highp float weight2;\n highp float weight3; \n highp float weight4; \n highp float weight5;\n highp float weight6;\n highp float weight7; };",
                        "uniform MorphWeights morphWeights;"
                    ],
                    "substitution": ""
                },
                {
                    "format": {
                        "api": "OpenGLES",
                        "major": 3,
                        "minor": 0
                    },
                    "headerSnippets": [
                        "struct MorphWeights {\n highp float weight0;\n highp float weight1;\n highp float weight2;\n highp float weight3; \n highp float weight4; \n highp float weight5;\n highp float weight6;\n highp float weight7; };",
                        "uniform MorphWeights morphWeights;"
                    ],
                    "substitution": ""
                }
            ]
        },
        "kuesa_morpthTargetsWeights": {
            "outputs": [
                "weights"
            ]
        },
        "kuesa_reinhardToneMap": {
            "inputs": [
                "color"
            ],
            "outputs": [
                "outputColor"
            ],
            "rules": [
                {
                    "format": {
                        "api": "OpenGLCoreProfile",
                        "major": 3,
                        "minor": 1
                    },
                    "substitution": "vec3 $outputColor = $color / ($color + vec3(1.0));"
                },
                {
                    "format": {
                        "api": "OpenGLES",
                        "major": 2,
                        "minor": 0
                    },
                    "substitution": "highp vec3 $outputColor = $color / ($color + vec3(1.0));"
                },
                {
                    "format": {
                        "api": "OpenGLES",
                        "major": 3,
                        "minor": 0
                    },
                    "substitution": "highp vec3 $outputColor = $color / ($color + vec3(1.0));"
                }
            ]
        },
        "kuesa_sampleTexture": {
            "inputs": [
                "coord",
                "texture"
            ],
            "outputs": [
                "color"
            ],
            "rules": [
                {
                    "format": {
                        "api": "OpenGLES",
                        "major": 2,
                        "minor": 0
                    },
                    "substitution": "highp vec4 $color = texture2D($texture, $coord);"
                },
                {
                    "format": {
                        "api": "OpenGLES",
                        "major": 3,
                        "minor": 0
                    },
                    "substitution": "highp vec4 $color = texture($texture, $coord);"
                },
                {
                    "format": {
                        "api": "OpenGLCoreProfile",
                        "major": 3,
                        "minor": 0
                    },
                    "substitution": "vec4 $color = texture($texture, $coord);"
                }
            ]
        },
        "kuesa_unlitShaderData": {
            "outputs": [
                "shaderData"
            ],
            "rules": [
                {
                    "format": {
                        "api": "OpenGLES",
                        "major": 2,
                        "minor": 0
                    },
                    "headerSnippets": [
                        "#pragma include :/kuesa/shaders/es2/kuesa_unlitShaderData.inc.frag"
                    ],
                    "substitution": "Unlit $shaderData = unlit;"
                },
                {
                    "format": {
                        "api": "OpenGLES",
                        "major": 3,
                        "minor": 0
                    },
                    "headerSnippets": [
                        "#pragma include :/kuesa/shaders/es3/kuesa_unlitShaderData.inc.frag"
                    ],
                    "substitution": "Unlit $shaderData = unlit;"
                },
                {
                    "format": {
                        "api": "OpenGLCoreProfile",
                        "major": 3,
                        "minor": 1
                    },
                    "headerSnippets": [
                        "#pragma include :/kuesa/shaders/gl3/kuesa_unlitShaderData.inc.frag"
                    ],
                    "substitution": "Unlit $shaderData = unlit;"
                }
            ]
        },
        "max": {
            "inputs": [
                "first",
                "second"
            ],
            "outputs": [
                "value"
            ],
            "parameters": {
                "secondType": {
                    "type": "QShaderLanguage::VariableType",
                    "value": "QShaderLanguage::Vec3"
                },
                "type": {
                    "type": "QShaderLanguage::VariableType",
                    "value": "QShaderLanguage::Vec3"
                }
            },
            "rules": [
                {
                    "format": {
                        "api": "OpenGLES",
                        "major": 2,
                        "minor": 0
                    },
                    "substitution": "highp $type $value = max($first, $second);"
                },
                {
                    "format": {
                        "api": "OpenGLCoreProfile",
                        "major": 3,
                        "minor": 0
                    },
                    "substitution": "$type $value = max($first, $second);"
                }
            ]
        },
        "metalRoughFunction": {
            "inputs": [
                "ambientOcclusion",
                "baseColor",
                "metalness",
                "roughness",
                "worldNormal",
                "worldPosition",
                "worldView"
            ],
            "outputs": [
                "outputColor"
            ],
            "rules": [
                {
                    "format": {
                        "api": "OpenGLCoreProfile",
                        "major": 3,
                        "minor": 1
                    },
                    "headerSnippets": [
                        "#pragma include :/shaders/gl3/metalrough.inc.frag"
                    ],
                    "substitution": "vec4 $outputColor = metalRoughFunction($baseColor, $metalness, $roughness, $ambientOcclusion, $worldPosition, $worldView, $worldNormal);"
                }
            ]
        },
        "min": {
            "inputs": [
                "first",
                "second"
            ],
            "outputs": [
                "value"
            ],
            "parameters": {
                "secondType": {
                    "type": "QShaderLanguage::VariableType",
                    "value": "QShaderLanguage::Vec3"
                },
                "type": {
                    "type": "QShaderLanguage::VariableType",
                    "value": "QShaderLanguage::Vec3"
                }
            },
            "rules": [
                {
                    "format": {
                        "api": "OpenGLES",
                        "major": 2,
                        "minor": 0
                    },
                    "substitution": "highp $type $value = min($first, $second);"
                },
                {
                    "format": {
                        "api": "OpenGLCoreProfile",
                        "major": 3,
                        "minor": 0
                    },
                    "substitution": "$type $value = min($first, $second);"
                }
            ]
        },
        "mix": {
            "inputs": [
                "a",
                "x",
                "y"
            ],
            "outputs": [
                "output"
            ],
            "rules": [
                {
                    "format": {
                        "api": "OpenGLES",
                        "major": 2,
                        "minor": 0
                    },
                    "substitution": "highp vec4 $output = mix($x, $y, $a);"
                },
                {
                    "format": {
                        "api": "OpenGLES",
                        "major": 3,
                        "minor": 0
                    },
                    "substitution": "highp vec4 $output = mix($x, $y, $a);"
                },
                {
                    "format": {
                        "api": "OpenGLCoreProfile",
                        "major": 3,
                        "minor": 0
                    },
                    "substitution": "vec4 $output = mix($x, $y, $a);"
                }
            ]
        },
        "multiply": {
            "inputs": [
                "first",
                "second"
            ],
            "outputs": [
                "product"
            ],
            "parameters": {
                "firstType": {
                    "type": "QShaderLanguage::VariableType",
                    "value": "QShaderLanguage::Vec3"
                },
                "secondType": {
                    "type": "QShaderLanguage::VariableType",
                    "value": "QShaderLanguage::Vec3"
                },
                "type": {
                    "type": "QShaderLanguage::VariableType",
                    "value": "QShaderLanguage::Vec3"
                }
            },
            "rules": [
                {
                    "format": {
                        "api": "OpenGLES",
                        "major": 2,
                        "minor": 0
                    },
                    "substitution": "highp $type $product = $first * $second;"
                },
                {
                    "format": {
                        "api": "OpenGLCoreProfile",
                        "major": 3,
                        "minor": 0
                    },
                    "substitution": "$type $product = $first * $second;"
                }
            ]
        },
        "normalize": {
            "inputs": [
                "input"
            ],
            "outputs": [
                "output"
            ],
            "parameters": {
                "type": {
                    "type": "QShaderLanguage::VariableType",
                    "value": "QShaderLanguage::Vec3"
                }
            },
            "rules": [
                {
                    "format": {
                        "api": "OpenGLES",
                        "major": 2,
                        "minor": 0
                    },
                    "substitution": "highp $type $output = normalize($input);"
                },
                {
                    "format": {
                        "api": "OpenGLCoreProfile",
                        "major": 3,
                        "minor": 0
                    },
                    "substitution": "$type $output = normalize($input);"
                }
            ]
        },
        "not": {
            "inputs": [
                "input"
            ],
            "outputs": [
                "output"
            ],
            "parameters": {
                "type": {
                    "type": "QShaderLanguage::VariableType",
                    "value": "QShaderLanguage::Bool"
                }
            },
            "rules": [
                {
                    "format": {
                        "api": "OpenGLES",
                        "major": 2,
                        "minor": 0
                    },
                    "substitution": "$type $output = !$input1;"
                },
                {
                    "format": {
                        "api": "OpenGLCoreProfile",
                        "major": 3,
                        "minor": 0
                    },
                    "substitution": "$type $output = !$input1;"
                }
            ]
        },
        "or": {
            "inputs": [
                "input1",
                "input2"
            ],
            "outputs": [
                "output"
            ],
            "parameters": {
                "type": {
                    "type": "QShaderLanguage::VariableType",
                    "value": "QShaderLanguage::Bool"
                }
            },
            "rules": [
                {
                    "format": {
                        "api": "OpenGLES",
                        "major": 2,
                        "minor": 0
                    },
                    "substitution": "$type $output = $input1 || $input2;"
                },
                {
                    "format": {
                        "api": "OpenGLCoreProfile",
                        "major": 3,
                        "minor": 0
                    },
                    "substitution": "$type $output = $input1 || $input2;"
                }
            ]
        },
        "output": {
            "inputs": [
                "value"
            ],
            "parameters": {
                "name": "defaultName",
                "type": {
                    "type": "QShaderLanguage::VariableType",
                    "value": "QShaderLanguage::Vec3"
                }
            },
            "rules": [
                {
                    "format": {
                        "api": "OpenGLES",
                        "major": 2,
                        "minor": 0
                    },
                    "headerSnippets": [
                        "varying highp $type $name;"
                    ],
                    "substitution": "$name = $value;"
                },
                {
                    "format": {
                        "api": "OpenGLES",
                        "major": 3,
                        "minor": 0
                    },
                    "headerSnippets": [
                        "out highp $type $name;"
                    ],
                    "substitution": "$name = $value;"
                },
                {
                    "format": {
                        "api": "OpenGLCoreProfile",
                        "major": 3,
                        "minor": 0
                    },
                    "headerSnippets": [
                        "out $type $name;"
                    ],
                    "substitution": "$name = $value;"
                }
            ]
        },
        "pow": {
            "inputs": [
                "base",
                "power"
            ],
            "outputs": [
                "value"
            ],
            "parameters": {
                "type": {
                    "type": "QShaderLanguage::VariableType",
                    "value": "QShaderLanguage::Float"
                }
            },
            "rules": [
                {
                    "format": {
                        "api": "OpenGLES",
                        "major": 2,
                        "minor": 0
                    },
                    "substitution": "highp $type $value = pow($base, $power);"
                },
                {
                    "format": {
                        "api": "OpenGLCoreProfile",
                        "major": 3,
                        "minor": 0
                    },
                    "substitution": "$type $value = pow($base, $power);"
                }
            ]
        },
        "sRGBtoLinear": {
            "inputs": [
                "sRGB"
            ],
            "outputs": [
                "linear"
            ],
            "rules": [
                {
                    "format": {
                        "api": "OpenGLES",
                        "major": 2,
                        "minor": 0
                    },
                    "substitution": "highp vec4 $linear = vec4(pow($sRGB.rgb, vec3(2.2)), $sRGB.a);"
                },
                {
                    "format": {
                        "api": "OpenGLES",
                        "major": 3,
                        "minor": 0
                    },
                    "substitution": "highp vec4 $linear = vec4(pow($sRGB.rgb, vec3(2.2)), $sRGB.a);"
                },
                {
                    "format": {
                        "api": "OpenGLCoreProfile",
                        "major": 3,
                        "minor": 0
                    },
                    "substitution": "vec4 $linear = vec4(pow($sRGB.rgb, vec3(2.2)), $sRGB.a);"
                }
            ]
        },
        "sampleTexture": {
            "inputs": [
                "coord"
            ],
            "outputs": [
                "color"
            ],
            "parameters": {
                "name": "defaultName"
            },
            "rules": [
                {
                    "format": {
                        "api": "OpenGLES",
                        "major": 2,
                        "minor": 0
                    },
                    "headerSnippets": [
                        "uniform sampler2D $name;"
                    ],
                    "substitution": "highp vec4 $color = texture2D($name, $coord);"
                },
                {
                    "format": {
                        "api": "OpenGLES",
                        "major": 3,
                        "minor": 0
                    },
                    "headerSnippets": [
                        "uniform sampler2D $name;"
                    ],
                    "substitution": "highp vec4 $color = texture($name, $coord);"
                },
                {
                    "format": {
                        "api": "OpenGLCoreProfile",
                        "major": 3,
                        "minor": 0
                    },
                    "headerSnippets": [
                        "uniform sampler2D $name;"
                    ],
                    "substitution": "vec4 $color = texture($name, $coord);"
                }
            ]
        },
        "subgraph": {
            "parameters": {
                "Path": "/path/to/file"
            }
        },
        "subtract": {
            "inputs": [
                "minuend",
                "subtrahend"
            ],
            "outputs": [
                "difference"
            ],
            "parameters": {
                "type": {
                    "type": "QShaderLanguage::VariableType",
                    "value": "QShaderLanguage::Vec3"
                }
            },
            "rules": [
                {
                    "format": {
                        "api": "OpenGLES",
                        "major": 2,
                        "minor": 0
                    },
                    "substitution": "highp $type $difference = $minuend - $subtrahend;"
                },
                {
                    "format": {
                        "api": "OpenGLCoreProfile",
                        "major": 3,
                        "minor": 0
                    },
                    "substitution": "$type $difference = $minuend - $subtrahend;"
                }
            ]
        },
        "swizzle": {
            "inputs": [
                "input"
            ],
            "outputs": [
                "output"
            ],
            "parameters": {
                "fields": "x",
                "inputType": {
                    "type": "QShaderLanguage::VariableType",
                    "value": "QShaderLanguage::Vec3"
                },
                "type": {
                    "type": "QShaderLanguage::VariableType",
                    "value": "QShaderLanguage::Vec3"
                }
            },
            "rules": [
                {
                    "format": {
                        "api": "OpenGLES",
                        "major": 2,
                        "minor": 0
                    },
                    "substitution": "highp $type $output = ($input).$fields;"
                },
                {
                    "format": {
                        "api": "OpenGLCoreProfile",
                        "major": 3,
                        "minor": 0
                    },
                    "substitution": "$type $output = ($input).$fields;"
                }
            ]
        },
        "time": {
            "outputs": [
                "time"
            ],
            "rules": [
                {
                    "format": {
                        "api": "OpenGLES",
                        "major": 2,
                        "minor": 0
                    },
                    "headerSnippets": [
                        "uniform highp float time;"
                    ],
                    "substitution": "highp float $time = time;"
                },
                {
                    "format": {
                        "api": "OpenGLCoreProfile",
                        "major": 3,
                        "minor": 0
                    },
                    "headerSnippets": [
                        "uniform float time;"
                    ],
                    "substitution": "float $time = time;"
                }
            ]
        },
        "transpose": {
            "inputs": [
                "input"
            ],
            "outputs": [
                "output"
            ],
            "parameters": {
                "type": {
                    "type": "QShaderLanguage::VariableType",
                    "value": "QShaderLanguage::Mat3"
                }
            },
            "rules": [
                {
                    "format": {
                        "api": "OpenGLES",
                        "major": 2,
                        "minor": 0
                    },
                    "substitution": "highp $type $output = transpose($input);"
                },
                {
                    "format": {
                        "api": "OpenGLCoreProfile",
                        "major": 3,
                        "minor": 0
                    },
                    "substitution": "$type $output = transpose($input);"
                }
            ]
        },
        "worldSpaceToTangentSpaceMatrix": {
            "inputs": [
                "worldNormal",
                "worldTangent"
            ],
            "outputs": [
                "matrix"
            ],
            "rules": [
                {
                    "format": {
                        "api": "OpenGLES",
                        "major": 2,
                        "minor": 0
                    },
                    "headerSnippets": [
                        "#pragma include :/shaders/es2/coordinatesystems.inc"
                    ],
                    "substitution": "highp mat3 $matrix = calcWorldSpaceToTangentSpaceMatrix($worldNormal, $worldTangent);"
                },
                {
                    "format": {
                        "api": "OpenGLES",
                        "major": 3,
                        "minor": 0
                    },
                    "headerSnippets": [
                        "#pragma include :/shaders/es3/coordinatesystems.inc"
                    ],
                    "substitution": "highp mat3 $matrix = calcWorldSpaceToTangentSpaceMatrix($worldNormal, $worldTangent);"
                },
                {
                    "format": {
                        "api": "OpenGLCoreProfile",
                        "major": 3,
                        "minor": 0
                    },
                    "headerSnippets": [
                        "#pragma include :/shaders/gl3/coordinatesystems.inc"
                    ],
                    "substitution": "mat3 $matrix = calcWorldSpaceToTangentSpaceMatrix($worldNormal, $worldTangent);"
                }
            ]
        }
    },
    "subgraph": [
    ]
}
