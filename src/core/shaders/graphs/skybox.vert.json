{
    "edges": [
        {
            "layers": [
            ],
            "sourcePort": "value",
            "sourceUuid": "{8c89143e-ae2a-4fa7-949f-a9c30dcd7c60}",
            "targetPort": "second",
            "targetUuid": "{00c30ec0-689d-4f9c-8e85-ba11b102e938}"
        },
        {
            "layers": [
            ],
            "sourcePort": "viewMatrix",
            "sourceUuid": "{8077b249-b7ac-4378-9a26-0cc81a6cb7ff}",
            "targetPort": "input",
            "targetUuid": "{78db0604-f1c7-4343-9191-f1a936820e0b}"
        },
        {
            "layers": [
            ],
            "sourcePort": "value",
            "sourceUuid": "{0b59e4be-97be-4a98-9f53-df1081f19791}",
            "targetPort": "value",
            "targetUuid": "{43a0231d-a27e-4fed-8439-284131d634b8}"
        },
        {
            "layers": [
            ],
            "sourcePort": "output",
            "sourceUuid": "{2606ee2f-e7c7-4c32-9287-304951d0aa40}",
            "targetPort": "second",
            "targetUuid": "{82fa83d1-f824-429c-9df8-e48afa59bb00}"
        },
        {
            "layers": [
            ],
            "sourcePort": "modelMatrix",
            "sourceUuid": "{8077b249-b7ac-4378-9a26-0cc81a6cb7ff}",
            "targetPort": "second",
            "targetUuid": "{6e38b553-3aed-4f06-911b-55f5a79f42b0}"
        },
        {
            "layers": [
            ],
            "sourcePort": "projectionMatrix",
            "sourceUuid": "{8077b249-b7ac-4378-9a26-0cc81a6cb7ff}",
            "targetPort": "first",
            "targetUuid": "{82fa83d1-f824-429c-9df8-e48afa59bb00}"
        },
        {
            "layers": [
            ],
            "sourcePort": "output",
            "sourceUuid": "{58472e90-27d4-4443-b26a-98c3ff82199a}",
            "targetPort": "position",
            "targetUuid": "{b750802b-b2c6-4ba3-9f59-9ce6d4155802}"
        },
        {
            "layers": [
            ],
            "sourcePort": "output",
            "sourceUuid": "{00c30ec0-689d-4f9c-8e85-ba11b102e938}",
            "targetPort": "second",
            "targetUuid": "{9083907f-ad8b-4933-8a6d-96764fb14b0c}"
        },
        {
            "layers": [
            ],
            "sourcePort": "product",
            "sourceUuid": "{6e38b553-3aed-4f06-911b-55f5a79f42b0}",
            "targetPort": "first",
            "targetUuid": "{9083907f-ad8b-4933-8a6d-96764fb14b0c}"
        },
        {
            "layers": [
            ],
            "sourcePort": "value",
            "sourceUuid": "{0b59e4be-97be-4a98-9f53-df1081f19791}",
            "targetPort": "first",
            "targetUuid": "{00c30ec0-689d-4f9c-8e85-ba11b102e938}"
        },
        {
            "layers": [
            ],
            "sourcePort": "product",
            "sourceUuid": "{82fa83d1-f824-429c-9df8-e48afa59bb00}",
            "targetPort": "first",
            "targetUuid": "{6e38b553-3aed-4f06-911b-55f5a79f42b0}"
        },
        {
            "layers": [
            ],
            "sourcePort": "product",
            "sourceUuid": "{9083907f-ad8b-4933-8a6d-96764fb14b0c}",
            "targetPort": "input",
            "targetUuid": "{58472e90-27d4-4443-b26a-98c3ff82199a}"
        },
        {
            "layers": [
            ],
            "sourcePort": "output",
            "sourceUuid": "{78db0604-f1c7-4343-9191-f1a936820e0b}",
            "targetPort": "input",
            "targetUuid": "{2606ee2f-e7c7-4c32-9287-304951d0aa40}"
        }
    ],
    "nodes": [
        {
            "layers": [
            ],
            "parameters": {
            },
            "type": "qt3d_default_uniforms",
            "uuid": "{8077b249-b7ac-4378-9a26-0cc81a6cb7ff}"
        },
        {
            "layers": [
            ],
            "parameters": {
                "name": "texCoord"
            },
            "type": "output",
            "uuid": "{43a0231d-a27e-4fed-8439-284131d634b8}"
        },
        {
            "layers": [
            ],
            "parameters": {
            },
            "type": "gl_Position",
            "uuid": "{b750802b-b2c6-4ba3-9f59-9ce6d4155802}"
        },
        {
            "layers": [
            ],
            "parameters": {
                "fields": "xyww",
                "inputType": {
                    "type": "QShaderLanguage::VariableType",
                    "value": "QShaderLanguage::Vec4"
                },
                "type": {
                    "type": "QShaderLanguage::VariableType",
                    "value": "QShaderLanguage::Vec4"
                }
            },
            "type": "swizzle",
            "uuid": "{58472e90-27d4-4443-b26a-98c3ff82199a}"
        },
        {
            "layers": [
            ],
            "parameters": {
                "firstType": {
                    "type": "QShaderLanguage::VariableType",
                    "value": "QShaderLanguage::Mat4"
                },
                "secondType": {
                    "type": "QShaderLanguage::VariableType",
                    "value": "QShaderLanguage::Vec4"
                },
                "type": {
                    "type": "QShaderLanguage::VariableType",
                    "value": "QShaderLanguage::Vec4"
                }
            },
            "type": "multiply",
            "uuid": "{9083907f-ad8b-4933-8a6d-96764fb14b0c}"
        },
        {
            "layers": [
            ],
            "parameters": {
                "inputType": {
                    "type": "QShaderLanguage::VariableType",
                    "value": "QShaderLanguage::Mat4"
                },
                "type": {
                    "type": "QShaderLanguage::VariableType",
                    "value": "QShaderLanguage::Mat3"
                }
            },
            "type": "cast",
            "uuid": "{78db0604-f1c7-4343-9191-f1a936820e0b}"
        },
        {
            "layers": [
            ],
            "parameters": {
                "name": "vertexPosition"
            },
            "type": "input",
            "uuid": "{0b59e4be-97be-4a98-9f53-df1081f19791}"
        },
        {
            "layers": [
            ],
            "parameters": {
                "firstType": {
                    "type": "QShaderLanguage::VariableType",
                    "value": "QShaderLanguage::Mat4"
                },
                "secondType": {
                    "type": "QShaderLanguage::VariableType",
                    "value": "QShaderLanguage::Mat4"
                },
                "type": {
                    "type": "QShaderLanguage::VariableType",
                    "value": "QShaderLanguage::Mat4"
                }
            },
            "type": "multiply",
            "uuid": "{82fa83d1-f824-429c-9df8-e48afa59bb00}"
        },
        {
            "layers": [
            ],
            "parameters": {
                "inputType": {
                    "type": "QShaderLanguage::VariableType",
                    "value": "QShaderLanguage::Mat3"
                },
                "type": {
                    "type": "QShaderLanguage::VariableType",
                    "value": "QShaderLanguage::Mat4"
                }
            },
            "type": "cast",
            "uuid": "{2606ee2f-e7c7-4c32-9287-304951d0aa40}"
        },
        {
            "layers": [
            ],
            "parameters": {
                "type": {
                    "type": "QShaderLanguage::VariableType",
                    "value": "QShaderLanguage::Vec4"
                },
                "typeOfFirst": {
                    "type": "QShaderLanguage::VariableType",
                    "value": "QShaderLanguage::Vec3"
                }
            },
            "type": "join2",
            "uuid": "{00c30ec0-689d-4f9c-8e85-ba11b102e938}"
        },
        {
            "layers": [
            ],
            "parameters": {
                "constant": "1.0",
                "type": {
                    "type": "QShaderLanguage::VariableType",
                    "value": "QShaderLanguage::Float"
                }
            },
            "type": "constant",
            "uuid": "{8c89143e-ae2a-4fa7-949f-a9c30dcd7c60}"
        },
        {
            "layers": [
            ],
            "parameters": {
                "firstType": {
                    "type": "QShaderLanguage::VariableType",
                    "value": "QShaderLanguage::Mat4"
                },
                "secondType": {
                    "type": "QShaderLanguage::VariableType",
                    "value": "QShaderLanguage::Mat4"
                },
                "type": {
                    "type": "QShaderLanguage::VariableType",
                    "value": "QShaderLanguage::Mat4"
                }
            },
            "type": "multiply",
            "uuid": "{6e38b553-3aed-4f06-911b-55f5a79f42b0}"
        }
    ],
    "prototypes": {
        "cast": {
            "inputs": [
                "input"
            ],
            "name": "cast",
            "outputs": [
                "output"
            ],
            "parameters": {
                "inputType": {
                    "type": "QShaderLanguage::VariableType",
                    "value": "QShaderLanguage::Float"
                },
                "type": {
                    "type": "QShaderLanguage::VariableType",
                    "value": "QShaderLanguage::Vec3"
                }
            },
            "rules": [
                {
                    "format": {
                        "api": "OpenGLES",
                        "major": 2,
                        "minor": 0
                    },
                    "headerSnippets": [
                    ],
                    "substitution": "highp $type $output = $type($input);"
                },
                {
                    "format": {
                        "api": "OpenGLCoreProfile",
                        "major": 3,
                        "minor": 0
                    },
                    "headerSnippets": [
                    ],
                    "substitution": "$type $output = $type($input);"
                },
                {
                    "format": {
                        "api": "RHI",
                        "major": 1,
                        "minor": 0
                    },
                    "headerSnippets": [
                    ],
                    "substitution": "$type $output = $type($input);"
                }
            ]
        },
        "constant": {
            "inputs": [
            ],
            "name": "constant",
            "outputs": [
                "value"
            ],
            "parameters": {
                "constant": {
                    "type": "QString",
                    "value": "0.0"
                },
                "type": {
                    "type": "QShaderLanguage::VariableType",
                    "value": "QShaderLanguage::Float"
                }
            },
            "rules": [
                {
                    "format": {
                        "api": "OpenGLES",
                        "major": 2,
                        "minor": 0
                    },
                    "headerSnippets": [
                    ],
                    "substitution": "highp $type $value = $type($constant);"
                },
                {
                    "format": {
                        "api": "OpenGLCoreProfile",
                        "major": 3,
                        "minor": 0
                    },
                    "headerSnippets": [
                    ],
                    "substitution": "$type $value = $type($constant);"
                },
                {
                    "format": {
                        "api": "RHI",
                        "major": 1,
                        "minor": 0
                    },
                    "headerSnippets": [
                    ],
                    "substitution": "$type $value = $type($constant);"
                }
            ]
        },
        "gl_Position": {
            "inputs": [
                "position"
            ],
            "name": "gl_Position",
            "outputs": [
            ],
            "parameters": {
            },
            "rules": [
                {
                    "format": {
                        "api": "OpenGLES",
                        "major": 2,
                        "minor": 0
                    },
                    "headerSnippets": [
                    ],
                    "substitution": "gl_Position = $position;"
                },
                {
                    "format": {
                        "api": "OpenGLES",
                        "major": 3,
                        "minor": 0
                    },
                    "headerSnippets": [
                    ],
                    "substitution": "gl_Position = $position;"
                },
                {
                    "format": {
                        "api": "OpenGLCoreProfile",
                        "major": 3,
                        "minor": 0
                    },
                    "headerSnippets": [
                    ],
                    "substitution": "gl_Position = $position;"
                },
                {
                    "format": {
                        "api": "RHI",
                        "major": 1,
                        "minor": 0
                    },
                    "headerSnippets": [
                    ],
                    "substitution": "gl_Position = $position;"
                }
            ]
        },
        "input": {
            "inputs": [
            ],
            "name": "input",
            "outputs": [
                "value"
            ],
            "parameters": {
                "location": {
                    "type": "QString",
                    "value": "0"
                },
                "name": {
                    "type": "QString",
                    "value": "defaultName"
                },
                "type": {
                    "type": "QShaderLanguage::VariableType",
                    "value": "QShaderLanguage::Vec3"
                }
            },
            "rules": [
                {
                    "format": {
                        "api": "OpenGLES",
                        "major": 2,
                        "minor": 0
                    },
                    "headerSnippets": [
                        "attribute highp $type $name;"
                    ],
                    "substitution": "highp $type $value = $name;"
                },
                {
                    "format": {
                        "api": "OpenGLES",
                        "major": 3,
                        "minor": 0
                    },
                    "headerSnippets": [
                        "in highp $type $name;"
                    ],
                    "substitution": "highp $type $value = $name;"
                },
                {
                    "format": {
                        "api": "OpenGLCoreProfile",
                        "major": 3,
                        "minor": 0
                    },
                    "headerSnippets": [
                        "in $type $name;"
                    ],
                    "substitution": "$type $value = $name;"
                },
                {
                    "format": {
                        "api": "RHI",
                        "major": 1,
                        "minor": 0
                    },
                    "headerSnippets": [
                        "layout(location = $location) in $type $name;"
                    ],
                    "substitution": "$type $value = $name;"
                }
            ]
        },
        "join2": {
            "inputs": [
                "first",
                "second"
            ],
            "name": "join2",
            "outputs": [
                "output"
            ],
            "parameters": {
                "type": {
                    "type": "QShaderLanguage::VariableType",
                    "value": "QShaderLanguage::Vec2"
                },
                "typeOfFirst": {
                    "type": "QShaderLanguage::VariableType",
                    "value": "QShaderLanguage::Float"
                },
                "typeOfSecond": {
                    "type": "QShaderLanguage::VariableType",
                    "value": "QShaderLanguage::Float"
                }
            },
            "rules": [
                {
                    "format": {
                        "api": "OpenGLES",
                        "major": 2,
                        "minor": 0
                    },
                    "headerSnippets": [
                    ],
                    "substitution": "highp $type $output = $type($first, $second);"
                },
                {
                    "format": {
                        "api": "OpenGLCoreProfile",
                        "major": 3,
                        "minor": 0
                    },
                    "headerSnippets": [
                    ],
                    "substitution": "$type $output = $type($first, $second);"
                },
                {
                    "format": {
                        "api": "RHI",
                        "major": 1,
                        "minor": 0
                    },
                    "headerSnippets": [
                    ],
                    "substitution": "$type $output = $type($first, $second);"
                }
            ]
        },
        "multiply": {
            "inputs": [
                "first",
                "second"
            ],
            "name": "multiply",
            "outputs": [
                "product"
            ],
            "parameters": {
                "firstType": {
                    "type": "QShaderLanguage::VariableType",
                    "value": "QShaderLanguage::Vec3"
                },
                "secondType": {
                    "type": "QShaderLanguage::VariableType",
                    "value": "QShaderLanguage::Vec3"
                },
                "type": {
                    "type": "QShaderLanguage::VariableType",
                    "value": "QShaderLanguage::Vec3"
                }
            },
            "rules": [
                {
                    "format": {
                        "api": "OpenGLES",
                        "major": 2,
                        "minor": 0
                    },
                    "headerSnippets": [
                    ],
                    "substitution": "highp $type $product = $first * $second;"
                },
                {
                    "format": {
                        "api": "OpenGLCoreProfile",
                        "major": 3,
                        "minor": 0
                    },
                    "headerSnippets": [
                    ],
                    "substitution": "$type $product = $first * $second;"
                },
                {
                    "format": {
                        "api": "RHI",
                        "major": 1,
                        "minor": 0
                    },
                    "headerSnippets": [
                    ],
                    "substitution": "$type $product = $first * $second;"
                }
            ]
        },
        "output": {
            "inputs": [
                "value"
            ],
            "name": "output",
            "outputs": [
            ],
            "parameters": {
                "location": {
                    "type": "QString",
                    "value": "0"
                },
                "name": {
                    "type": "QString",
                    "value": "defaultName"
                },
                "type": {
                    "type": "QShaderLanguage::VariableType",
                    "value": "QShaderLanguage::Vec3"
                }
            },
            "rules": [
                {
                    "format": {
                        "api": "OpenGLES",
                        "major": 2,
                        "minor": 0
                    },
                    "headerSnippets": [
                        "varying highp $type $name;"
                    ],
                    "substitution": "$name = $value;"
                },
                {
                    "format": {
                        "api": "OpenGLES",
                        "major": 3,
                        "minor": 0
                    },
                    "headerSnippets": [
                        "out highp $type $name;"
                    ],
                    "substitution": "$name = $value;"
                },
                {
                    "format": {
                        "api": "OpenGLCoreProfile",
                        "major": 3,
                        "minor": 0
                    },
                    "headerSnippets": [
                        "out $type $name;"
                    ],
                    "substitution": "$name = $value;"
                },
                {
                    "format": {
                        "api": "RHI",
                        "major": 1,
                        "minor": 0
                    },
                    "headerSnippets": [
                        "layout(location = $location) out $type $name;"
                    ],
                    "substitution": "$name = $value;"
                }
            ]
        },
        "qt3d_default_uniforms": {
            "inputs": [
            ],
            "name": "qt3d_default_uniforms",
            "outputs": [
                "viewMatrix",
                "projectionMatrix",
                "viewProjectionMatrix",
                "inverseViewMatrix",
                "inverseProjectionMatrix",
                "inverseViewProjectionMatrix",
                "textureTransformMatrix",
                "eyePosition",
                "aspectRatio",
                "gamma",
                "exposure",
                "time",
                "modelMatrix",
                "inverseModelMatrix",
                "modelViewMatrix",
                "modelNormalMatrix",
                "mvp",
                "inverseModelViewProjectionMatrix"
            ],
            "parameters": {
            },
            "rules": [
                {
                    "format": {
                        "api": "OpenGLES",
                        "major": 2,
                        "minor": 0
                    },
                    "headerSnippets": [
                        "#pragma include :/kuesa/shaders/es2/qt3d_default_uniforms.inc"
                    ],
                    "substitution": "
                        highp mat4 $viewMatrix = viewMatrix;
                        highp mat4 $projectionMatrix = projectionMatrix;
                        highp mat4 $viewProjectionMatrix = viewProjectionMatrix;
                        highp mat4 $inverseViewMatrix = inverseViewMatrix;
                        highp mat4 $inverseProjectionMatrix = inverseProjectionMatrix;
                        highp mat4 $inverseViewProjectionMatrix = inverseViewProjectionMatrix;
                        highp mat4 $viewportMatrix = viewportMatrix;
                        highp mat4 $inverseViewportMatrix = inverseViewportMatrix;
                        highp vec4 $textureTransformMatrix = textureTransformMatrix;
                        highp vec3 $eyePosition = eyePosition;
                        highp float $aspectRatio = aspectRatio;
                        highp float $gamma = gamma;
                        highp float $exposure = exposure;
                        highp float $time = time;
                        highp mat4 $modelMatrix = modelMatrix;
                        highp mat4 $inverseModelMatrix = inverseModelMatrix;
                        highp mat4 $modelViewMatrix = modelViewMatrix;
                        highp mat3 $modelNormalMatrix = modelNormalMatrix;
                        highp mat4 $inverseModelViewMatrix = inverseModelViewMatrix;
                        highp mat4 $mvp = mvp;
                        highp mat4 $inverseModelViewProjectionMatrix = inverseModelViewProjectionMatrix;"
                },
                {
                    "format": {
                        "api": "OpenGLES",
                        "major": 3,
                        "minor": 0
                    },
                    "headerSnippets": [
                        "#pragma include :/kuesa/shaders/es3/qt3d_default_uniforms.inc"
                    ],
                    "substitution": "
                        highp mat4 $viewMatrix = viewMatrix;
                        highp mat4 $projectionMatrix = projectionMatrix;
                        highp mat4 $viewProjectionMatrix = viewProjectionMatrix;
                        highp mat4 $inverseViewMatrix = inverseViewMatrix;
                        highp mat4 $inverseProjectionMatrix = inverseProjectionMatrix;
                        highp mat4 $inverseViewProjectionMatrix = inverseViewProjectionMatrix;
                        highp mat4 $viewportMatrix = viewportMatrix;
                        highp mat4 $inverseViewportMatrix = inverseViewportMatrix;
                        highp vec4 $textureTransformMatrix = textureTransformMatrix;
                        highp vec3 $eyePosition = eyePosition;
                        highp float $aspectRatio = aspectRatio;
                        highp float $gamma = gamma;
                        highp float $exposure = exposure;
                        highp float $time = time;
                        highp mat4 $modelMatrix = modelMatrix;
                        highp mat4 $inverseModelMatrix = inverseModelMatrix;
                        highp mat4 $modelViewMatrix = modelViewMatrix;
                        highp mat3 $modelNormalMatrix = modelNormalMatrix;
                        highp mat4 $inverseModelViewMatrix = inverseModelViewMatrix;
                        highp mat4 $mvp = mvp;
                        highp mat4 $inverseModelViewProjectionMatrix = inverseModelViewProjectionMatrix;"
                },
                {
                    "format": {
                        "api": "OpenGLCoreProfile",
                        "major": 3,
                        "minor": 1
                    },
                    "headerSnippets": [
                        "#pragma include :/kuesa/shaders/gl3/qt3d_default_uniforms.inc"
                    ],
                    "substitution": "
                        mat4 $viewMatrix = viewMatrix;
                        mat4 $projectionMatrix = projectionMatrix;
                        mat4 $viewProjectionMatrix = viewProjectionMatrix;
                        mat4 $inverseViewMatrix = inverseViewMatrix;
                        mat4 $inverseProjectionMatrix = inverseProjectionMatrix;
                        mat4 $inverseViewProjectionMatrix = inverseViewProjectionMatrix;
                        mat4 $viewportMatrix = viewportMatrix;
                        mat4 $inverseViewportMatrix = inverseViewportMatrix;
                        vec4 $textureTransformMatrix = textureTransformMatrix;
                        vec3 $eyePosition = eyePosition;
                        float $aspectRatio = aspectRatio;
                        float $gamma = gamma;
                        float $exposure = exposure;
                        float $time = time;
                        mat4 $modelMatrix = modelMatrix;
                        mat4 $inverseModelMatrix = inverseModelMatrix;
                        mat4 $modelViewMatrix = modelViewMatrix;
                        mat3 $modelNormalMatrix = modelNormalMatrix;
                        mat4 $inverseModelViewMatrix = inverseModelViewMatrix;
                        mat4 $mvp = mvp;
                        mat4 $inverseModelViewProjectionMatrix = inverseModelViewProjectionMatrix;"
                },
                {
                    "format": {
                        "api": "RHI",
                        "major": 1,
                        "minor": 0
                    },
                    "headerSnippets": [
                        "#pragma include :/kuesa/shaders/gl45/qt3d_default_uniforms.inc"
                    ],
                    "substitution": "
                        mat4 $viewMatrix = viewMatrix;
                        mat4 $projectionMatrix = projectionMatrix;
                        mat4 $viewProjectionMatrix = viewProjectionMatrix;
                        mat4 $inverseViewMatrix = inverseViewMatrix;
                        mat4 $inverseProjectionMatrix = inverseProjectionMatrix;
                        mat4 $inverseViewProjectionMatrix = inverseViewProjectionMatrix;
                        mat4 $viewportMatrix = viewportMatrix;
                        mat4 $inverseViewportMatrix = inverseViewportMatrix;
                        vec4 $textureTransformMatrix = textureTransformMatrix;
                        vec3 $eyePosition = eyePosition;
                        float $aspectRatio = aspectRatio;
                        float $gamma = gamma;
                        float $exposure = exposure;
                        float $time = time;
                        mat4 $modelMatrix = modelMatrix;
                        mat4 $inverseModelMatrix = inverseModelMatrix;
                        mat4 $modelViewMatrix = modelViewMatrix;
                        mat3 $modelNormalMatrix = modelNormalMatrix;
                        mat4 $inverseModelViewMatrix = inverseModelViewMatrix;
                        mat4 $mvp = mvp;
                        mat4 $inverseModelViewProjectionMatrix = inverseModelViewProjectionMatrix;"
                }
            ]
        },
        "swizzle": {
            "inputs": [
                "input"
            ],
            "name": "swizzle",
            "outputs": [
                "output"
            ],
            "parameters": {
                "fields": {
                    "type": "QString",
                    "value": "xyz"
                },
                "inputType": {
                    "type": "QShaderLanguage::VariableType",
                    "value": "QShaderLanguage::Vec3"
                },
                "type": {
                    "type": "QShaderLanguage::VariableType",
                    "value": "QShaderLanguage::Vec3"
                }
            },
            "rules": [
                {
                    "format": {
                        "api": "OpenGLES",
                        "major": 2,
                        "minor": 0
                    },
                    "headerSnippets": [
                    ],
                    "substitution": "highp $type $output = ($input).$fields;"
                },
                {
                    "format": {
                        "api": "OpenGLCoreProfile",
                        "major": 3,
                        "minor": 0
                    },
                    "headerSnippets": [
                    ],
                    "substitution": "$type $output = ($input).$fields;"
                },
                {
                    "format": {
                        "api": "RHI",
                        "major": 1,
                        "minor": 0
                    },
                    "headerSnippets": [
                    ],
                    "substitution": "$type $output = ($input).$fields;"
                }
            ]
        }
    }
}
